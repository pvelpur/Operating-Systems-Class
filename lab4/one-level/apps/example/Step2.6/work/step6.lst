 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 253
    4                      ; Text size: 4424
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
   82  00003004  653a2025	
   82  00003008  73203c68	
   82  0000300c  616e646c	
   82  00003010  655f746f	
   82  00003014  5f70726f	
   82  00003018  63735f63	
   82  0000301c  6f6d706c	
   82  00003020  65746564	
   82  00003024  5f73656d	
   82  00003028  6170686f	
   82  0000302c  72653e0a	
   82  00003030  00      	
   83  00003031          	.align 2
   84  00003034          	LC1_LF0:
   85  00003034  53746570	.ascii "Step 2.6 (%d): Loop through large number and print message before exit"
   85  00003038  20322e36	
   85  0000303c  20282564	
   85  00003040  293a204c	
   85  00003044  6f6f7020	
   85  00003048  7468726f	
   85  0000304c  75676820	
   85  00003050  6c617267	
   85  00003054  65206e75	
   85  00003058  6d626572	
   85  0000305c  20616e64	
   85  00003060  20707269	
   85  00003064  6e74206d	
   85  00003068  65737361	
   85  0000306c  67652062	
   85  00003070  65666f72	
   85  00003074  65206578	
   85  00003078  6974    	
   86  0000307a  696e670a	.ascii "ing\n\000"
   86  0000307e  00      	
   87  0000307f          	.align 2
   88  00003080          	LC2_LF0:
   89  00003080  4c6f6f70	.ascii "Looping start, count to 500000\n\000"
   89  00003084  696e6720	
   89  00003088  73746172	
   89  0000308c  742c2063	
   89  00003090  6f756e74	
   89  00003094  20746f20	
   89  00003098  35303030	
   89  0000309c  30300a00	
   90  000030a0          	.align 2
   91  000030a0          	LC3_LF0:
   92  000030a0  4c6f6f70	.ascii "Looping Finish\000"
   92  000030a4  696e6720	
   92  000030a8  46696e69	
   92  000030ac  736800  	
   93  000030af          	.align 2
   94  000030b0          	LC4_LF0:
   95  000030b0  53746570	.ascii "Step2.5 (%d): Bad semaphore s_procs_completed (%d)!\n\000"
   95  000030b4  322e3520	
   95  000030b8  28256429	
   95  000030bc  3a204261	
   95  000030c0  64207365	
   95  000030c4  6d617068	
   95  000030c8  6f726520	
   95  000030cc  735f7072	
   95  000030d0  6f63735f	
   95  000030d4  636f6d70	
   95  000030d8  6c657465	
   95  000030dc  64202825	
   95  000030e0  6429210a	
   95  000030e4  00      	
   96  000030e5          	.align 2
   97  000030e8          	LC5_LF0:
   98  000030e8  53746570	.ascii "Step2.5 (%d): Done!\n\000"
   98  000030ec  322e3520	
   98  000030f0  28256429	
   98  000030f4  3a20446f	
   98  000030f8  6e65210a	
   98  000030fc  00      	
   99  000030fd          	.text
  100  000010d4          	.align 2
  101  000010d4          	.proc _main
  102  000010d4          	.global _main
  103  000010d4          	_main:
  104                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  105  000010d4  afbefffc	sw	-4(r29),r30; push fp
  106  000010d8  001df020	add	r30,r0,r29; fp = sp
  107  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  108  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  109  000010e4  8fc20000	lw	r2,(r30)
  110  000010e8  8fc30004	lw	r3,4(r30)
  111  000010ec  0c001050	jal	___main
  112  000010f0  54000000	nop; not filled.
  113  000010f4  64410002	snei	r1,r2,#2
  114  000010f8  10200028	beqz	r1,L22_LF0
  115  000010fc  54000000	nop; not filled.
  116  00001100  23bdfff8	addi	r29,r29,#-8
  117  00001104  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  118  00001108  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  119  0000110c  afa40000	sw	(r29),r4
  120  00001110  0c00016c	jal	_Printf
  121  00001114  54000000	nop; not filled.
  122  00001118  0c00026c	jal	_Exit
  123  0000111c  54000000	nop; not filled.
  124  00001120  23bd0008	addi	r29,r29,#8
  125  00001124          	L22_LF0:
  126  00001124  23bdfff0	addi	r29,r29,#-16
  127  00001128  8c630004	lw	r3,4(r3)
  128  0000112c  afa30000	sw	(r29),r3
  129  00001130  20040000	addi	r4,r0,#0
  130  00001134  afa40004	sw	4(r29),r4
  131  00001138  2004000a	addi	r4,r0,#10
  132  0000113c  afa40008	sw	8(r29),r4
  133  00001140  0c000b00	jal	_dstrtol
  134  00001144  54000000	nop; not filled.
  135  00001148  00011820	add	r3,r0,r1
  136  0000114c  0c00013c	jal	_getpid
  137  00001150  54000000	nop; not filled.
  138  00001154  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  139  00001158  24843034	addui	r4,r4,(LC1_LF0)&0xffff
  140  0000115c  afa40000	sw	(r29),r4
  141  00001160  afa10004	sw	4(r29),r1
  142  00001164  0c000118	jal	_Printf
  143  00001168  54000000	nop; not filled.
  144  0000116c  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  145  00001170  24843080	addui	r4,r4,(LC2_LF0)&0xffff
  146  00001174  afa40000	sw	(r29),r4
  147  00001178  0c000104	jal	_Printf
  148  0000117c  54000000	nop; not filled.
  149  00001180  20020000	addi	r2,r0,#0
  150  00001184  23bd0010	addi	r29,r29,#16
  151  00001188  3c1f0007	lhi	r31,#7
  152  0000118c  27ffa11f	addui	r31,r31,#41247
  153  00001190          	L25_LF0:
  154  00001190  20420001	addi	r2,r2,#1
  155  00001194  005f082c	sle	r1,r2,r31
  156  00001198  1420fff4	bnez	r1,L25_LF0
  157  0000119c  54000000	nop; not filled.
  158  000011a0  23bdfff8	addi	r29,r29,#-8
  159  000011a4  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  160  000011a8  248430a0	addui	r4,r4,(LC3_LF0)&0xffff
  161  000011ac  afa40000	sw	(r29),r4
  162  000011b0  0c0000cc	jal	_Printf
  163  000011b4  54000000	nop; not filled.
  164  000011b8  afa30000	sw	(r29),r3
  165  000011bc  0c000114	jal	_sem_signal
  166  000011c0  54000000	nop; not filled.
  167  000011c4  23bd0008	addi	r29,r29,#8
  168  000011c8  64210001	snei	r1,r1,#1
  169  000011cc  10200038	beqz	r1,L28_LF0
  170  000011d0  54000000	nop; not filled.
  171  000011d4  0c0000b4	jal	_getpid
  172  000011d8  54000000	nop; not filled.
  173  000011dc  23bdfff0	addi	r29,r29,#-16
  174  000011e0  3c040000	lhi	r4,((LC4_LF0)>>16)&0xffff
  175  000011e4  248430b0	addui	r4,r4,(LC4_LF0)&0xffff
  176  000011e8  afa40000	sw	(r29),r4
  177  000011ec  afa10004	sw	4(r29),r1
  178  000011f0  afa30008	sw	8(r29),r3
  179  000011f4  0c000088	jal	_Printf
  180  000011f8  54000000	nop; not filled.
  181  000011fc  0c000188	jal	_Exit
  182  00001200  54000000	nop; not filled.
  183  00001204  23bd0010	addi	r29,r29,#16
  184  00001208          	L28_LF0:
  185  00001208  0c000080	jal	_getpid
  186  0000120c  54000000	nop; not filled.
  187  00001210  23bdfff8	addi	r29,r29,#-8
  188  00001214  3c040000	lhi	r4,((LC5_LF0)>>16)&0xffff
  189  00001218  248430e8	addui	r4,r4,(LC5_LF0)&0xffff
  190  0000121c  afa40000	sw	(r29),r4
  191  00001220  afa10004	sw	4(r29),r1
  192  00001224  0c000058	jal	_Printf
  193  00001228  54000000	nop; not filled.
  194  0000122c  23bd0008	addi	r29,r29,#8
  195  00001230  0c000f00	jal	_exit
  196  00001234  54000000	nop
  197  00001238          	.endproc _main
  198                      ;;;
  199                      ;;; Stub functions for DLX traps.
  200                      ;;;
  201                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  202                      ;;;
  203                      ;;; The traps such as Open and Close
  204                      ;;; (note the capital letters) are for use by user programs.  The traps
  205                      ;;; with names such as open and close (lower case) are for use by the OS.
  206                      ;;;
  209  00001238          	.align 2
  211                      ;;; The following are the traps to be used by user-level programs
  212                      ;;;
  214  00001238          	.align 2
  215  00001238          	.proc _Open
  216  00001238          	.global _Open
  217  00001238          	_Open:
  218                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  219                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  220                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  221  00001238  44000213	trap	#0x213
  222  0000123c  4be00000	jr	r31
  223  00001240  54000000	nop
  224  00001244          	.endproc _Open
  226  00001244          	.proc _Close
  227  00001244          	.global _Close
  228  00001244          	_Close:
  229  00001244  44000214	trap	#0x214
  230  00001248  4be00000	jr	r31
  231  0000124c  54000000	nop
  232  00001250          	.endproc _Close
  234  00001250          	.proc _Read
  235  00001250          	.global _Read
  236  00001250          	_Read:
  237  00001250  44000210	trap	#0x210
  238  00001254  4be00000	jr	r31
  239  00001258  54000000	nop
  240  0000125c          	.endproc _Read
  242  0000125c          	.proc _Write
  243  0000125c          	.global _Write
  244  0000125c          	_Write:
  245  0000125c  44000211	trap	#0x211
  246  00001260  4be00000	jr	r31
  247  00001264  54000000	nop
  248  00001268          	.endproc _Write
  250  00001268          	.proc _Lseek
  251  00001268          	.global _Lseek
  252  00001268          	_Lseek:
  253  00001268  44000212	trap	#0x212
  254  0000126c  4be00000	jr	r31
  255  00001270  54000000	nop
  256  00001274          	.endproc _Lseek
  258  00001274          	.proc _Putchar
  259  00001274          	.global _Putchar
  260  00001274          	_Putchar:
  261  00001274  44000280	trap	#0x280
  262  00001278  4be00000	jr	r31
  263  0000127c  54000000	nop
  264  00001280          	.endproc _Putchar
  266  00001280          	.proc _Printf
  267  00001280          	.global _Printf
  268  00001280          	_Printf:
  269  00001280  44000201	trap	#0x201
  270  00001284  4be00000	jr	r31
  271  00001288  54000000	nop
  272  0000128c          	.endproc _Printf
  274  0000128c          	.proc _getpid
  275  0000128c          	.global _getpid
  276  0000128c          	_getpid:
  277  0000128c  44000431	trap	#0x431
  278  00001290  4be00000	jr	r31
  279  00001294  54000000	nop
  280  00001298          	.endproc _getpid
  282  00001298          	.proc _process_create
  283  00001298          	.global _process_create
  284  00001298          	_process_create:
  285  00001298  44000432	trap	#0x432
  286  0000129c  4be00000	jr	r31
  287  000012a0  54000000	nop
  288  000012a4          	.endproc _process_create
  290  000012a4          	.proc _shmget
  291  000012a4          	.global _shmget
  292  000012a4          	_shmget:
  293  000012a4  44000440	trap	#0x440
  294  000012a8  4be00000	jr	r31
  295  000012ac  54000000	nop
  296  000012b0          	.endproc _shmget
  298  000012b0          	.proc _shmat
  299  000012b0          	.global _shmat
  300  000012b0          	_shmat:
  301  000012b0  44000441	trap	#0x441
  302  000012b4  4be00000	jr	r31
  303  000012b8  54000000	nop
  304  000012bc          	.endproc _shmat
  306  000012bc          	.proc _sem_create
  307  000012bc          	.global _sem_create
  308  000012bc          	_sem_create:
  309  000012bc  44000450	trap	#0x450
  310  000012c0  4be00000	jr	r31
  311  000012c4  54000000	nop
  312  000012c8          	.endproc _sem_create
  314  000012c8          	.proc _sem_wait
  315  000012c8          	.global _sem_wait
  316  000012c8          	_sem_wait:
  317  000012c8  44000451	trap	#0x451
  318  000012cc  4be00000	jr	r31
  319  000012d0  54000000	nop
  320  000012d4          	.endproc _sem_wait
  322  000012d4          	.proc _sem_signal
  323  000012d4          	.global _sem_signal
  324  000012d4          	_sem_signal:
  325  000012d4  44000452	trap	#0x452
  326  000012d8  4be00000	jr	r31
  327  000012dc  54000000	nop
  328  000012e0          	.endproc _sem_signal
  330  000012e0          	.proc _lock_create
  331  000012e0          	.global _lock_create
  332  000012e0          	_lock_create:
  333  000012e0  44000453	trap	#0x453
  334  000012e4  4be00000	jr	r31
  335  000012e8  54000000	nop
  336  000012ec          	.endproc _lock_create
  338  000012ec          	.proc _lock_acquire
  339  000012ec          	.global _lock_acquire
  340  000012ec          	_lock_acquire:
  341  000012ec  44000454	trap	#0x454
  342  000012f0  4be00000	jr	r31
  343  000012f4  54000000	nop
  344  000012f8          	.endproc _lock_acquire
  346  000012f8          	.proc _lock_release
  347  000012f8          	.global _lock_release
  348  000012f8          	_lock_release:
  349  000012f8  44000455	trap	#0x455
  350  000012fc  4be00000	jr	r31
  351  00001300  54000000	nop
  352  00001304          	.endproc _lock_release
  354  00001304          	.proc _cond_create
  355  00001304          	.global _cond_create
  356  00001304          	_cond_create:
  357  00001304  44000456	trap	#0x456
  358  00001308  4be00000	jr	r31
  359  0000130c  54000000	nop
  360  00001310          	.endproc _cond_create
  362  00001310          	.proc _cond_wait
  363  00001310          	.global _cond_wait
  364  00001310          	_cond_wait:
  365  00001310  44000457	trap	#0x457
  366  00001314  4be00000	jr	r31
  367  00001318  54000000	nop
  368  0000131c          	.endproc _cond_wait
  370  0000131c          	.proc _cond_signal
  371  0000131c          	.global _cond_signal
  372  0000131c          	_cond_signal:
  373  0000131c  44000458	trap	#0x458
  374  00001320  4be00000	jr	r31
  375  00001324  54000000	nop
  376  00001328          	.endproc _cond_signal
  378  00001328          	.proc _cond_broadcast
  379  00001328          	.global _cond_broadcast
  380  00001328          	_cond_broadcast:
  381  00001328  44000459	trap	#0x459
  382  0000132c  4be00000	jr	r31
  383  00001330  54000000	nop
  384  00001334          	.endproc _cond_broadcast
  386  00001334          	.proc _mbox_create
  387  00001334          	.global _mbox_create
  388  00001334          	_mbox_create:
  389  00001334  44000460	trap	#0x460
  390  00001338  4be00000	jr	r31
  391  0000133c  54000000	nop
  392  00001340          	.endproc _mbox_create
  394  00001340          	.proc _mbox_open
  395  00001340          	.global _mbox_open
  396  00001340          	_mbox_open:
  397  00001340  44000461	trap	#0x461
  398  00001344  4be00000	jr	r31
  399  00001348  54000000	nop
  400  0000134c          	.endproc _mbox_open
  402  0000134c          	.proc _mbox_close
  403  0000134c          	.global _mbox_close
  404  0000134c          	_mbox_close:
  405  0000134c  44000462	trap	#0x462
  406  00001350  4be00000	jr	r31
  407  00001354  54000000	nop
  408  00001358          	.endproc _mbox_close
  410  00001358          	.proc _mbox_send
  411  00001358          	.global _mbox_send
  412  00001358          	_mbox_send:
  413  00001358  44000463	trap	#0x463
  414  0000135c  4be00000	jr	r31
  415  00001360  54000000	nop
  416  00001364          	.endproc _mbox_send
  418  00001364          	.proc _mbox_recv
  419  00001364          	.global _mbox_recv
  420  00001364          	_mbox_recv:
  421  00001364  44000464	trap	#0x464
  422  00001368  4be00000	jr	r31
  423  0000136c  54000000	nop
  424  00001370          	.endproc _mbox_recv
  426  00001370          	.proc _sleep
  427  00001370          	.global _sleep
  428  00001370          	_sleep:
  429  00001370  44000465	trap	#0x465
  430  00001374  4be00000	jr	r31
  431  00001378  54000000	nop
  432  0000137c          	.endproc _sleep
  434  0000137c          	.proc _yield
  435  0000137c          	.global _yield
  436  0000137c          	_yield:
  437  0000137c  44000466	trap	#0x466
  438  00001380  4be00000	jr	r31
  439  00001384  54000000	nop
  440  00001388          	.endproc _yield
  443  00001388          	.proc _Exit
  444  00001388          	.global _Exit
  445  00001388          	_Exit:
  446  00001388  44000500	trap	#0x500
  447  0000138c  4be00000	jr	r31
  448  00001390  54000000	nop
  449  00001394          	.endproc _Exit
  452  00001394          	.proc _malloc
  453  00001394          	.global _malloc
  454  00001394          	_malloc:
  455  00001394  44000467	trap	#0x467
  456  00001398  4be00000	jr	r31
  457  0000139c          	.endproc _malloc
  460  0000139c          	.proc _mfree
  461  0000139c          	.global _mfree
  462  0000139c          	_mfree:
  463  0000139c  44000468	trap	#0x468
  464  000013a0  4be00000	jr	r31
  465  000013a4          	.endproc _mfree
  466                      ; Compiled by GCC
  468  000013a4          	.align 2
  469  000013a4          	.proc _isspace
  470  000013a4          	.global _isspace
  471  000013a4          	_isspace:
  472                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  473  000013a4  afbefffc	sw	-4(r29),r30; push fp
  474  000013a8  001df020	add	r30,r0,r29; fp = sp
  475  000013ac  afbffff8	sw	-8(r29),r31; push ret addr
  476  000013b0  2fbd0018	subui	r29,r29,#24; alloc local storage
  477  000013b4  afa20000	sw	0(r29),r2
  478  000013b8  afa30004	sw	4(r29),r3
  479  000013bc  afa40008	sw	8(r29),r4
  480  000013c0  83c20003	lb	r2,3(r30)
  481  000013c4  20010000	addi	r1,r0,#0
  482  000013c8  304300ff	andi	r3,r2,#0x00ff
  483  000013cc  60640020	seqi	r4,r3,#32
  484  000013d0  1480002c	bnez	r4,L3_LF2
  485  000013d4  54000000	nop; delay slot nop
  486  000013d8  304300ff	andi	r3,r2,#0x00ff
  487  000013dc  60640009	seqi	r4,r3,#9
  488  000013e0  1480001c	bnez	r4,L3_LF2
  489  000013e4  54000000	nop; delay slot nop
  490  000013e8  304300ff	andi	r3,r2,#0x00ff
  491  000013ec  6064000a	seqi	r4,r3,#10
  492  000013f0  1480000c	bnez	r4,L3_LF2
  493  000013f4  54000000	nop; delay slot nop
  494  000013f8  08000008	j	L2_LF2
  495  000013fc  54000000	nop; delay slot nop
  496  00001400          	L3_LF2:
  497  00001400  20010001	addi	r1,r0,#1
  498  00001404          	L2_LF2:
  499  00001404  08000004	j	L1_LF2
  500  00001408  54000000	nop; delay slot nop
  501  0000140c          	L1_LF2:
  502  0000140c  8fa20000	lw	r2,0(r29)
  503  00001410  8fa30004	lw	r3,4(r29)
  504  00001414  8fa40008	lw	r4,8(r29)
  505  00001418  8fdffff8	lw	r31,-8(r30)
  506  0000141c  001ee820	add	r29,r0,r30
  507  00001420  8fdefffc	lw	r30,-4(r30)
  508  00001424  4be00000	jr	r31
  509  00001428  54000000	nop
  510  0000142c          	.endproc _isspace
  511  0000142c          	.align 2
  512  0000142c          	.proc _isxdigit
  513  0000142c          	.global _isxdigit
  514  0000142c          	_isxdigit:
  515                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  516  0000142c  afbefffc	sw	-4(r29),r30; push fp
  517  00001430  001df020	add	r30,r0,r29; fp = sp
  518  00001434  afbffff8	sw	-8(r29),r31; push ret addr
  519  00001438  2fbd0018	subui	r29,r29,#24; alloc local storage
  520  0000143c  afa20000	sw	0(r29),r2
  521  00001440  afa30004	sw	4(r29),r3
  522  00001444  afa40008	sw	8(r29),r4
  523  00001448  83c20003	lb	r2,3(r30)
  524  0000144c  20010000	addi	r1,r0,#0
  525  00001450  304300ff	andi	r3,r2,#0x00ff
  526  00001454  6c64002f	sgtui	r4,r3,#47
  527  00001458  1080001c	beqz	r4,L7_LF2
  528  0000145c  54000000	nop; delay slot nop
  529  00001460  304300ff	andi	r3,r2,#0x00ff
  530  00001464  70640039	sleui	r4,r3,#57
  531  00001468  1480005c	bnez	r4,L6_LF2
  532  0000146c  54000000	nop; delay slot nop
  533  00001470  08000004	j	L7_LF2
  534  00001474  54000000	nop; delay slot nop
  535  00001478          	L7_LF2:
  536  00001478  304300ff	andi	r3,r2,#0x00ff
  537  0000147c  6c640060	sgtui	r4,r3,#96
  538  00001480  1080001c	beqz	r4,L8_LF2
  539  00001484  54000000	nop; delay slot nop
  540  00001488  304300ff	andi	r3,r2,#0x00ff
  541  0000148c  70640066	sleui	r4,r3,#102
  542  00001490  14800034	bnez	r4,L6_LF2
  543  00001494  54000000	nop; delay slot nop
  544  00001498  08000004	j	L8_LF2
  545  0000149c  54000000	nop; delay slot nop
  546  000014a0          	L8_LF2:
  547  000014a0  304300ff	andi	r3,r2,#0x00ff
  548  000014a4  6c640040	sgtui	r4,r3,#64
  549  000014a8  10800020	beqz	r4,L5_LF2
  550  000014ac  54000000	nop; delay slot nop
  551  000014b0  304300ff	andi	r3,r2,#0x00ff
  552  000014b4  70640041	sleui	r4,r3,#65
  553  000014b8  1480000c	bnez	r4,L6_LF2
  554  000014bc  54000000	nop; delay slot nop
  555  000014c0  08000008	j	L5_LF2
  556  000014c4  54000000	nop; delay slot nop
  557  000014c8          	L6_LF2:
  558  000014c8  20010001	addi	r1,r0,#1
  559  000014cc          	L5_LF2:
  560  000014cc  08000004	j	L4_LF2
  561  000014d0  54000000	nop; delay slot nop
  562  000014d4          	L4_LF2:
  563  000014d4  8fa20000	lw	r2,0(r29)
  564  000014d8  8fa30004	lw	r3,4(r29)
  565  000014dc  8fa40008	lw	r4,8(r29)
  566  000014e0  8fdffff8	lw	r31,-8(r30)
  567  000014e4  001ee820	add	r29,r0,r30
  568  000014e8  8fdefffc	lw	r30,-4(r30)
  569  000014ec  4be00000	jr	r31
  570  000014f0  54000000	nop
  571  000014f4          	.endproc _isxdigit
  572  000014f4          	.align 2
  573  000014f4          	.proc _dstrcpy
  574  000014f4          	.global _dstrcpy
  575  000014f4          	_dstrcpy:
  576                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  577  000014f4  afbefffc	sw	-4(r29),r30; push fp
  578  000014f8  001df020	add	r30,r0,r29; fp = sp
  579  000014fc  afbffff8	sw	-8(r29),r31; push ret addr
  580  00001500  2fbd0018	subui	r29,r29,#24; alloc local storage
  581  00001504  afa20000	sw	0(r29),r2
  582  00001508  afa30004	sw	4(r29),r3
  583  0000150c  8fc10000	lw	r1,(r30)
  584  00001510  afc1fff4	sw	-12(r30),r1
  585  00001514          	L10_LF2:
  586  00001514  8fc10000	lw	r1,(r30)
  587  00001518  20220001	addi	r2,r1,#1
  588  0000151c  afc20000	sw	(r30),r2
  589  00001520  8fc20004	lw	r2,4(r30)
  590  00001524  20430001	addi	r3,r2,#1
  591  00001528  afc30004	sw	4(r30),r3
  592  0000152c  80420000	lb	r2,(r2)
  593  00001530  a0220000	sb	(r1),r2
  594  00001534  a3c2fff3	sb	-13(r30),r2
  595  00001538          	L12_LF2:
  596  00001538  93c1fff3	lbu	r1,-13(r30)
  597  0000153c  64220000	snei	r2,r1,#0
  598  00001540  1440000c	bnez	r2,L13_LF2
  599  00001544  54000000	nop; delay slot nop
  600  00001548  0800000c	j	L11_LF2
  601  0000154c  54000000	nop; delay slot nop
  602  00001550          	L13_LF2:
  603  00001550  0bffffc0	j	L10_LF2
  604  00001554  54000000	nop; delay slot nop
  605  00001558          	L11_LF2:
  606  00001558  8fc1fff4	lw	r1,-12(r30)
  607  0000155c  08000004	j	L9_LF2
  608  00001560  54000000	nop; delay slot nop
  609  00001564          	L9_LF2:
  610  00001564  8fa20000	lw	r2,0(r29)
  611  00001568  8fa30004	lw	r3,4(r29)
  612  0000156c  8fdffff8	lw	r31,-8(r30)
  613  00001570  001ee820	add	r29,r0,r30
  614  00001574  8fdefffc	lw	r30,-4(r30)
  615  00001578  4be00000	jr	r31
  616  0000157c  54000000	nop
  617  00001580          	.endproc _dstrcpy
  618  00001580          	.align 2
  619  00001580          	.proc _dstrncpy
  620  00001580          	.global _dstrncpy
  621  00001580          	_dstrncpy:
  622                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  623  00001580  afbefffc	sw	-4(r29),r30; push fp
  624  00001584  001df020	add	r30,r0,r29; fp = sp
  625  00001588  afbffff8	sw	-8(r29),r31; push ret addr
  626  0000158c  2fbd0018	subui	r29,r29,#24; alloc local storage
  627  00001590  afa20000	sw	0(r29),r2
  628  00001594  afa30004	sw	4(r29),r3
  629  00001598  8fc10000	lw	r1,(r30)
  630  0000159c  afc1fff4	sw	-12(r30),r1
  631  000015a0          	L15_LF2:
  632  000015a0  8fc10008	lw	r1,8(r30)
  633  000015a4  2022ffff	addi	r2,r1,#-1
  634  000015a8  afc20008	sw	8(r30),r2
  635  000015ac  70210000	slei	r1,r1,#0
  636  000015b0  1020000c	beqz	r1,L18_LF2
  637  000015b4  54000000	nop; delay slot nop
  638  000015b8  08000048	j	L16_LF2
  639  000015bc  54000000	nop; delay slot nop
  640  000015c0          	L18_LF2:
  641  000015c0  8fc10000	lw	r1,(r30)
  642  000015c4  20220001	addi	r2,r1,#1
  643  000015c8  afc20000	sw	(r30),r2
  644  000015cc  8fc20004	lw	r2,4(r30)
  645  000015d0  20430001	addi	r3,r2,#1
  646  000015d4  afc30004	sw	4(r30),r3
  647  000015d8  80420000	lb	r2,(r2)
  648  000015dc  a0220000	sb	(r1),r2
  649  000015e0  a3c2fff3	sb	-13(r30),r2
  650  000015e4          	L17_LF2:
  651  000015e4  93c1fff3	lbu	r1,-13(r30)
  652  000015e8  64220000	snei	r2,r1,#0
  653  000015ec  1440000c	bnez	r2,L19_LF2
  654  000015f0  54000000	nop; delay slot nop
  655  000015f4  0800000c	j	L16_LF2
  656  000015f8  54000000	nop; delay slot nop
  657  000015fc          	L19_LF2:
  658  000015fc  0bffffa0	j	L15_LF2
  659  00001600  54000000	nop; delay slot nop
  660  00001604          	L16_LF2:
  661  00001604  8fc1fff4	lw	r1,-12(r30)
  662  00001608  08000004	j	L14_LF2
  663  0000160c  54000000	nop; delay slot nop
  664  00001610          	L14_LF2:
  665  00001610  8fa20000	lw	r2,0(r29)
  666  00001614  8fa30004	lw	r3,4(r29)
  667  00001618  8fdffff8	lw	r31,-8(r30)
  668  0000161c  001ee820	add	r29,r0,r30
  669  00001620  8fdefffc	lw	r30,-4(r30)
  670  00001624  4be00000	jr	r31
  671  00001628  54000000	nop
  672  0000162c          	.endproc _dstrncpy
  673  0000162c          	.align 2
  674  0000162c          	.proc _dstrcat
  675  0000162c          	.global _dstrcat
  676  0000162c          	_dstrcat:
  677                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  678  0000162c  afbefffc	sw	-4(r29),r30; push fp
  679  00001630  001df020	add	r30,r0,r29; fp = sp
  680  00001634  afbffff8	sw	-8(r29),r31; push ret addr
  681  00001638  2fbd0018	subui	r29,r29,#24; alloc local storage
  682  0000163c  afa20000	sw	0(r29),r2
  683  00001640  8fc10000	lw	r1,(r30)
  684  00001644  afc1fff4	sw	-12(r30),r1
  685  00001648          	L21_LF2:
  686  00001648  8fc10000	lw	r1,(r30)
  687  0000164c  90220000	lbu	r2,(r1)
  688  00001650  64410000	snei	r1,r2,#0
  689  00001654  1420000c	bnez	r1,L23_LF2
  690  00001658  54000000	nop; delay slot nop
  691  0000165c  0800001c	j	L22_LF2
  692  00001660  54000000	nop; delay slot nop
  693  00001664          	L23_LF2:
  694  00001664  8fc20000	lw	r2,(r30)
  695  00001668  20410001	addi	r1,r2,#1
  696  0000166c  00011020	add	r2,r0,r1
  697  00001670  afc20000	sw	(r30),r2
  698  00001674  0bffffd0	j	L21_LF2
  699  00001678  54000000	nop; delay slot nop
  700  0000167c          	L22_LF2:
  701  0000167c  23bdfff8	addi	r29,r29,#-8
  702  00001680  001d0820	add	r1,r0,r29
  703  00001684  8fc20000	lw	r2,(r30)
  704  00001688  ac220000	sw	(r1),r2
  705  0000168c  8fc20004	lw	r2,4(r30)
  706  00001690  ac220004	sw	4(r1),r2
  707  00001694  0ffffe5c	jal	_dstrcpy
  708  00001698  54000000	nop; delay slot nop
  709  0000169c  23bd0008	addi	r29,r29,#8
  710  000016a0  8fc1fff4	lw	r1,-12(r30)
  711  000016a4  08000004	j	L20_LF2
  712  000016a8  54000000	nop; delay slot nop
  713  000016ac          	L20_LF2:
  714  000016ac  8fa20000	lw	r2,0(r29)
  715  000016b0  8fdffff8	lw	r31,-8(r30)
  716  000016b4  001ee820	add	r29,r0,r30
  717  000016b8  8fdefffc	lw	r30,-4(r30)
  718  000016bc  4be00000	jr	r31
  719  000016c0  54000000	nop
  720  000016c4          	.endproc _dstrcat
  721  000016c4          	.align 2
  722  000016c4          	.proc _dstrncmp
  723  000016c4          	.global _dstrncmp
  724  000016c4          	_dstrncmp:
  725                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  726  000016c4  afbefffc	sw	-4(r29),r30; push fp
  727  000016c8  001df020	add	r30,r0,r29; fp = sp
  728  000016cc  afbffff8	sw	-8(r29),r31; push ret addr
  729  000016d0  2fbd0018	subui	r29,r29,#24; alloc local storage
  730  000016d4  afa20000	sw	0(r29),r2
  731  000016d8  afa30004	sw	4(r29),r3
  732  000016dc  54000000	nop
  733  000016e0  20010000	addi	r1,r0,#0
  734  000016e4  afc1fff4	sw	-12(r30),r1
  735  000016e8          	L25_LF2:
  736  000016e8  8fc1fff4	lw	r1,-12(r30)
  737  000016ec  8fc20008	lw	r2,8(r30)
  738  000016f0  0022082a	slt	r1,r1,r2
  739  000016f4  1420000c	bnez	r1,L28_LF2
  740  000016f8  54000000	nop; delay slot nop
  741  000016fc  08000088	j	L26_LF2
  742  00001700  54000000	nop; delay slot nop
  743  00001704          	L28_LF2:
  744  00001704  8fc10004	lw	r1,4(r30)
  745  00001708  90220000	lbu	r2,(r1)
  746  0000170c  64410000	snei	r1,r2,#0
  747  00001710  14200018	bnez	r1,L29_LF2
  748  00001714  54000000	nop; delay slot nop
  749  00001718  20010000	addi	r1,r0,#0
  750  0000171c  080000d8	j	L24_LF2
  751  00001720  54000000	nop; delay slot nop
  752  00001724  08000028	j	L30_LF2
  753  00001728  54000000	nop; delay slot nop
  754  0000172c          	L29_LF2:
  755  0000172c  8fc10000	lw	r1,(r30)
  756  00001730  8fc20004	lw	r2,4(r30)
  757  00001734  90210000	lbu	r1,(r1)
  758  00001738  90420000	lbu	r2,(r2)
  759  0000173c  00220829	sne	r1,r1,r2
  760  00001740  1020000c	beqz	r1,L30_LF2
  761  00001744  54000000	nop; delay slot nop
  762  00001748  0800003c	j	L26_LF2
  763  0000174c  54000000	nop; delay slot nop
  764  00001750          	L31_LF2:
  765  00001750          	L30_LF2:
  766  00001750  8fc20000	lw	r2,(r30)
  767  00001754  20410001	addi	r1,r2,#1
  768  00001758  00011020	add	r2,r0,r1
  769  0000175c  afc20000	sw	(r30),r2
  770  00001760  8fc20004	lw	r2,4(r30)
  771  00001764  20410001	addi	r1,r2,#1
  772  00001768  00011020	add	r2,r0,r1
  773  0000176c  afc20004	sw	4(r30),r2
  774  00001770          	L27_LF2:
  775  00001770  8fc2fff4	lw	r2,-12(r30)
  776  00001774  20410001	addi	r1,r2,#1
  777  00001778  00011020	add	r2,r0,r1
  778  0000177c  afc2fff4	sw	-12(r30),r2
  779  00001780  0bffff64	j	L25_LF2
  780  00001784  54000000	nop; delay slot nop
  781  00001788          	L26_LF2:
  782  00001788  8fc1fff4	lw	r1,-12(r30)
  783  0000178c  8fc20008	lw	r2,8(r30)
  784  00001790  00220828	seq	r1,r1,r2
  785  00001794  10200018	beqz	r1,L32_LF2
  786  00001798  54000000	nop; delay slot nop
  787  0000179c  20010000	addi	r1,r0,#0
  788  000017a0  08000054	j	L24_LF2
  789  000017a4  54000000	nop; delay slot nop
  790  000017a8  0800004c	j	L33_LF2
  791  000017ac  54000000	nop; delay slot nop
  792  000017b0          	L32_LF2:
  793  000017b0  8fc20000	lw	r2,(r30)
  794  000017b4  90410000	lbu	r1,(r2)
  795  000017b8  8fc20004	lw	r2,4(r30)
  796  000017bc  90430000	lbu	r3,(r2)
  797  000017c0  00230822	sub	r1,r1,r3
  798  000017c4  74220000	sgei	r2,r1,#0
  799  000017c8  10400020	beqz	r2,L34_LF2
  800  000017cc  54000000	nop; delay slot nop
  801  000017d0  8fc10000	lw	r1,(r30)
  802  000017d4  8fc20004	lw	r2,4(r30)
  803  000017d8  90210000	lbu	r1,(r1)
  804  000017dc  90420000	lbu	r2,(r2)
  805  000017e0  00220829	sne	r1,r1,r2
  806  000017e4  08000008	j	L35_LF2
  807  000017e8  54000000	nop; delay slot nop
  808  000017ec          	L34_LF2:
  809  000017ec  2001ffff	addi	r1,r0,#-1
  810  000017f0          	L35_LF2:
  811  000017f0  08000004	j	L24_LF2
  812  000017f4  54000000	nop; delay slot nop
  813  000017f8          	L33_LF2:
  814  000017f8          	L24_LF2:
  815  000017f8  8fa20000	lw	r2,0(r29)
  816  000017fc  8fa30004	lw	r3,4(r29)
  817  00001800  8fdffff8	lw	r31,-8(r30)
  818  00001804  001ee820	add	r29,r0,r30
  819  00001808  8fdefffc	lw	r30,-4(r30)
  820  0000180c  4be00000	jr	r31
  821  00001810  54000000	nop
  822  00001814          	.endproc _dstrncmp
  823  00001814          	.align 2
  824  00001814          	.proc _dstrlen
  825  00001814          	.global _dstrlen
  826  00001814          	_dstrlen:
  827                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  828  00001814  afbefffc	sw	-4(r29),r30; push fp
  829  00001818  001df020	add	r30,r0,r29; fp = sp
  830  0000181c  afbffff8	sw	-8(r29),r31; push ret addr
  831  00001820  2fbd0018	subui	r29,r29,#24; alloc local storage
  832  00001824  afa20000	sw	0(r29),r2
  833  00001828  20010000	addi	r1,r0,#0
  834  0000182c  afc1fff4	sw	-12(r30),r1
  835  00001830          	L37_LF2:
  836  00001830  8fc10000	lw	r1,(r30)
  837  00001834  20220001	addi	r2,r1,#1
  838  00001838  afc20000	sw	(r30),r2
  839  0000183c  90210000	lbu	r1,(r1)
  840  00001840  64220000	snei	r2,r1,#0
  841  00001844  1440000c	bnez	r2,L39_LF2
  842  00001848  54000000	nop; delay slot nop
  843  0000184c  0800001c	j	L38_LF2
  844  00001850  54000000	nop; delay slot nop
  845  00001854          	L39_LF2:
  846  00001854  8fc2fff4	lw	r2,-12(r30)
  847  00001858  20410001	addi	r1,r2,#1
  848  0000185c  00011020	add	r2,r0,r1
  849  00001860  afc2fff4	sw	-12(r30),r2
  850  00001864  0bffffc8	j	L37_LF2
  851  00001868  54000000	nop; delay slot nop
  852  0000186c          	L38_LF2:
  853  0000186c  8fc1fff4	lw	r1,-12(r30)
  854  00001870  08000004	j	L36_LF2
  855  00001874  54000000	nop; delay slot nop
  856  00001878          	L36_LF2:
  857  00001878  8fa20000	lw	r2,0(r29)
  858  0000187c  8fdffff8	lw	r31,-8(r30)
  859  00001880  001ee820	add	r29,r0,r30
  860  00001884  8fdefffc	lw	r30,-4(r30)
  861  00001888  4be00000	jr	r31
  862  0000188c  54000000	nop
  863  00001890          	.endproc _dstrlen
  864  00001890          	.align 2
  865  00001890          	.proc _dstrstr
  866  00001890          	.global _dstrstr
  867  00001890          	_dstrstr:
  868                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  869  00001890  afbefffc	sw	-4(r29),r30; push fp
  870  00001894  001df020	add	r30,r0,r29; fp = sp
  871  00001898  afbffff8	sw	-8(r29),r31; push ret addr
  872  0000189c  2fbd0018	subui	r29,r29,#24; alloc local storage
  873  000018a0  afa20000	sw	0(r29),r2
  874  000018a4  23bdfff8	addi	r29,r29,#-8
  875  000018a8  001d0820	add	r1,r0,r29
  876  000018ac  8fc20004	lw	r2,4(r30)
  877  000018b0  ac220000	sw	(r1),r2
  878  000018b4  0fffff5c	jal	_dstrlen
  879  000018b8  54000000	nop; delay slot nop
  880  000018bc  23bd0008	addi	r29,r29,#8
  881  000018c0  afc1fff4	sw	-12(r30),r1
  882  000018c4          	L41_LF2:
  883  000018c4  8fc10000	lw	r1,(r30)
  884  000018c8  90220000	lbu	r2,(r1)
  885  000018cc  64410000	snei	r1,r2,#0
  886  000018d0  1420000c	bnez	r1,L43_LF2
  887  000018d4  54000000	nop; delay slot nop
  888  000018d8  08000060	j	L42_LF2
  889  000018dc  54000000	nop; delay slot nop
  890  000018e0          	L43_LF2:
  891  000018e0  23bdfff0	addi	r29,r29,#-16
  892  000018e4  001d0820	add	r1,r0,r29
  893  000018e8  8fc20000	lw	r2,(r30)
  894  000018ec  ac220000	sw	(r1),r2
  895  000018f0  8fc20004	lw	r2,4(r30)
  896  000018f4  ac220004	sw	4(r1),r2
  897  000018f8  8fc2fff4	lw	r2,-12(r30)
  898  000018fc  ac220008	sw	8(r1),r2
  899  00001900  0ffffdc0	jal	_dstrncmp
  900  00001904  54000000	nop; delay slot nop
  901  00001908  23bd0010	addi	r29,r29,#16
  902  0000190c  64220000	snei	r2,r1,#0
  903  00001910  14400010	bnez	r2,L44_LF2
  904  00001914  54000000	nop; delay slot nop
  905  00001918  8fc10000	lw	r1,(r30)
  906  0000191c  08000028	j	L40_LF2
  907  00001920  54000000	nop; delay slot nop
  908  00001924          	L44_LF2:
  909  00001924  8fc20000	lw	r2,(r30)
  910  00001928  20410001	addi	r1,r2,#1
  911  0000192c  00011020	add	r2,r0,r1
  912  00001930  afc20000	sw	(r30),r2
  913  00001934  0bffff8c	j	L41_LF2
  914  00001938  54000000	nop; delay slot nop
  915  0000193c          	L42_LF2:
  916  0000193c  20010000	addi	r1,r0,#0
  917  00001940  08000004	j	L40_LF2
  918  00001944  54000000	nop; delay slot nop
  919  00001948          	L40_LF2:
  920  00001948  8fa20000	lw	r2,0(r29)
  921  0000194c  8fdffff8	lw	r31,-8(r30)
  922  00001950  001ee820	add	r29,r0,r30
  923  00001954  8fdefffc	lw	r30,-4(r30)
  924  00001958  4be00000	jr	r31
  925  0000195c  54000000	nop
  926  00001960          	.endproc _dstrstr
  927  00001960          	.align 2
  928  00001960          	.proc _dmindex
  929  00001960          	.global _dmindex
  930  00001960          	_dmindex:
  931                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  932  00001960  afbefffc	sw	-4(r29),r30; push fp
  933  00001964  001df020	add	r30,r0,r29; fp = sp
  934  00001968  afbffff8	sw	-8(r29),r31; push ret addr
  935  0000196c  2fbd0018	subui	r29,r29,#24; alloc local storage
  936  00001970  afa20000	sw	0(r29),r2
  937  00001974  54000000	nop
  938  00001978          	L46_LF2:
  939  00001978  8fc10000	lw	r1,(r30)
  940  0000197c  90220000	lbu	r2,(r1)
  941  00001980  64410000	snei	r1,r2,#0
  942  00001984  1420000c	bnez	r1,L48_LF2
  943  00001988  54000000	nop; delay slot nop
  944  0000198c  08000070	j	L47_LF2
  945  00001990  54000000	nop; delay slot nop
  946  00001994          	L48_LF2:
  947  00001994  8fc10004	lw	r1,4(r30)
  948  00001998  afc1fff4	sw	-12(r30),r1
  949  0000199c          	L49_LF2:
  950  0000199c  8fc1fff4	lw	r1,-12(r30)
  951  000019a0  90220000	lbu	r2,(r1)
  952  000019a4  64410000	snei	r1,r2,#0
  953  000019a8  1420000c	bnez	r1,L52_LF2
  954  000019ac  54000000	nop; delay slot nop
  955  000019b0  08000044	j	L50_LF2
  956  000019b4  54000000	nop; delay slot nop
  957  000019b8          	L52_LF2:
  958  000019b8  8fc10000	lw	r1,(r30)
  959  000019bc  8fc2fff4	lw	r2,-12(r30)
  960  000019c0  90210000	lbu	r1,(r1)
  961  000019c4  90420000	lbu	r2,(r2)
  962  000019c8  00220828	seq	r1,r1,r2
  963  000019cc  10200010	beqz	r1,L51_LF2
  964  000019d0  54000000	nop; delay slot nop
  965  000019d4  8fc10000	lw	r1,(r30)
  966  000019d8  08000030	j	L45_LF2
  967  000019dc  54000000	nop; delay slot nop
  968  000019e0          	L53_LF2:
  969  000019e0          	L51_LF2:
  970  000019e0  8fc2fff4	lw	r2,-12(r30)
  971  000019e4  20410001	addi	r1,r2,#1
  972  000019e8  00011020	add	r2,r0,r1
  973  000019ec  afc2fff4	sw	-12(r30),r2
  974  000019f0  0bffffa8	j	L49_LF2
  975  000019f4  54000000	nop; delay slot nop
  976  000019f8          	L50_LF2:
  977  000019f8  0bffff7c	j	L46_LF2
  978  000019fc  54000000	nop; delay slot nop
  979  00001a00          	L47_LF2:
  980  00001a00  20010000	addi	r1,r0,#0
  981  00001a04  08000004	j	L45_LF2
  982  00001a08  54000000	nop; delay slot nop
  983  00001a0c          	L45_LF2:
  984  00001a0c  8fa20000	lw	r2,0(r29)
  985  00001a10  8fdffff8	lw	r31,-8(r30)
  986  00001a14  001ee820	add	r29,r0,r30
  987  00001a18  8fdefffc	lw	r30,-4(r30)
  988  00001a1c  4be00000	jr	r31
  989  00001a20  54000000	nop
  990  00001a24          	.endproc _dmindex
  991  00001a24          	.align 2
  992  00001a24          	.proc _dindex
  993  00001a24          	.global _dindex
  994  00001a24          	_dindex:
  995                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  996  00001a24  afbefffc	sw	-4(r29),r30; push fp
  997  00001a28  001df020	add	r30,r0,r29; fp = sp
  998  00001a2c  afbffff8	sw	-8(r29),r31; push ret addr
  999  00001a30  2fbd0010	subui	r29,r29,#16; alloc local storage
 1000  00001a34  afa20000	sw	0(r29),r2
 1001  00001a38  54000000	nop
 1002  00001a3c          	L55_LF2:
 1003  00001a3c  8fc10000	lw	r1,(r30)
 1004  00001a40  90220000	lbu	r2,(r1)
 1005  00001a44  64410000	snei	r1,r2,#0
 1006  00001a48  1420000c	bnez	r1,L57_LF2
 1007  00001a4c  54000000	nop; delay slot nop
 1008  00001a50  08000040	j	L56_LF2
 1009  00001a54  54000000	nop; delay slot nop
 1010  00001a58          	L57_LF2:
 1011  00001a58  8fc10000	lw	r1,(r30)
 1012  00001a5c  90220000	lbu	r2,(r1)
 1013  00001a60  8fc10004	lw	r1,4(r30)
 1014  00001a64  00411028	seq	r2,r2,r1
 1015  00001a68  10400010	beqz	r2,L58_LF2
 1016  00001a6c  54000000	nop; delay slot nop
 1017  00001a70  8fc10000	lw	r1,(r30)
 1018  00001a74  08000028	j	L54_LF2
 1019  00001a78  54000000	nop; delay slot nop
 1020  00001a7c          	L58_LF2:
 1021  00001a7c  8fc20000	lw	r2,(r30)
 1022  00001a80  20410001	addi	r1,r2,#1
 1023  00001a84  00011020	add	r2,r0,r1
 1024  00001a88  afc20000	sw	(r30),r2
 1025  00001a8c  0bffffac	j	L55_LF2
 1026  00001a90  54000000	nop; delay slot nop
 1027  00001a94          	L56_LF2:
 1028  00001a94  20010000	addi	r1,r0,#0
 1029  00001a98  08000004	j	L54_LF2
 1030  00001a9c  54000000	nop; delay slot nop
 1031  00001aa0          	L54_LF2:
 1032  00001aa0  8fa20000	lw	r2,0(r29)
 1033  00001aa4  8fdffff8	lw	r31,-8(r30)
 1034  00001aa8  001ee820	add	r29,r0,r30
 1035  00001aac  8fdefffc	lw	r30,-4(r30)
 1036  00001ab0  4be00000	jr	r31
 1037  00001ab4  54000000	nop
 1038  00001ab8          	.endproc _dindex
 1039  00001ab8          	.align 2
 1040  00001ab8          	.proc _ditoa
 1041  00001ab8          	.global _ditoa
 1042  00001ab8          	_ditoa:
 1043                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1044  00001ab8  afbefffc	sw	-4(r29),r30; push fp
 1045  00001abc  001df020	add	r30,r0,r29; fp = sp
 1046  00001ac0  afbffff8	sw	-8(r29),r31; push ret addr
 1047  00001ac4  2fbd0018	subui	r29,r29,#24; alloc local storage
 1048  00001ac8  afa20000	sw	0(r29),r2
 1049  00001acc  afa30004	sw	4(r29),r3
 1050  00001ad0  8fc10000	lw	r1,(r30)
 1051  00001ad4  68220000	slti	r2,r1,#0
 1052  00001ad8  1040002c	beqz	r2,L60_LF2
 1053  00001adc  54000000	nop; delay slot nop
 1054  00001ae0  8fc10004	lw	r1,4(r30)
 1055  00001ae4  20220001	addi	r2,r1,#1
 1056  00001ae8  afc20004	sw	4(r30),r2
 1057  00001aec  2002002d	addi	r2,r0,(#0x2d)&0xff
 1058  00001af0  a0220000	sb	(r1),r2
 1059  00001af4  8fc10000	lw	r1,(r30)
 1060  00001af8  00011022	sub	r2,r0,r1
 1061  00001afc  afc20000	sw	(r30),r2
 1062  00001b00  08000118	j	L61_LF2
 1063  00001b04  54000000	nop; delay slot nop
 1064  00001b08          	L60_LF2:
 1065  00001b08  8fc10000	lw	r1,(r30)
 1066  00001b0c  64220000	snei	r2,r1,#0
 1067  00001b10  14400020	bnez	r2,L62_LF2
 1068  00001b14  54000000	nop; delay slot nop
 1069  00001b18  8fc10004	lw	r1,4(r30)
 1070  00001b1c  20220001	addi	r2,r1,#1
 1071  00001b20  afc20004	sw	4(r30),r2
 1072  00001b24  20020030	addi	r2,r0,(#0x30)&0xff
 1073  00001b28  a0220000	sb	(r1),r2
 1074  00001b2c  080000ec	j	L61_LF2
 1075  00001b30  54000000	nop; delay slot nop
 1076  00001b34          	L62_LF2:
 1077  00001b34  20010001	addi	r1,r0,#1
 1078  00001b38  afc1fff4	sw	-12(r30),r1
 1079  00001b3c          	L64_LF2:
 1080  00001b3c  8fc1fff4	lw	r1,-12(r30)
 1081  00001b40  8fc20000	lw	r2,(r30)
 1082  00001b44  0022082c	sle	r1,r1,r2
 1083  00001b48  1420000c	bnez	r1,L66_LF2
 1084  00001b4c  54000000	nop; delay slot nop
 1085  00001b50  08000024	j	L65_LF2
 1086  00001b54  54000000	nop; delay slot nop
 1087  00001b58          	L67_LF2:
 1088  00001b58          	L66_LF2:
 1089  00001b58  8fc1fff4	lw	r1,-12(r30)
 1090  00001b5c  00011820	add	r3,r0,r1
 1091  00001b60  50620002	slli	r2,r3,#0x2
 1092  00001b64  00411020	add	r2,r2,r1
 1093  00001b68  50410001	slli	r1,r2,#0x1
 1094  00001b6c  afc1fff4	sw	-12(r30),r1
 1095  00001b70  0bffffc8	j	L64_LF2
 1096  00001b74  54000000	nop; delay slot nop
 1097  00001b78          	L65_LF2:
 1098  00001b78  54000000	nop
 1099  00001b7c          	L68_LF2:
 1100  00001b7c  8fc1fff4	lw	r1,-12(r30)
 1101  00001b80  2002000a	addi	r2,r0,#10
 1102  00001b84  00200035	movi2fp	f0,r1
 1103  00001b88  00400835	movi2fp	f1,r2
 1104  00001b8c  0401000f	div	f0,f0,f1
 1105  00001b90  00000834	movfp2i	r1,f0
 1106  00001b94  afc1fff4	sw	-12(r30),r1
 1107  00001b98  8fc10004	lw	r1,4(r30)
 1108  00001b9c  20220001	addi	r2,r1,#1
 1109  00001ba0  afc20004	sw	4(r30),r2
 1110  00001ba4  8fc20000	lw	r2,(r30)
 1111  00001ba8  8fc3fff4	lw	r3,-12(r30)
 1112  00001bac  00400035	movi2fp	f0,r2
 1113  00001bb0  00600835	movi2fp	f1,r3
 1114  00001bb4  0401000f	div	f0,f0,f1
 1115  00001bb8  00001034	movfp2i	r2,f0
 1116  00001bbc  00021820	add	r3,r0,r2
 1117  00001bc0  20620030	addi	r2,r3,#48
 1118  00001bc4  a0220000	sb	(r1),r2
 1119  00001bc8  8fc10000	lw	r1,(r30)
 1120  00001bcc  8fc3fff4	lw	r3,-12(r30)
 1121  00001bd0  00200035	movi2fp	f0,r1
 1122  00001bd4  00600835	movi2fp	f1,r3
 1123  00001bd8  0401000f	div	f0,f0,f1
 1124  00001bdc  00001034	movfp2i	r2,f0
 1125  00001be0  8fc3fff4	lw	r3,-12(r30)
 1126  00001be4  00400035	movi2fp	f0,r2
 1127  00001be8  00600835	movi2fp	f1,r3
 1128  00001bec  0401000e	mult	f0,f0,f1
 1129  00001bf0  00001034	movfp2i	r2,f0
 1130  00001bf4  00220822	sub	r1,r1,r2
 1131  00001bf8  afc10000	sw	(r30),r1
 1132  00001bfc          	L70_LF2:
 1133  00001bfc  8fc1fff4	lw	r1,-12(r30)
 1134  00001c00  6c220001	sgti	r2,r1,#1
 1135  00001c04  1440000c	bnez	r2,L71_LF2
 1136  00001c08  54000000	nop; delay slot nop
 1137  00001c0c  0800000c	j	L61_LF2
 1138  00001c10  54000000	nop; delay slot nop
 1139  00001c14          	L71_LF2:
 1140  00001c14  0bffff64	j	L68_LF2
 1141  00001c18  54000000	nop; delay slot nop
 1142  00001c1c          	L69_LF2:
 1143  00001c1c          	L63_LF2:
 1144  00001c1c          	L61_LF2:
 1145  00001c1c  8fc10004	lw	r1,4(r30)
 1146  00001c20  20020000	addi	r2,r0,(#0x0)&0xff
 1147  00001c24  a0220000	sb	(r1),r2
 1148  00001c28          	L59_LF2:
 1149  00001c28  8fa20000	lw	r2,0(r29)
 1150  00001c2c  8fa30004	lw	r3,4(r29)
 1151  00001c30  8fdffff8	lw	r31,-8(r30)
 1152  00001c34  001ee820	add	r29,r0,r30
 1153  00001c38  8fdefffc	lw	r30,-4(r30)
 1154  00001c3c  4be00000	jr	r31
 1155  00001c40  54000000	nop
 1156  00001c44          	.endproc _ditoa
 1157  00001c44          	.align 2
 1158  00001c44          	.proc _dstrtol
 1159  00001c44          	.global _dstrtol
 1160  00001c44          	_dstrtol:
 1161                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1162  00001c44  afbefffc	sw	-4(r29),r30; push fp
 1163  00001c48  001df020	add	r30,r0,r29; fp = sp
 1164  00001c4c  afbffff8	sw	-8(r29),r31; push ret addr
 1165  00001c50  2fbd0020	subui	r29,r29,#32; alloc local storage
 1166  00001c54  afa20000	sw	0(r29),r2
 1167  00001c58  20010000	addi	r1,r0,#0
 1168  00001c5c  afc1fff4	sw	-12(r30),r1
 1169  00001c60          	L73_LF2:
 1170  00001c60  8fc10000	lw	r1,(r30)
 1171  00001c64  90220000	lbu	r2,(r1)
 1172  00001c68  60410020	seqi	r1,r2,#32
 1173  00001c6c  14200034	bnez	r1,L75_LF2
 1174  00001c70  54000000	nop; delay slot nop
 1175  00001c74  8fc10000	lw	r1,(r30)
 1176  00001c78  90220000	lbu	r2,(r1)
 1177  00001c7c  60410009	seqi	r1,r2,#9
 1178  00001c80  14200020	bnez	r1,L75_LF2
 1179  00001c84  54000000	nop; delay slot nop
 1180  00001c88  8fc10000	lw	r1,(r30)
 1181  00001c8c  90220000	lbu	r2,(r1)
 1182  00001c90  6041000a	seqi	r1,r2,#10
 1183  00001c94  1420000c	bnez	r1,L75_LF2
 1184  00001c98  54000000	nop; delay slot nop
 1185  00001c9c  0800001c	j	L74_LF2
 1186  00001ca0  54000000	nop; delay slot nop
 1187  00001ca4          	L75_LF2:
 1188  00001ca4  8fc20000	lw	r2,(r30)
 1189  00001ca8  20410001	addi	r1,r2,#1
 1190  00001cac  00011020	add	r2,r0,r1
 1191  00001cb0  afc20000	sw	(r30),r2
 1192  00001cb4  0bffffa8	j	L73_LF2
 1193  00001cb8  54000000	nop; delay slot nop
 1194  00001cbc          	L74_LF2:
 1195  00001cbc  8fc10004	lw	r1,4(r30)
 1196  00001cc0  64220000	snei	r2,r1,#0
 1197  00001cc4  10400010	beqz	r2,L76_LF2
 1198  00001cc8  54000000	nop; delay slot nop
 1199  00001ccc  8fc10004	lw	r1,4(r30)
 1200  00001cd0  8fc20000	lw	r2,(r30)
 1201  00001cd4  ac220000	sw	(r1),r2
 1202  00001cd8          	L76_LF2:
 1203  00001cd8  8fc10000	lw	r1,(r30)
 1204  00001cdc  90220000	lbu	r2,(r1)
 1205  00001ce0  64410000	snei	r1,r2,#0
 1206  00001ce4  14200010	bnez	r1,L77_LF2
 1207  00001ce8  54000000	nop; delay slot nop
 1208  00001cec  8fc1fff4	lw	r1,-12(r30)
 1209  00001cf0  08000294	j	L72_LF2
 1210  00001cf4  54000000	nop; delay slot nop
 1211  00001cf8          	L77_LF2:
 1212  00001cf8  8fc10000	lw	r1,(r30)
 1213  00001cfc  90220000	lbu	r2,(r1)
 1214  00001d00  6041002d	seqi	r1,r2,#45
 1215  00001d04  10200024	beqz	r1,L78_LF2
 1216  00001d08  54000000	nop; delay slot nop
 1217  00001d0c  2001ffff	addi	r1,r0,#-1
 1218  00001d10  afc1ffec	sw	-20(r30),r1
 1219  00001d14  8fc20000	lw	r2,(r30)
 1220  00001d18  20410001	addi	r1,r2,#1
 1221  00001d1c  00011020	add	r2,r0,r1
 1222  00001d20  afc20000	sw	(r30),r2
 1223  00001d24  0800000c	j	L79_LF2
 1224  00001d28  54000000	nop; delay slot nop
 1225  00001d2c          	L78_LF2:
 1226  00001d2c  20010001	addi	r1,r0,#1
 1227  00001d30  afc1ffec	sw	-20(r30),r1
 1228  00001d34          	L79_LF2:
 1229  00001d34  8fc10008	lw	r1,8(r30)
 1230  00001d38  64220000	snei	r2,r1,#0
 1231  00001d3c  14400090	bnez	r2,L80_LF2
 1232  00001d40  54000000	nop; delay slot nop
 1233  00001d44  8fc10000	lw	r1,(r30)
 1234  00001d48  90220000	lbu	r2,(r1)
 1235  00001d4c  60410030	seqi	r1,r2,#48
 1236  00001d50  10200074	beqz	r1,L81_LF2
 1237  00001d54  54000000	nop; delay slot nop
 1238  00001d58  8fc20000	lw	r2,(r30)
 1239  00001d5c  20410001	addi	r1,r2,#1
 1240  00001d60  00011020	add	r2,r0,r1
 1241  00001d64  afc20000	sw	(r30),r2
 1242  00001d68  8fc10000	lw	r1,(r30)
 1243  00001d6c  90220000	lbu	r2,(r1)
 1244  00001d70  60410078	seqi	r1,r2,#120
 1245  00001d74  14200020	bnez	r1,L83_LF2
 1246  00001d78  54000000	nop; delay slot nop
 1247  00001d7c  8fc10000	lw	r1,(r30)
 1248  00001d80  90220000	lbu	r2,(r1)
 1249  00001d84  60410058	seqi	r1,r2,#88
 1250  00001d88  1420000c	bnez	r1,L83_LF2
 1251  00001d8c  54000000	nop; delay slot nop
 1252  00001d90  08000024	j	L82_LF2
 1253  00001d94  54000000	nop; delay slot nop
 1254  00001d98          	L83_LF2:
 1255  00001d98  20010010	addi	r1,r0,#16
 1256  00001d9c  afc10008	sw	8(r30),r1
 1257  00001da0  8fc20000	lw	r2,(r30)
 1258  00001da4  20410001	addi	r1,r2,#1
 1259  00001da8  00011020	add	r2,r0,r1
 1260  00001dac  afc20000	sw	(r30),r2
 1261  00001db0  0800000c	j	L84_LF2
 1262  00001db4  54000000	nop; delay slot nop
 1263  00001db8          	L82_LF2:
 1264  00001db8  20010008	addi	r1,r0,#8
 1265  00001dbc  afc10008	sw	8(r30),r1
 1266  00001dc0          	L84_LF2:
 1267  00001dc0  0800000c	j	L80_LF2
 1268  00001dc4  54000000	nop; delay slot nop
 1269  00001dc8          	L81_LF2:
 1270  00001dc8  2001000a	addi	r1,r0,#10
 1271  00001dcc  afc10008	sw	8(r30),r1
 1272  00001dd0          	L85_LF2:
 1273  00001dd0          	L80_LF2:
 1274  00001dd0  8fc10008	lw	r1,8(r30)
 1275  00001dd4  70220000	slei	r2,r1,#0
 1276  00001dd8  1440001c	bnez	r2,L87_LF2
 1277  00001ddc  54000000	nop; delay slot nop
 1278  00001de0  8fc10008	lw	r1,8(r30)
 1279  00001de4  6c220010	sgti	r2,r1,#16
 1280  00001de8  1440000c	bnez	r2,L87_LF2
 1281  00001dec  54000000	nop; delay slot nop
 1282  00001df0  08000010	j	L86_LF2
 1283  00001df4  54000000	nop; delay slot nop
 1284  00001df8          	L87_LF2:
 1285  00001df8  8fc1fff4	lw	r1,-12(r30)
 1286  00001dfc  08000188	j	L72_LF2
 1287  00001e00  54000000	nop; delay slot nop
 1288  00001e04          	L86_LF2:
 1289  00001e04  54000000	nop
 1290  00001e08          	L88_LF2:
 1291  00001e08  8fc10000	lw	r1,(r30)
 1292  00001e0c  90220000	lbu	r2,(r1)
 1293  00001e10  6c41002f	sgtui	r1,r2,#47
 1294  00001e14  10200030	beqz	r1,L91_LF2
 1295  00001e18  54000000	nop; delay slot nop
 1296  00001e1c  8fc10000	lw	r1,(r30)
 1297  00001e20  90220000	lbu	r2,(r1)
 1298  00001e24  70410039	sleui	r1,r2,#57
 1299  00001e28  1020001c	beqz	r1,L91_LF2
 1300  00001e2c  54000000	nop; delay slot nop
 1301  00001e30  8fc10000	lw	r1,(r30)
 1302  00001e34  90220000	lbu	r2,(r1)
 1303  00001e38  2041ffd0	addi	r1,r2,#-48
 1304  00001e3c  afc1fff0	sw	-16(r30),r1
 1305  00001e40  0800008c	j	L92_LF2
 1306  00001e44  54000000	nop; delay slot nop
 1307  00001e48          	L91_LF2:
 1308  00001e48  8fc10000	lw	r1,(r30)
 1309  00001e4c  90220000	lbu	r2,(r1)
 1310  00001e50  6c410060	sgtui	r1,r2,#96
 1311  00001e54  10200030	beqz	r1,L93_LF2
 1312  00001e58  54000000	nop; delay slot nop
 1313  00001e5c  8fc10000	lw	r1,(r30)
 1314  00001e60  90220000	lbu	r2,(r1)
 1315  00001e64  7041007a	sleui	r1,r2,#122
 1316  00001e68  1020001c	beqz	r1,L93_LF2
 1317  00001e6c  54000000	nop; delay slot nop
 1318  00001e70  8fc10000	lw	r1,(r30)
 1319  00001e74  90220000	lbu	r2,(r1)
 1320  00001e78  2041ffa9	addi	r1,r2,#-87
 1321  00001e7c  afc1fff0	sw	-16(r30),r1
 1322  00001e80  0800004c	j	L92_LF2
 1323  00001e84  54000000	nop; delay slot nop
 1324  00001e88          	L93_LF2:
 1325  00001e88  8fc10000	lw	r1,(r30)
 1326  00001e8c  90220000	lbu	r2,(r1)
 1327  00001e90  6c410040	sgtui	r1,r2,#64
 1328  00001e94  10200030	beqz	r1,L95_LF2
 1329  00001e98  54000000	nop; delay slot nop
 1330  00001e9c  8fc10000	lw	r1,(r30)
 1331  00001ea0  90220000	lbu	r2,(r1)
 1332  00001ea4  7041005a	sleui	r1,r2,#90
 1333  00001ea8  1020001c	beqz	r1,L95_LF2
 1334  00001eac  54000000	nop; delay slot nop
 1335  00001eb0  8fc10000	lw	r1,(r30)
 1336  00001eb4  90220000	lbu	r2,(r1)
 1337  00001eb8  2041ffc9	addi	r1,r2,#-55
 1338  00001ebc  afc1fff0	sw	-16(r30),r1
 1339  00001ec0  0800000c	j	L92_LF2
 1340  00001ec4  54000000	nop; delay slot nop
 1341  00001ec8          	L95_LF2:
 1342  00001ec8  200103e8	addi	r1,r0,#1000
 1343  00001ecc  afc1fff0	sw	-16(r30),r1
 1344  00001ed0          	L96_LF2:
 1345  00001ed0          	L94_LF2:
 1346  00001ed0          	L92_LF2:
 1347  00001ed0  8fc1fff0	lw	r1,-16(r30)
 1348  00001ed4  8fc20008	lw	r2,8(r30)
 1349  00001ed8  0022082a	slt	r1,r1,r2
 1350  00001edc  10200040	beqz	r1,L90_LF2
 1351  00001ee0  54000000	nop; delay slot nop
 1352  00001ee4  8fc1fff4	lw	r1,-12(r30)
 1353  00001ee8  8fc20008	lw	r2,8(r30)
 1354  00001eec  00200035	movi2fp	f0,r1
 1355  00001ef0  00400835	movi2fp	f1,r2
 1356  00001ef4  0401000e	mult	f0,f0,f1
 1357  00001ef8  00000834	movfp2i	r1,f0
 1358  00001efc  afc1fff4	sw	-12(r30),r1
 1359  00001f00  8fc1fff4	lw	r1,-12(r30)
 1360  00001f04  8fc2fff0	lw	r2,-16(r30)
 1361  00001f08  00220820	add	r1,r1,r2
 1362  00001f0c  afc1fff4	sw	-12(r30),r1
 1363  00001f10  8fc20000	lw	r2,(r30)
 1364  00001f14  20410001	addi	r1,r2,#1
 1365  00001f18  00011020	add	r2,r0,r1
 1366  00001f1c  afc20000	sw	(r30),r2
 1367  00001f20          	L97_LF2:
 1368  00001f20          	L90_LF2:
 1369  00001f20  8fc1fff0	lw	r1,-16(r30)
 1370  00001f24  8fc20008	lw	r2,8(r30)
 1371  00001f28  0022082a	slt	r1,r1,r2
 1372  00001f2c  1420000c	bnez	r1,L98_LF2
 1373  00001f30  54000000	nop; delay slot nop
 1374  00001f34  0800000c	j	L89_LF2
 1375  00001f38  54000000	nop; delay slot nop
 1376  00001f3c          	L98_LF2:
 1377  00001f3c  0bfffec8	j	L88_LF2
 1378  00001f40  54000000	nop; delay slot nop
 1379  00001f44          	L89_LF2:
 1380  00001f44  8fc10004	lw	r1,4(r30)
 1381  00001f48  64220000	snei	r2,r1,#0
 1382  00001f4c  10400010	beqz	r2,L99_LF2
 1383  00001f50  54000000	nop; delay slot nop
 1384  00001f54  8fc10004	lw	r1,4(r30)
 1385  00001f58  8fc20000	lw	r2,(r30)
 1386  00001f5c  ac220000	sw	(r1),r2
 1387  00001f60          	L99_LF2:
 1388  00001f60  8fc1fff4	lw	r1,-12(r30)
 1389  00001f64  8fc2ffec	lw	r2,-20(r30)
 1390  00001f68  00200035	movi2fp	f0,r1
 1391  00001f6c  00400835	movi2fp	f1,r2
 1392  00001f70  0401000e	mult	f0,f0,f1
 1393  00001f74  00000834	movfp2i	r1,f0
 1394  00001f78  afc1fff4	sw	-12(r30),r1
 1395  00001f7c  8fc1fff4	lw	r1,-12(r30)
 1396  00001f80  08000004	j	L72_LF2
 1397  00001f84  54000000	nop; delay slot nop
 1398  00001f88          	L72_LF2:
 1399  00001f88  8fa20000	lw	r2,0(r29)
 1400  00001f8c  8fdffff8	lw	r31,-8(r30)
 1401  00001f90  001ee820	add	r29,r0,r30
 1402  00001f94  8fdefffc	lw	r30,-4(r30)
 1403  00001f98  4be00000	jr	r31
 1404  00001f9c  54000000	nop
 1405  00001fa0          	.endproc _dstrtol
 1406  00001fa0          	.align 2
 1407  00001fa0          	.proc _bcopy
 1408  00001fa0          	.global _bcopy
 1409  00001fa0          	_bcopy:
 1410                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1411  00001fa0  afbefffc	sw	-4(r29),r30; push fp
 1412  00001fa4  001df020	add	r30,r0,r29; fp = sp
 1413  00001fa8  afbffff8	sw	-8(r29),r31; push ret addr
 1414  00001fac  2fbd0010	subui	r29,r29,#16; alloc local storage
 1415  00001fb0  afa20000	sw	0(r29),r2
 1416  00001fb4  afa30004	sw	4(r29),r3
 1417  00001fb8  54000000	nop
 1418  00001fbc          	L101_LF2:
 1419  00001fbc  8fc10008	lw	r1,8(r30)
 1420  00001fc0  2022ffff	addi	r2,r1,#-1
 1421  00001fc4  afc20008	sw	8(r30),r2
 1422  00001fc8  6c210000	sgti	r1,r1,#0
 1423  00001fcc  1420000c	bnez	r1,L103_LF2
 1424  00001fd0  54000000	nop; delay slot nop
 1425  00001fd4  0800002c	j	L102_LF2
 1426  00001fd8  54000000	nop; delay slot nop
 1427  00001fdc          	L103_LF2:
 1428  00001fdc  8fc10004	lw	r1,4(r30)
 1429  00001fe0  20220001	addi	r2,r1,#1
 1430  00001fe4  afc20004	sw	4(r30),r2
 1431  00001fe8  8fc20000	lw	r2,(r30)
 1432  00001fec  20430001	addi	r3,r2,#1
 1433  00001ff0  afc30000	sw	(r30),r3
 1434  00001ff4  80420000	lb	r2,(r2)
 1435  00001ff8  a0220000	sb	(r1),r2
 1436  00001ffc  0bffffbc	j	L101_LF2
 1437  00002000  54000000	nop; delay slot nop
 1438  00002004          	L102_LF2:
 1439  00002004          	L100_LF2:
 1440  00002004  8fa20000	lw	r2,0(r29)
 1441  00002008  8fa30004	lw	r3,4(r29)
 1442  0000200c  8fdffff8	lw	r31,-8(r30)
 1443  00002010  001ee820	add	r29,r0,r30
 1444  00002014  8fdefffc	lw	r30,-4(r30)
 1445  00002018  4be00000	jr	r31
 1446  0000201c  54000000	nop
 1447  00002020          	.endproc _bcopy
 1448  00002020          	.align 2
 1449  00002020          	.proc _bzero
 1450  00002020          	.global _bzero
 1451  00002020          	_bzero:
 1452                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1453  00002020  afbefffc	sw	-4(r29),r30; push fp
 1454  00002024  001df020	add	r30,r0,r29; fp = sp
 1455  00002028  afbffff8	sw	-8(r29),r31; push ret addr
 1456  0000202c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1457  00002030  afa20000	sw	0(r29),r2
 1458  00002034  54000000	nop
 1459  00002038          	L105_LF2:
 1460  00002038  8fc10004	lw	r1,4(r30)
 1461  0000203c  2022ffff	addi	r2,r1,#-1
 1462  00002040  afc20004	sw	4(r30),r2
 1463  00002044  6c210000	sgti	r1,r1,#0
 1464  00002048  1420000c	bnez	r1,L107_LF2
 1465  0000204c  54000000	nop; delay slot nop
 1466  00002050  08000020	j	L106_LF2
 1467  00002054  54000000	nop; delay slot nop
 1468  00002058          	L107_LF2:
 1469  00002058  8fc10000	lw	r1,(r30)
 1470  0000205c  20220001	addi	r2,r1,#1
 1471  00002060  afc20000	sw	(r30),r2
 1472  00002064  20020000	addi	r2,r0,(#0x0)&0xff
 1473  00002068  a0220000	sb	(r1),r2
 1474  0000206c  0bffffc8	j	L105_LF2
 1475  00002070  54000000	nop; delay slot nop
 1476  00002074          	L106_LF2:
 1477  00002074          	L104_LF2:
 1478  00002074  8fa20000	lw	r2,0(r29)
 1479  00002078  8fdffff8	lw	r31,-8(r30)
 1480  0000207c  001ee820	add	r29,r0,r30
 1481  00002080  8fdefffc	lw	r30,-4(r30)
 1482  00002084  4be00000	jr	r31
 1483  00002088  54000000	nop
 1484  0000208c          	.endproc _bzero
 1485  0000208c          	.align 2
 1486  0000208c          	.proc _min
 1487  0000208c          	.global _min
 1488  0000208c          	_min:
 1489                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1490  0000208c  afbefffc	sw	-4(r29),r30; push fp
 1491  00002090  001df020	add	r30,r0,r29; fp = sp
 1492  00002094  afbffff8	sw	-8(r29),r31; push ret addr
 1493  00002098  2fbd0010	subui	r29,r29,#16; alloc local storage
 1494  0000209c  afa20000	sw	0(r29),r2
 1495  000020a0  afa30004	sw	4(r29),r3
 1496  000020a4  8fc10000	lw	r1,(r30)
 1497  000020a8  8fc20004	lw	r2,4(r30)
 1498  000020ac  0022182c	sle	r3,r1,r2
 1499  000020b0  14600008	bnez	r3,L109_LF2
 1500  000020b4  54000000	nop; delay slot nop
 1501  000020b8  8fc10004	lw	r1,4(r30)
 1502  000020bc          	L109_LF2:
 1503  000020bc  08000004	j	L108_LF2
 1504  000020c0  54000000	nop; delay slot nop
 1505  000020c4          	L108_LF2:
 1506  000020c4  8fa20000	lw	r2,0(r29)
 1507  000020c8  8fa30004	lw	r3,4(r29)
 1508  000020cc  8fdffff8	lw	r31,-8(r30)
 1509  000020d0  001ee820	add	r29,r0,r30
 1510  000020d4  8fdefffc	lw	r30,-4(r30)
 1511  000020d8  4be00000	jr	r31
 1512  000020dc  54000000	nop
 1513  000020e0          	.endproc _min
 1514  000020e0          	.align 2
 1515  000020e0          	.proc _max
 1516  000020e0          	.global _max
 1517  000020e0          	_max:
 1518                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1519  000020e0  afbefffc	sw	-4(r29),r30; push fp
 1520  000020e4  001df020	add	r30,r0,r29; fp = sp
 1521  000020e8  afbffff8	sw	-8(r29),r31; push ret addr
 1522  000020ec  2fbd0010	subui	r29,r29,#16; alloc local storage
 1523  000020f0  afa20000	sw	0(r29),r2
 1524  000020f4  afa30004	sw	4(r29),r3
 1525  000020f8  8fc10000	lw	r1,(r30)
 1526  000020fc  8fc20004	lw	r2,4(r30)
 1527  00002100  0022182d	sge	r3,r1,r2
 1528  00002104  14600008	bnez	r3,L111_LF2
 1529  00002108  54000000	nop; delay slot nop
 1530  0000210c  8fc10004	lw	r1,4(r30)
 1531  00002110          	L111_LF2:
 1532  00002110  08000004	j	L110_LF2
 1533  00002114  54000000	nop; delay slot nop
 1534  00002118          	L110_LF2:
 1535  00002118  8fa20000	lw	r2,0(r29)
 1536  0000211c  8fa30004	lw	r3,4(r29)
 1537  00002120  8fdffff8	lw	r31,-8(r30)
 1538  00002124  001ee820	add	r29,r0,r30
 1539  00002128  8fdefffc	lw	r30,-4(r30)
 1540  0000212c  4be00000	jr	r31
 1541  00002130  54000000	nop
 1542  00002134          	.endproc _max
 1543                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1544                      ;;;
 1545                      ;;; Most of the traps are called in files from libtraps.
 1548  00002134          	.align 2
 1549  00002134          	.proc _exit
 1550  00002134          	.global _exit
 1551  00002134          	_exit:
 1552  00002134  44000300	trap	#0x300
 1553  00002138  4be00000	jr	r31
 1554  0000213c  54000000	nop
 1555  00002140          	.endproc _exit
 1557                      ; for the benefit of gcc.
 1558  00002140          	.proc ___main
 1559  00002140          	.global ___main
 1560  00002140          	___main:
 1561  00002140  4be00000	jr	r31
 1562  00002144  54000000	nop
 1563  00002148          	.endproc ___main
 1564  00002148          	.text
 1565  00002148          	.global _etext
 1566  00002148          	_etext:
 1567  00002148          	.align 3
 1568  00002148          	.data
 1569  000030fd          	.global _edata
 1570  000030fd          	_edata:
