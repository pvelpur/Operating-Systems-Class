 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 301
    4                      ; Text size: 4432
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
   82  00003004  653a2025	
   82  00003008  73203c68	
   82  0000300c  616e646c	
   82  00003010  655f746f	
   82  00003014  5f70726f	
   82  00003018  63735f63	
   82  0000301c  6f6d706c	
   82  00003020  65746564	
   82  00003024  5f73656d	
   82  00003028  6170686f	
   82  0000302c  72653e0a	
   82  00003030  00      	
   83  00003031          	.align 2
   84  00003034          	LC1_LF0:
   85  00003034  53746570	.ascii "Step2.2 (%d): Testing Memory access out of bounds (> MAX vaddr)\n\000"
   85  00003038  322e3220	
   85  0000303c  28256429	
   85  00003040  3a205465	
   85  00003044  7374696e	
   85  00003048  67204d65	
   85  0000304c  6d6f7279	
   85  00003050  20616363	
   85  00003054  65737320	
   85  00003058  6f757420	
   85  0000305c  6f662062	
   85  00003060  6f756e64	
   85  00003064  7320283e	
   85  00003068  204d4158	
   85  0000306c  20766164	
   85  00003070  6472290a	
   85  00003074  00      	
   86  00003075          	.align 2
   87  00003078          	LC2_LF0:
   88  00003078  53746570	.ascii "Step2.2 (%d): Bad semaphore s_procs_completed (%d)!\n\000"
   88  0000307c  322e3220	
   88  00003080  28256429	
   88  00003084  3a204261	
   88  00003088  64207365	
   88  0000308c  6d617068	
   88  00003090  6f726520	
   88  00003094  735f7072	
   88  00003098  6f63735f	
   88  0000309c  636f6d70	
   88  000030a0  6c657465	
   88  000030a4  64202825	
   88  000030a8  6429210a	
   88  000030ac  00      	
   89  000030ad          	.align 2
   90  000030b0          	LC3_LF0:
   91  000030b0  53746570	.ascii "Step2.2 (%d): Attempted to access Memory Location: %d\n\000"
   91  000030b4  322e3220	
   91  000030b8  28256429	
   91  000030bc  3a204174	
   91  000030c0  74656d70	
   91  000030c4  74656420	
   91  000030c8  746f2061	
   91  000030cc  63636573	
   91  000030d0  73204d65	
   91  000030d4  6d6f7279	
   91  000030d8  204c6f63	
   91  000030dc  6174696f	
   91  000030e0  6e3a2025	
   91  000030e4  640a00  	
   92  000030e7          	.align 2
   93  000030e8          	LC4_LF0:
   94  000030e8  53746570	.ascii "Step2.2 (%d): Accessing Memory Location: %d\n\000"
   94  000030ec  322e3220	
   94  000030f0  28256429	
   94  000030f4  3a204163	
   94  000030f8  63657373	
   94  000030fc  696e6720	
   94  00003100  4d656d6f	
   94  00003104  7279204c	
   94  00003108  6f636174	
   94  0000310c  696f6e3a	
   94  00003110  2025640a	
   94  00003114  00      	
   95  00003115          	.align 2
   96  00003118          	LC5_LF0:
   97  00003118  53746570	.ascii "Step2.2 (%d): Done!\n\000"
   97  0000311c  322e3220	
   97  00003120  28256429	
   97  00003124  3a20446f	
   97  00003128  6e65210a	
   97  0000312c  00      	
   98  0000312d          	.text
   99  000010d4          	.align 2
  100  000010d4          	.proc _main
  101  000010d4          	.global _main
  102  000010d4          	_main:
  103                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  104  000010d4  afbefffc	sw	-4(r29),r30; push fp
  105  000010d8  001df020	add	r30,r0,r29; fp = sp
  106  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  107  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  108  000010e4  8fc20000	lw	r2,(r30)
  109  000010e8  8fc30004	lw	r3,4(r30)
  110  000010ec  0c001058	jal	___main
  111  000010f0  54000000	nop; not filled.
  112  000010f4  64410002	snei	r1,r2,#2
  113  000010f8  10200028	beqz	r1,L17_LF0
  114  000010fc  54000000	nop; not filled.
  115  00001100  23bdfff8	addi	r29,r29,#-8
  116  00001104  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  117  00001108  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  118  0000110c  afa40000	sw	(r29),r4
  119  00001110  0c000174	jal	_Printf
  120  00001114  54000000	nop; not filled.
  121  00001118  0c000274	jal	_Exit
  122  0000111c  54000000	nop; not filled.
  123  00001120  23bd0008	addi	r29,r29,#8
  124  00001124          	L17_LF0:
  125  00001124  23bdfff0	addi	r29,r29,#-16
  126  00001128  8c630004	lw	r3,4(r3)
  127  0000112c  afa30000	sw	(r29),r3
  128  00001130  20040000	addi	r4,r0,#0
  129  00001134  afa40004	sw	4(r29),r4
  130  00001138  2004000a	addi	r4,r0,#10
  131  0000113c  afa40008	sw	8(r29),r4
  132  00001140  0c000b08	jal	_dstrtol
  133  00001144  54000000	nop; not filled.
  134  00001148  00011020	add	r2,r0,r1
  135  0000114c  0c000144	jal	_getpid
  136  00001150  54000000	nop; not filled.
  137  00001154  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  138  00001158  24843034	addui	r4,r4,(LC1_LF0)&0xffff
  139  0000115c  afa40000	sw	(r29),r4
  140  00001160  afa10004	sw	4(r29),r1
  141  00001164  0c000120	jal	_Printf
  142  00001168  54000000	nop; not filled.
  143  0000116c  afa20000	sw	(r29),r2
  144  00001170  0c000168	jal	_sem_signal
  145  00001174  54000000	nop; not filled.
  146  00001178  23bd0010	addi	r29,r29,#16
  147  0000117c  64210001	snei	r1,r1,#1
  148  00001180  10200038	beqz	r1,L18_LF0
  149  00001184  54000000	nop; not filled.
  150  00001188  0c000108	jal	_getpid
  151  0000118c  54000000	nop; not filled.
  152  00001190  23bdfff0	addi	r29,r29,#-16
  153  00001194  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  154  00001198  24843078	addui	r4,r4,(LC2_LF0)&0xffff
  155  0000119c  afa40000	sw	(r29),r4
  156  000011a0  afa10004	sw	4(r29),r1
  157  000011a4  afa20008	sw	8(r29),r2
  158  000011a8  0c0000dc	jal	_Printf
  159  000011ac  54000000	nop; not filled.
  160  000011b0  0c0001dc	jal	_Exit
  161  000011b4  54000000	nop; not filled.
  162  000011b8  23bd0010	addi	r29,r29,#16
  163  000011bc          	L18_LF0:
  164  000011bc  3c020010	lhi	r2,#16
  165  000011c0  24420000	addui	r2,r2,#0
  166  000011c4  0c0000cc	jal	_getpid
  167  000011c8  54000000	nop; not filled.
  168  000011cc  23bdfff0	addi	r29,r29,#-16
  169  000011d0  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  170  000011d4  248430b0	addui	r4,r4,(LC3_LF0)&0xffff
  171  000011d8  afa40000	sw	(r29),r4
  172  000011dc  afa10004	sw	4(r29),r1
  173  000011e0  afa20008	sw	8(r29),r2
  174  000011e4  0c0000a0	jal	_Printf
  175  000011e8  54000000	nop; not filled.
  176  000011ec  0c0000a4	jal	_getpid
  177  000011f0  54000000	nop; not filled.
  178  000011f4  3c040000	lhi	r4,((LC4_LF0)>>16)&0xffff
  179  000011f8  248430e8	addui	r4,r4,(LC4_LF0)&0xffff
  180  000011fc  afa40000	sw	(r29),r4
  181  00001200  afa10004	sw	4(r29),r1
  182  00001204  8c420000	lw	r2,(r2)
  183  00001208  afa20008	sw	8(r29),r2
  184  0000120c  0c000078	jal	_Printf
  185  00001210  54000000	nop; not filled.
  186  00001214  0c00007c	jal	_getpid
  187  00001218  54000000	nop; not filled.
  188  0000121c  3c040000	lhi	r4,((LC5_LF0)>>16)&0xffff
  189  00001220  24843118	addui	r4,r4,(LC5_LF0)&0xffff
  190  00001224  afa40000	sw	(r29),r4
  191  00001228  afa10004	sw	4(r29),r1
  192  0000122c  0c000058	jal	_Printf
  193  00001230  54000000	nop; not filled.
  194  00001234  23bd0010	addi	r29,r29,#16
  195  00001238  0c000f00	jal	_exit
  196  0000123c  54000000	nop
  197  00001240          	.endproc _main
  198                      ;;;
  199                      ;;; Stub functions for DLX traps.
  200                      ;;;
  201                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  202                      ;;;
  203                      ;;; The traps such as Open and Close
  204                      ;;; (note the capital letters) are for use by user programs.  The traps
  205                      ;;; with names such as open and close (lower case) are for use by the OS.
  206                      ;;;
  209  00001240          	.align 2
  211                      ;;; The following are the traps to be used by user-level programs
  212                      ;;;
  214  00001240          	.align 2
  215  00001240          	.proc _Open
  216  00001240          	.global _Open
  217  00001240          	_Open:
  218                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  219                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  220                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  221  00001240  44000213	trap	#0x213
  222  00001244  4be00000	jr	r31
  223  00001248  54000000	nop
  224  0000124c          	.endproc _Open
  226  0000124c          	.proc _Close
  227  0000124c          	.global _Close
  228  0000124c          	_Close:
  229  0000124c  44000214	trap	#0x214
  230  00001250  4be00000	jr	r31
  231  00001254  54000000	nop
  232  00001258          	.endproc _Close
  234  00001258          	.proc _Read
  235  00001258          	.global _Read
  236  00001258          	_Read:
  237  00001258  44000210	trap	#0x210
  238  0000125c  4be00000	jr	r31
  239  00001260  54000000	nop
  240  00001264          	.endproc _Read
  242  00001264          	.proc _Write
  243  00001264          	.global _Write
  244  00001264          	_Write:
  245  00001264  44000211	trap	#0x211
  246  00001268  4be00000	jr	r31
  247  0000126c  54000000	nop
  248  00001270          	.endproc _Write
  250  00001270          	.proc _Lseek
  251  00001270          	.global _Lseek
  252  00001270          	_Lseek:
  253  00001270  44000212	trap	#0x212
  254  00001274  4be00000	jr	r31
  255  00001278  54000000	nop
  256  0000127c          	.endproc _Lseek
  258  0000127c          	.proc _Putchar
  259  0000127c          	.global _Putchar
  260  0000127c          	_Putchar:
  261  0000127c  44000280	trap	#0x280
  262  00001280  4be00000	jr	r31
  263  00001284  54000000	nop
  264  00001288          	.endproc _Putchar
  266  00001288          	.proc _Printf
  267  00001288          	.global _Printf
  268  00001288          	_Printf:
  269  00001288  44000201	trap	#0x201
  270  0000128c  4be00000	jr	r31
  271  00001290  54000000	nop
  272  00001294          	.endproc _Printf
  274  00001294          	.proc _getpid
  275  00001294          	.global _getpid
  276  00001294          	_getpid:
  277  00001294  44000431	trap	#0x431
  278  00001298  4be00000	jr	r31
  279  0000129c  54000000	nop
  280  000012a0          	.endproc _getpid
  282  000012a0          	.proc _process_create
  283  000012a0          	.global _process_create
  284  000012a0          	_process_create:
  285  000012a0  44000432	trap	#0x432
  286  000012a4  4be00000	jr	r31
  287  000012a8  54000000	nop
  288  000012ac          	.endproc _process_create
  290  000012ac          	.proc _shmget
  291  000012ac          	.global _shmget
  292  000012ac          	_shmget:
  293  000012ac  44000440	trap	#0x440
  294  000012b0  4be00000	jr	r31
  295  000012b4  54000000	nop
  296  000012b8          	.endproc _shmget
  298  000012b8          	.proc _shmat
  299  000012b8          	.global _shmat
  300  000012b8          	_shmat:
  301  000012b8  44000441	trap	#0x441
  302  000012bc  4be00000	jr	r31
  303  000012c0  54000000	nop
  304  000012c4          	.endproc _shmat
  306  000012c4          	.proc _sem_create
  307  000012c4          	.global _sem_create
  308  000012c4          	_sem_create:
  309  000012c4  44000450	trap	#0x450
  310  000012c8  4be00000	jr	r31
  311  000012cc  54000000	nop
  312  000012d0          	.endproc _sem_create
  314  000012d0          	.proc _sem_wait
  315  000012d0          	.global _sem_wait
  316  000012d0          	_sem_wait:
  317  000012d0  44000451	trap	#0x451
  318  000012d4  4be00000	jr	r31
  319  000012d8  54000000	nop
  320  000012dc          	.endproc _sem_wait
  322  000012dc          	.proc _sem_signal
  323  000012dc          	.global _sem_signal
  324  000012dc          	_sem_signal:
  325  000012dc  44000452	trap	#0x452
  326  000012e0  4be00000	jr	r31
  327  000012e4  54000000	nop
  328  000012e8          	.endproc _sem_signal
  330  000012e8          	.proc _lock_create
  331  000012e8          	.global _lock_create
  332  000012e8          	_lock_create:
  333  000012e8  44000453	trap	#0x453
  334  000012ec  4be00000	jr	r31
  335  000012f0  54000000	nop
  336  000012f4          	.endproc _lock_create
  338  000012f4          	.proc _lock_acquire
  339  000012f4          	.global _lock_acquire
  340  000012f4          	_lock_acquire:
  341  000012f4  44000454	trap	#0x454
  342  000012f8  4be00000	jr	r31
  343  000012fc  54000000	nop
  344  00001300          	.endproc _lock_acquire
  346  00001300          	.proc _lock_release
  347  00001300          	.global _lock_release
  348  00001300          	_lock_release:
  349  00001300  44000455	trap	#0x455
  350  00001304  4be00000	jr	r31
  351  00001308  54000000	nop
  352  0000130c          	.endproc _lock_release
  354  0000130c          	.proc _cond_create
  355  0000130c          	.global _cond_create
  356  0000130c          	_cond_create:
  357  0000130c  44000456	trap	#0x456
  358  00001310  4be00000	jr	r31
  359  00001314  54000000	nop
  360  00001318          	.endproc _cond_create
  362  00001318          	.proc _cond_wait
  363  00001318          	.global _cond_wait
  364  00001318          	_cond_wait:
  365  00001318  44000457	trap	#0x457
  366  0000131c  4be00000	jr	r31
  367  00001320  54000000	nop
  368  00001324          	.endproc _cond_wait
  370  00001324          	.proc _cond_signal
  371  00001324          	.global _cond_signal
  372  00001324          	_cond_signal:
  373  00001324  44000458	trap	#0x458
  374  00001328  4be00000	jr	r31
  375  0000132c  54000000	nop
  376  00001330          	.endproc _cond_signal
  378  00001330          	.proc _cond_broadcast
  379  00001330          	.global _cond_broadcast
  380  00001330          	_cond_broadcast:
  381  00001330  44000459	trap	#0x459
  382  00001334  4be00000	jr	r31
  383  00001338  54000000	nop
  384  0000133c          	.endproc _cond_broadcast
  386  0000133c          	.proc _mbox_create
  387  0000133c          	.global _mbox_create
  388  0000133c          	_mbox_create:
  389  0000133c  44000460	trap	#0x460
  390  00001340  4be00000	jr	r31
  391  00001344  54000000	nop
  392  00001348          	.endproc _mbox_create
  394  00001348          	.proc _mbox_open
  395  00001348          	.global _mbox_open
  396  00001348          	_mbox_open:
  397  00001348  44000461	trap	#0x461
  398  0000134c  4be00000	jr	r31
  399  00001350  54000000	nop
  400  00001354          	.endproc _mbox_open
  402  00001354          	.proc _mbox_close
  403  00001354          	.global _mbox_close
  404  00001354          	_mbox_close:
  405  00001354  44000462	trap	#0x462
  406  00001358  4be00000	jr	r31
  407  0000135c  54000000	nop
  408  00001360          	.endproc _mbox_close
  410  00001360          	.proc _mbox_send
  411  00001360          	.global _mbox_send
  412  00001360          	_mbox_send:
  413  00001360  44000463	trap	#0x463
  414  00001364  4be00000	jr	r31
  415  00001368  54000000	nop
  416  0000136c          	.endproc _mbox_send
  418  0000136c          	.proc _mbox_recv
  419  0000136c          	.global _mbox_recv
  420  0000136c          	_mbox_recv:
  421  0000136c  44000464	trap	#0x464
  422  00001370  4be00000	jr	r31
  423  00001374  54000000	nop
  424  00001378          	.endproc _mbox_recv
  426  00001378          	.proc _sleep
  427  00001378          	.global _sleep
  428  00001378          	_sleep:
  429  00001378  44000465	trap	#0x465
  430  0000137c  4be00000	jr	r31
  431  00001380  54000000	nop
  432  00001384          	.endproc _sleep
  434  00001384          	.proc _yield
  435  00001384          	.global _yield
  436  00001384          	_yield:
  437  00001384  44000466	trap	#0x466
  438  00001388  4be00000	jr	r31
  439  0000138c  54000000	nop
  440  00001390          	.endproc _yield
  443  00001390          	.proc _Exit
  444  00001390          	.global _Exit
  445  00001390          	_Exit:
  446  00001390  44000500	trap	#0x500
  447  00001394  4be00000	jr	r31
  448  00001398  54000000	nop
  449  0000139c          	.endproc _Exit
  452  0000139c          	.proc _malloc
  453  0000139c          	.global _malloc
  454  0000139c          	_malloc:
  455  0000139c  44000467	trap	#0x467
  456  000013a0  4be00000	jr	r31
  457  000013a4          	.endproc _malloc
  460  000013a4          	.proc _mfree
  461  000013a4          	.global _mfree
  462  000013a4          	_mfree:
  463  000013a4  44000468	trap	#0x468
  464  000013a8  4be00000	jr	r31
  465  000013ac          	.endproc _mfree
  466                      ; Compiled by GCC
  468  000013ac          	.align 2
  469  000013ac          	.proc _isspace
  470  000013ac          	.global _isspace
  471  000013ac          	_isspace:
  472                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  473  000013ac  afbefffc	sw	-4(r29),r30; push fp
  474  000013b0  001df020	add	r30,r0,r29; fp = sp
  475  000013b4  afbffff8	sw	-8(r29),r31; push ret addr
  476  000013b8  2fbd0018	subui	r29,r29,#24; alloc local storage
  477  000013bc  afa20000	sw	0(r29),r2
  478  000013c0  afa30004	sw	4(r29),r3
  479  000013c4  afa40008	sw	8(r29),r4
  480  000013c8  83c20003	lb	r2,3(r30)
  481  000013cc  20010000	addi	r1,r0,#0
  482  000013d0  304300ff	andi	r3,r2,#0x00ff
  483  000013d4  60640020	seqi	r4,r3,#32
  484  000013d8  1480002c	bnez	r4,L3_LF2
  485  000013dc  54000000	nop; delay slot nop
  486  000013e0  304300ff	andi	r3,r2,#0x00ff
  487  000013e4  60640009	seqi	r4,r3,#9
  488  000013e8  1480001c	bnez	r4,L3_LF2
  489  000013ec  54000000	nop; delay slot nop
  490  000013f0  304300ff	andi	r3,r2,#0x00ff
  491  000013f4  6064000a	seqi	r4,r3,#10
  492  000013f8  1480000c	bnez	r4,L3_LF2
  493  000013fc  54000000	nop; delay slot nop
  494  00001400  08000008	j	L2_LF2
  495  00001404  54000000	nop; delay slot nop
  496  00001408          	L3_LF2:
  497  00001408  20010001	addi	r1,r0,#1
  498  0000140c          	L2_LF2:
  499  0000140c  08000004	j	L1_LF2
  500  00001410  54000000	nop; delay slot nop
  501  00001414          	L1_LF2:
  502  00001414  8fa20000	lw	r2,0(r29)
  503  00001418  8fa30004	lw	r3,4(r29)
  504  0000141c  8fa40008	lw	r4,8(r29)
  505  00001420  8fdffff8	lw	r31,-8(r30)
  506  00001424  001ee820	add	r29,r0,r30
  507  00001428  8fdefffc	lw	r30,-4(r30)
  508  0000142c  4be00000	jr	r31
  509  00001430  54000000	nop
  510  00001434          	.endproc _isspace
  511  00001434          	.align 2
  512  00001434          	.proc _isxdigit
  513  00001434          	.global _isxdigit
  514  00001434          	_isxdigit:
  515                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  516  00001434  afbefffc	sw	-4(r29),r30; push fp
  517  00001438  001df020	add	r30,r0,r29; fp = sp
  518  0000143c  afbffff8	sw	-8(r29),r31; push ret addr
  519  00001440  2fbd0018	subui	r29,r29,#24; alloc local storage
  520  00001444  afa20000	sw	0(r29),r2
  521  00001448  afa30004	sw	4(r29),r3
  522  0000144c  afa40008	sw	8(r29),r4
  523  00001450  83c20003	lb	r2,3(r30)
  524  00001454  20010000	addi	r1,r0,#0
  525  00001458  304300ff	andi	r3,r2,#0x00ff
  526  0000145c  6c64002f	sgtui	r4,r3,#47
  527  00001460  1080001c	beqz	r4,L7_LF2
  528  00001464  54000000	nop; delay slot nop
  529  00001468  304300ff	andi	r3,r2,#0x00ff
  530  0000146c  70640039	sleui	r4,r3,#57
  531  00001470  1480005c	bnez	r4,L6_LF2
  532  00001474  54000000	nop; delay slot nop
  533  00001478  08000004	j	L7_LF2
  534  0000147c  54000000	nop; delay slot nop
  535  00001480          	L7_LF2:
  536  00001480  304300ff	andi	r3,r2,#0x00ff
  537  00001484  6c640060	sgtui	r4,r3,#96
  538  00001488  1080001c	beqz	r4,L8_LF2
  539  0000148c  54000000	nop; delay slot nop
  540  00001490  304300ff	andi	r3,r2,#0x00ff
  541  00001494  70640066	sleui	r4,r3,#102
  542  00001498  14800034	bnez	r4,L6_LF2
  543  0000149c  54000000	nop; delay slot nop
  544  000014a0  08000004	j	L8_LF2
  545  000014a4  54000000	nop; delay slot nop
  546  000014a8          	L8_LF2:
  547  000014a8  304300ff	andi	r3,r2,#0x00ff
  548  000014ac  6c640040	sgtui	r4,r3,#64
  549  000014b0  10800020	beqz	r4,L5_LF2
  550  000014b4  54000000	nop; delay slot nop
  551  000014b8  304300ff	andi	r3,r2,#0x00ff
  552  000014bc  70640041	sleui	r4,r3,#65
  553  000014c0  1480000c	bnez	r4,L6_LF2
  554  000014c4  54000000	nop; delay slot nop
  555  000014c8  08000008	j	L5_LF2
  556  000014cc  54000000	nop; delay slot nop
  557  000014d0          	L6_LF2:
  558  000014d0  20010001	addi	r1,r0,#1
  559  000014d4          	L5_LF2:
  560  000014d4  08000004	j	L4_LF2
  561  000014d8  54000000	nop; delay slot nop
  562  000014dc          	L4_LF2:
  563  000014dc  8fa20000	lw	r2,0(r29)
  564  000014e0  8fa30004	lw	r3,4(r29)
  565  000014e4  8fa40008	lw	r4,8(r29)
  566  000014e8  8fdffff8	lw	r31,-8(r30)
  567  000014ec  001ee820	add	r29,r0,r30
  568  000014f0  8fdefffc	lw	r30,-4(r30)
  569  000014f4  4be00000	jr	r31
  570  000014f8  54000000	nop
  571  000014fc          	.endproc _isxdigit
  572  000014fc          	.align 2
  573  000014fc          	.proc _dstrcpy
  574  000014fc          	.global _dstrcpy
  575  000014fc          	_dstrcpy:
  576                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  577  000014fc  afbefffc	sw	-4(r29),r30; push fp
  578  00001500  001df020	add	r30,r0,r29; fp = sp
  579  00001504  afbffff8	sw	-8(r29),r31; push ret addr
  580  00001508  2fbd0018	subui	r29,r29,#24; alloc local storage
  581  0000150c  afa20000	sw	0(r29),r2
  582  00001510  afa30004	sw	4(r29),r3
  583  00001514  8fc10000	lw	r1,(r30)
  584  00001518  afc1fff4	sw	-12(r30),r1
  585  0000151c          	L10_LF2:
  586  0000151c  8fc10000	lw	r1,(r30)
  587  00001520  20220001	addi	r2,r1,#1
  588  00001524  afc20000	sw	(r30),r2
  589  00001528  8fc20004	lw	r2,4(r30)
  590  0000152c  20430001	addi	r3,r2,#1
  591  00001530  afc30004	sw	4(r30),r3
  592  00001534  80420000	lb	r2,(r2)
  593  00001538  a0220000	sb	(r1),r2
  594  0000153c  a3c2fff3	sb	-13(r30),r2
  595  00001540          	L12_LF2:
  596  00001540  93c1fff3	lbu	r1,-13(r30)
  597  00001544  64220000	snei	r2,r1,#0
  598  00001548  1440000c	bnez	r2,L13_LF2
  599  0000154c  54000000	nop; delay slot nop
  600  00001550  0800000c	j	L11_LF2
  601  00001554  54000000	nop; delay slot nop
  602  00001558          	L13_LF2:
  603  00001558  0bffffc0	j	L10_LF2
  604  0000155c  54000000	nop; delay slot nop
  605  00001560          	L11_LF2:
  606  00001560  8fc1fff4	lw	r1,-12(r30)
  607  00001564  08000004	j	L9_LF2
  608  00001568  54000000	nop; delay slot nop
  609  0000156c          	L9_LF2:
  610  0000156c  8fa20000	lw	r2,0(r29)
  611  00001570  8fa30004	lw	r3,4(r29)
  612  00001574  8fdffff8	lw	r31,-8(r30)
  613  00001578  001ee820	add	r29,r0,r30
  614  0000157c  8fdefffc	lw	r30,-4(r30)
  615  00001580  4be00000	jr	r31
  616  00001584  54000000	nop
  617  00001588          	.endproc _dstrcpy
  618  00001588          	.align 2
  619  00001588          	.proc _dstrncpy
  620  00001588          	.global _dstrncpy
  621  00001588          	_dstrncpy:
  622                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  623  00001588  afbefffc	sw	-4(r29),r30; push fp
  624  0000158c  001df020	add	r30,r0,r29; fp = sp
  625  00001590  afbffff8	sw	-8(r29),r31; push ret addr
  626  00001594  2fbd0018	subui	r29,r29,#24; alloc local storage
  627  00001598  afa20000	sw	0(r29),r2
  628  0000159c  afa30004	sw	4(r29),r3
  629  000015a0  8fc10000	lw	r1,(r30)
  630  000015a4  afc1fff4	sw	-12(r30),r1
  631  000015a8          	L15_LF2:
  632  000015a8  8fc10008	lw	r1,8(r30)
  633  000015ac  2022ffff	addi	r2,r1,#-1
  634  000015b0  afc20008	sw	8(r30),r2
  635  000015b4  70210000	slei	r1,r1,#0
  636  000015b8  1020000c	beqz	r1,L18_LF2
  637  000015bc  54000000	nop; delay slot nop
  638  000015c0  08000048	j	L16_LF2
  639  000015c4  54000000	nop; delay slot nop
  640  000015c8          	L18_LF2:
  641  000015c8  8fc10000	lw	r1,(r30)
  642  000015cc  20220001	addi	r2,r1,#1
  643  000015d0  afc20000	sw	(r30),r2
  644  000015d4  8fc20004	lw	r2,4(r30)
  645  000015d8  20430001	addi	r3,r2,#1
  646  000015dc  afc30004	sw	4(r30),r3
  647  000015e0  80420000	lb	r2,(r2)
  648  000015e4  a0220000	sb	(r1),r2
  649  000015e8  a3c2fff3	sb	-13(r30),r2
  650  000015ec          	L17_LF2:
  651  000015ec  93c1fff3	lbu	r1,-13(r30)
  652  000015f0  64220000	snei	r2,r1,#0
  653  000015f4  1440000c	bnez	r2,L19_LF2
  654  000015f8  54000000	nop; delay slot nop
  655  000015fc  0800000c	j	L16_LF2
  656  00001600  54000000	nop; delay slot nop
  657  00001604          	L19_LF2:
  658  00001604  0bffffa0	j	L15_LF2
  659  00001608  54000000	nop; delay slot nop
  660  0000160c          	L16_LF2:
  661  0000160c  8fc1fff4	lw	r1,-12(r30)
  662  00001610  08000004	j	L14_LF2
  663  00001614  54000000	nop; delay slot nop
  664  00001618          	L14_LF2:
  665  00001618  8fa20000	lw	r2,0(r29)
  666  0000161c  8fa30004	lw	r3,4(r29)
  667  00001620  8fdffff8	lw	r31,-8(r30)
  668  00001624  001ee820	add	r29,r0,r30
  669  00001628  8fdefffc	lw	r30,-4(r30)
  670  0000162c  4be00000	jr	r31
  671  00001630  54000000	nop
  672  00001634          	.endproc _dstrncpy
  673  00001634          	.align 2
  674  00001634          	.proc _dstrcat
  675  00001634          	.global _dstrcat
  676  00001634          	_dstrcat:
  677                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  678  00001634  afbefffc	sw	-4(r29),r30; push fp
  679  00001638  001df020	add	r30,r0,r29; fp = sp
  680  0000163c  afbffff8	sw	-8(r29),r31; push ret addr
  681  00001640  2fbd0018	subui	r29,r29,#24; alloc local storage
  682  00001644  afa20000	sw	0(r29),r2
  683  00001648  8fc10000	lw	r1,(r30)
  684  0000164c  afc1fff4	sw	-12(r30),r1
  685  00001650          	L21_LF2:
  686  00001650  8fc10000	lw	r1,(r30)
  687  00001654  90220000	lbu	r2,(r1)
  688  00001658  64410000	snei	r1,r2,#0
  689  0000165c  1420000c	bnez	r1,L23_LF2
  690  00001660  54000000	nop; delay slot nop
  691  00001664  0800001c	j	L22_LF2
  692  00001668  54000000	nop; delay slot nop
  693  0000166c          	L23_LF2:
  694  0000166c  8fc20000	lw	r2,(r30)
  695  00001670  20410001	addi	r1,r2,#1
  696  00001674  00011020	add	r2,r0,r1
  697  00001678  afc20000	sw	(r30),r2
  698  0000167c  0bffffd0	j	L21_LF2
  699  00001680  54000000	nop; delay slot nop
  700  00001684          	L22_LF2:
  701  00001684  23bdfff8	addi	r29,r29,#-8
  702  00001688  001d0820	add	r1,r0,r29
  703  0000168c  8fc20000	lw	r2,(r30)
  704  00001690  ac220000	sw	(r1),r2
  705  00001694  8fc20004	lw	r2,4(r30)
  706  00001698  ac220004	sw	4(r1),r2
  707  0000169c  0ffffe5c	jal	_dstrcpy
  708  000016a0  54000000	nop; delay slot nop
  709  000016a4  23bd0008	addi	r29,r29,#8
  710  000016a8  8fc1fff4	lw	r1,-12(r30)
  711  000016ac  08000004	j	L20_LF2
  712  000016b0  54000000	nop; delay slot nop
  713  000016b4          	L20_LF2:
  714  000016b4  8fa20000	lw	r2,0(r29)
  715  000016b8  8fdffff8	lw	r31,-8(r30)
  716  000016bc  001ee820	add	r29,r0,r30
  717  000016c0  8fdefffc	lw	r30,-4(r30)
  718  000016c4  4be00000	jr	r31
  719  000016c8  54000000	nop
  720  000016cc          	.endproc _dstrcat
  721  000016cc          	.align 2
  722  000016cc          	.proc _dstrncmp
  723  000016cc          	.global _dstrncmp
  724  000016cc          	_dstrncmp:
  725                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  726  000016cc  afbefffc	sw	-4(r29),r30; push fp
  727  000016d0  001df020	add	r30,r0,r29; fp = sp
  728  000016d4  afbffff8	sw	-8(r29),r31; push ret addr
  729  000016d8  2fbd0018	subui	r29,r29,#24; alloc local storage
  730  000016dc  afa20000	sw	0(r29),r2
  731  000016e0  afa30004	sw	4(r29),r3
  732  000016e4  54000000	nop
  733  000016e8  20010000	addi	r1,r0,#0
  734  000016ec  afc1fff4	sw	-12(r30),r1
  735  000016f0          	L25_LF2:
  736  000016f0  8fc1fff4	lw	r1,-12(r30)
  737  000016f4  8fc20008	lw	r2,8(r30)
  738  000016f8  0022082a	slt	r1,r1,r2
  739  000016fc  1420000c	bnez	r1,L28_LF2
  740  00001700  54000000	nop; delay slot nop
  741  00001704  08000088	j	L26_LF2
  742  00001708  54000000	nop; delay slot nop
  743  0000170c          	L28_LF2:
  744  0000170c  8fc10004	lw	r1,4(r30)
  745  00001710  90220000	lbu	r2,(r1)
  746  00001714  64410000	snei	r1,r2,#0
  747  00001718  14200018	bnez	r1,L29_LF2
  748  0000171c  54000000	nop; delay slot nop
  749  00001720  20010000	addi	r1,r0,#0
  750  00001724  080000d8	j	L24_LF2
  751  00001728  54000000	nop; delay slot nop
  752  0000172c  08000028	j	L30_LF2
  753  00001730  54000000	nop; delay slot nop
  754  00001734          	L29_LF2:
  755  00001734  8fc10000	lw	r1,(r30)
  756  00001738  8fc20004	lw	r2,4(r30)
  757  0000173c  90210000	lbu	r1,(r1)
  758  00001740  90420000	lbu	r2,(r2)
  759  00001744  00220829	sne	r1,r1,r2
  760  00001748  1020000c	beqz	r1,L30_LF2
  761  0000174c  54000000	nop; delay slot nop
  762  00001750  0800003c	j	L26_LF2
  763  00001754  54000000	nop; delay slot nop
  764  00001758          	L31_LF2:
  765  00001758          	L30_LF2:
  766  00001758  8fc20000	lw	r2,(r30)
  767  0000175c  20410001	addi	r1,r2,#1
  768  00001760  00011020	add	r2,r0,r1
  769  00001764  afc20000	sw	(r30),r2
  770  00001768  8fc20004	lw	r2,4(r30)
  771  0000176c  20410001	addi	r1,r2,#1
  772  00001770  00011020	add	r2,r0,r1
  773  00001774  afc20004	sw	4(r30),r2
  774  00001778          	L27_LF2:
  775  00001778  8fc2fff4	lw	r2,-12(r30)
  776  0000177c  20410001	addi	r1,r2,#1
  777  00001780  00011020	add	r2,r0,r1
  778  00001784  afc2fff4	sw	-12(r30),r2
  779  00001788  0bffff64	j	L25_LF2
  780  0000178c  54000000	nop; delay slot nop
  781  00001790          	L26_LF2:
  782  00001790  8fc1fff4	lw	r1,-12(r30)
  783  00001794  8fc20008	lw	r2,8(r30)
  784  00001798  00220828	seq	r1,r1,r2
  785  0000179c  10200018	beqz	r1,L32_LF2
  786  000017a0  54000000	nop; delay slot nop
  787  000017a4  20010000	addi	r1,r0,#0
  788  000017a8  08000054	j	L24_LF2
  789  000017ac  54000000	nop; delay slot nop
  790  000017b0  0800004c	j	L33_LF2
  791  000017b4  54000000	nop; delay slot nop
  792  000017b8          	L32_LF2:
  793  000017b8  8fc20000	lw	r2,(r30)
  794  000017bc  90410000	lbu	r1,(r2)
  795  000017c0  8fc20004	lw	r2,4(r30)
  796  000017c4  90430000	lbu	r3,(r2)
  797  000017c8  00230822	sub	r1,r1,r3
  798  000017cc  74220000	sgei	r2,r1,#0
  799  000017d0  10400020	beqz	r2,L34_LF2
  800  000017d4  54000000	nop; delay slot nop
  801  000017d8  8fc10000	lw	r1,(r30)
  802  000017dc  8fc20004	lw	r2,4(r30)
  803  000017e0  90210000	lbu	r1,(r1)
  804  000017e4  90420000	lbu	r2,(r2)
  805  000017e8  00220829	sne	r1,r1,r2
  806  000017ec  08000008	j	L35_LF2
  807  000017f0  54000000	nop; delay slot nop
  808  000017f4          	L34_LF2:
  809  000017f4  2001ffff	addi	r1,r0,#-1
  810  000017f8          	L35_LF2:
  811  000017f8  08000004	j	L24_LF2
  812  000017fc  54000000	nop; delay slot nop
  813  00001800          	L33_LF2:
  814  00001800          	L24_LF2:
  815  00001800  8fa20000	lw	r2,0(r29)
  816  00001804  8fa30004	lw	r3,4(r29)
  817  00001808  8fdffff8	lw	r31,-8(r30)
  818  0000180c  001ee820	add	r29,r0,r30
  819  00001810  8fdefffc	lw	r30,-4(r30)
  820  00001814  4be00000	jr	r31
  821  00001818  54000000	nop
  822  0000181c          	.endproc _dstrncmp
  823  0000181c          	.align 2
  824  0000181c          	.proc _dstrlen
  825  0000181c          	.global _dstrlen
  826  0000181c          	_dstrlen:
  827                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  828  0000181c  afbefffc	sw	-4(r29),r30; push fp
  829  00001820  001df020	add	r30,r0,r29; fp = sp
  830  00001824  afbffff8	sw	-8(r29),r31; push ret addr
  831  00001828  2fbd0018	subui	r29,r29,#24; alloc local storage
  832  0000182c  afa20000	sw	0(r29),r2
  833  00001830  20010000	addi	r1,r0,#0
  834  00001834  afc1fff4	sw	-12(r30),r1
  835  00001838          	L37_LF2:
  836  00001838  8fc10000	lw	r1,(r30)
  837  0000183c  20220001	addi	r2,r1,#1
  838  00001840  afc20000	sw	(r30),r2
  839  00001844  90210000	lbu	r1,(r1)
  840  00001848  64220000	snei	r2,r1,#0
  841  0000184c  1440000c	bnez	r2,L39_LF2
  842  00001850  54000000	nop; delay slot nop
  843  00001854  0800001c	j	L38_LF2
  844  00001858  54000000	nop; delay slot nop
  845  0000185c          	L39_LF2:
  846  0000185c  8fc2fff4	lw	r2,-12(r30)
  847  00001860  20410001	addi	r1,r2,#1
  848  00001864  00011020	add	r2,r0,r1
  849  00001868  afc2fff4	sw	-12(r30),r2
  850  0000186c  0bffffc8	j	L37_LF2
  851  00001870  54000000	nop; delay slot nop
  852  00001874          	L38_LF2:
  853  00001874  8fc1fff4	lw	r1,-12(r30)
  854  00001878  08000004	j	L36_LF2
  855  0000187c  54000000	nop; delay slot nop
  856  00001880          	L36_LF2:
  857  00001880  8fa20000	lw	r2,0(r29)
  858  00001884  8fdffff8	lw	r31,-8(r30)
  859  00001888  001ee820	add	r29,r0,r30
  860  0000188c  8fdefffc	lw	r30,-4(r30)
  861  00001890  4be00000	jr	r31
  862  00001894  54000000	nop
  863  00001898          	.endproc _dstrlen
  864  00001898          	.align 2
  865  00001898          	.proc _dstrstr
  866  00001898          	.global _dstrstr
  867  00001898          	_dstrstr:
  868                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  869  00001898  afbefffc	sw	-4(r29),r30; push fp
  870  0000189c  001df020	add	r30,r0,r29; fp = sp
  871  000018a0  afbffff8	sw	-8(r29),r31; push ret addr
  872  000018a4  2fbd0018	subui	r29,r29,#24; alloc local storage
  873  000018a8  afa20000	sw	0(r29),r2
  874  000018ac  23bdfff8	addi	r29,r29,#-8
  875  000018b0  001d0820	add	r1,r0,r29
  876  000018b4  8fc20004	lw	r2,4(r30)
  877  000018b8  ac220000	sw	(r1),r2
  878  000018bc  0fffff5c	jal	_dstrlen
  879  000018c0  54000000	nop; delay slot nop
  880  000018c4  23bd0008	addi	r29,r29,#8
  881  000018c8  afc1fff4	sw	-12(r30),r1
  882  000018cc          	L41_LF2:
  883  000018cc  8fc10000	lw	r1,(r30)
  884  000018d0  90220000	lbu	r2,(r1)
  885  000018d4  64410000	snei	r1,r2,#0
  886  000018d8  1420000c	bnez	r1,L43_LF2
  887  000018dc  54000000	nop; delay slot nop
  888  000018e0  08000060	j	L42_LF2
  889  000018e4  54000000	nop; delay slot nop
  890  000018e8          	L43_LF2:
  891  000018e8  23bdfff0	addi	r29,r29,#-16
  892  000018ec  001d0820	add	r1,r0,r29
  893  000018f0  8fc20000	lw	r2,(r30)
  894  000018f4  ac220000	sw	(r1),r2
  895  000018f8  8fc20004	lw	r2,4(r30)
  896  000018fc  ac220004	sw	4(r1),r2
  897  00001900  8fc2fff4	lw	r2,-12(r30)
  898  00001904  ac220008	sw	8(r1),r2
  899  00001908  0ffffdc0	jal	_dstrncmp
  900  0000190c  54000000	nop; delay slot nop
  901  00001910  23bd0010	addi	r29,r29,#16
  902  00001914  64220000	snei	r2,r1,#0
  903  00001918  14400010	bnez	r2,L44_LF2
  904  0000191c  54000000	nop; delay slot nop
  905  00001920  8fc10000	lw	r1,(r30)
  906  00001924  08000028	j	L40_LF2
  907  00001928  54000000	nop; delay slot nop
  908  0000192c          	L44_LF2:
  909  0000192c  8fc20000	lw	r2,(r30)
  910  00001930  20410001	addi	r1,r2,#1
  911  00001934  00011020	add	r2,r0,r1
  912  00001938  afc20000	sw	(r30),r2
  913  0000193c  0bffff8c	j	L41_LF2
  914  00001940  54000000	nop; delay slot nop
  915  00001944          	L42_LF2:
  916  00001944  20010000	addi	r1,r0,#0
  917  00001948  08000004	j	L40_LF2
  918  0000194c  54000000	nop; delay slot nop
  919  00001950          	L40_LF2:
  920  00001950  8fa20000	lw	r2,0(r29)
  921  00001954  8fdffff8	lw	r31,-8(r30)
  922  00001958  001ee820	add	r29,r0,r30
  923  0000195c  8fdefffc	lw	r30,-4(r30)
  924  00001960  4be00000	jr	r31
  925  00001964  54000000	nop
  926  00001968          	.endproc _dstrstr
  927  00001968          	.align 2
  928  00001968          	.proc _dmindex
  929  00001968          	.global _dmindex
  930  00001968          	_dmindex:
  931                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  932  00001968  afbefffc	sw	-4(r29),r30; push fp
  933  0000196c  001df020	add	r30,r0,r29; fp = sp
  934  00001970  afbffff8	sw	-8(r29),r31; push ret addr
  935  00001974  2fbd0018	subui	r29,r29,#24; alloc local storage
  936  00001978  afa20000	sw	0(r29),r2
  937  0000197c  54000000	nop
  938  00001980          	L46_LF2:
  939  00001980  8fc10000	lw	r1,(r30)
  940  00001984  90220000	lbu	r2,(r1)
  941  00001988  64410000	snei	r1,r2,#0
  942  0000198c  1420000c	bnez	r1,L48_LF2
  943  00001990  54000000	nop; delay slot nop
  944  00001994  08000070	j	L47_LF2
  945  00001998  54000000	nop; delay slot nop
  946  0000199c          	L48_LF2:
  947  0000199c  8fc10004	lw	r1,4(r30)
  948  000019a0  afc1fff4	sw	-12(r30),r1
  949  000019a4          	L49_LF2:
  950  000019a4  8fc1fff4	lw	r1,-12(r30)
  951  000019a8  90220000	lbu	r2,(r1)
  952  000019ac  64410000	snei	r1,r2,#0
  953  000019b0  1420000c	bnez	r1,L52_LF2
  954  000019b4  54000000	nop; delay slot nop
  955  000019b8  08000044	j	L50_LF2
  956  000019bc  54000000	nop; delay slot nop
  957  000019c0          	L52_LF2:
  958  000019c0  8fc10000	lw	r1,(r30)
  959  000019c4  8fc2fff4	lw	r2,-12(r30)
  960  000019c8  90210000	lbu	r1,(r1)
  961  000019cc  90420000	lbu	r2,(r2)
  962  000019d0  00220828	seq	r1,r1,r2
  963  000019d4  10200010	beqz	r1,L51_LF2
  964  000019d8  54000000	nop; delay slot nop
  965  000019dc  8fc10000	lw	r1,(r30)
  966  000019e0  08000030	j	L45_LF2
  967  000019e4  54000000	nop; delay slot nop
  968  000019e8          	L53_LF2:
  969  000019e8          	L51_LF2:
  970  000019e8  8fc2fff4	lw	r2,-12(r30)
  971  000019ec  20410001	addi	r1,r2,#1
  972  000019f0  00011020	add	r2,r0,r1
  973  000019f4  afc2fff4	sw	-12(r30),r2
  974  000019f8  0bffffa8	j	L49_LF2
  975  000019fc  54000000	nop; delay slot nop
  976  00001a00          	L50_LF2:
  977  00001a00  0bffff7c	j	L46_LF2
  978  00001a04  54000000	nop; delay slot nop
  979  00001a08          	L47_LF2:
  980  00001a08  20010000	addi	r1,r0,#0
  981  00001a0c  08000004	j	L45_LF2
  982  00001a10  54000000	nop; delay slot nop
  983  00001a14          	L45_LF2:
  984  00001a14  8fa20000	lw	r2,0(r29)
  985  00001a18  8fdffff8	lw	r31,-8(r30)
  986  00001a1c  001ee820	add	r29,r0,r30
  987  00001a20  8fdefffc	lw	r30,-4(r30)
  988  00001a24  4be00000	jr	r31
  989  00001a28  54000000	nop
  990  00001a2c          	.endproc _dmindex
  991  00001a2c          	.align 2
  992  00001a2c          	.proc _dindex
  993  00001a2c          	.global _dindex
  994  00001a2c          	_dindex:
  995                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  996  00001a2c  afbefffc	sw	-4(r29),r30; push fp
  997  00001a30  001df020	add	r30,r0,r29; fp = sp
  998  00001a34  afbffff8	sw	-8(r29),r31; push ret addr
  999  00001a38  2fbd0010	subui	r29,r29,#16; alloc local storage
 1000  00001a3c  afa20000	sw	0(r29),r2
 1001  00001a40  54000000	nop
 1002  00001a44          	L55_LF2:
 1003  00001a44  8fc10000	lw	r1,(r30)
 1004  00001a48  90220000	lbu	r2,(r1)
 1005  00001a4c  64410000	snei	r1,r2,#0
 1006  00001a50  1420000c	bnez	r1,L57_LF2
 1007  00001a54  54000000	nop; delay slot nop
 1008  00001a58  08000040	j	L56_LF2
 1009  00001a5c  54000000	nop; delay slot nop
 1010  00001a60          	L57_LF2:
 1011  00001a60  8fc10000	lw	r1,(r30)
 1012  00001a64  90220000	lbu	r2,(r1)
 1013  00001a68  8fc10004	lw	r1,4(r30)
 1014  00001a6c  00411028	seq	r2,r2,r1
 1015  00001a70  10400010	beqz	r2,L58_LF2
 1016  00001a74  54000000	nop; delay slot nop
 1017  00001a78  8fc10000	lw	r1,(r30)
 1018  00001a7c  08000028	j	L54_LF2
 1019  00001a80  54000000	nop; delay slot nop
 1020  00001a84          	L58_LF2:
 1021  00001a84  8fc20000	lw	r2,(r30)
 1022  00001a88  20410001	addi	r1,r2,#1
 1023  00001a8c  00011020	add	r2,r0,r1
 1024  00001a90  afc20000	sw	(r30),r2
 1025  00001a94  0bffffac	j	L55_LF2
 1026  00001a98  54000000	nop; delay slot nop
 1027  00001a9c          	L56_LF2:
 1028  00001a9c  20010000	addi	r1,r0,#0
 1029  00001aa0  08000004	j	L54_LF2
 1030  00001aa4  54000000	nop; delay slot nop
 1031  00001aa8          	L54_LF2:
 1032  00001aa8  8fa20000	lw	r2,0(r29)
 1033  00001aac  8fdffff8	lw	r31,-8(r30)
 1034  00001ab0  001ee820	add	r29,r0,r30
 1035  00001ab4  8fdefffc	lw	r30,-4(r30)
 1036  00001ab8  4be00000	jr	r31
 1037  00001abc  54000000	nop
 1038  00001ac0          	.endproc _dindex
 1039  00001ac0          	.align 2
 1040  00001ac0          	.proc _ditoa
 1041  00001ac0          	.global _ditoa
 1042  00001ac0          	_ditoa:
 1043                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1044  00001ac0  afbefffc	sw	-4(r29),r30; push fp
 1045  00001ac4  001df020	add	r30,r0,r29; fp = sp
 1046  00001ac8  afbffff8	sw	-8(r29),r31; push ret addr
 1047  00001acc  2fbd0018	subui	r29,r29,#24; alloc local storage
 1048  00001ad0  afa20000	sw	0(r29),r2
 1049  00001ad4  afa30004	sw	4(r29),r3
 1050  00001ad8  8fc10000	lw	r1,(r30)
 1051  00001adc  68220000	slti	r2,r1,#0
 1052  00001ae0  1040002c	beqz	r2,L60_LF2
 1053  00001ae4  54000000	nop; delay slot nop
 1054  00001ae8  8fc10004	lw	r1,4(r30)
 1055  00001aec  20220001	addi	r2,r1,#1
 1056  00001af0  afc20004	sw	4(r30),r2
 1057  00001af4  2002002d	addi	r2,r0,(#0x2d)&0xff
 1058  00001af8  a0220000	sb	(r1),r2
 1059  00001afc  8fc10000	lw	r1,(r30)
 1060  00001b00  00011022	sub	r2,r0,r1
 1061  00001b04  afc20000	sw	(r30),r2
 1062  00001b08  08000118	j	L61_LF2
 1063  00001b0c  54000000	nop; delay slot nop
 1064  00001b10          	L60_LF2:
 1065  00001b10  8fc10000	lw	r1,(r30)
 1066  00001b14  64220000	snei	r2,r1,#0
 1067  00001b18  14400020	bnez	r2,L62_LF2
 1068  00001b1c  54000000	nop; delay slot nop
 1069  00001b20  8fc10004	lw	r1,4(r30)
 1070  00001b24  20220001	addi	r2,r1,#1
 1071  00001b28  afc20004	sw	4(r30),r2
 1072  00001b2c  20020030	addi	r2,r0,(#0x30)&0xff
 1073  00001b30  a0220000	sb	(r1),r2
 1074  00001b34  080000ec	j	L61_LF2
 1075  00001b38  54000000	nop; delay slot nop
 1076  00001b3c          	L62_LF2:
 1077  00001b3c  20010001	addi	r1,r0,#1
 1078  00001b40  afc1fff4	sw	-12(r30),r1
 1079  00001b44          	L64_LF2:
 1080  00001b44  8fc1fff4	lw	r1,-12(r30)
 1081  00001b48  8fc20000	lw	r2,(r30)
 1082  00001b4c  0022082c	sle	r1,r1,r2
 1083  00001b50  1420000c	bnez	r1,L66_LF2
 1084  00001b54  54000000	nop; delay slot nop
 1085  00001b58  08000024	j	L65_LF2
 1086  00001b5c  54000000	nop; delay slot nop
 1087  00001b60          	L67_LF2:
 1088  00001b60          	L66_LF2:
 1089  00001b60  8fc1fff4	lw	r1,-12(r30)
 1090  00001b64  00011820	add	r3,r0,r1
 1091  00001b68  50620002	slli	r2,r3,#0x2
 1092  00001b6c  00411020	add	r2,r2,r1
 1093  00001b70  50410001	slli	r1,r2,#0x1
 1094  00001b74  afc1fff4	sw	-12(r30),r1
 1095  00001b78  0bffffc8	j	L64_LF2
 1096  00001b7c  54000000	nop; delay slot nop
 1097  00001b80          	L65_LF2:
 1098  00001b80  54000000	nop
 1099  00001b84          	L68_LF2:
 1100  00001b84  8fc1fff4	lw	r1,-12(r30)
 1101  00001b88  2002000a	addi	r2,r0,#10
 1102  00001b8c  00200035	movi2fp	f0,r1
 1103  00001b90  00400835	movi2fp	f1,r2
 1104  00001b94  0401000f	div	f0,f0,f1
 1105  00001b98  00000834	movfp2i	r1,f0
 1106  00001b9c  afc1fff4	sw	-12(r30),r1
 1107  00001ba0  8fc10004	lw	r1,4(r30)
 1108  00001ba4  20220001	addi	r2,r1,#1
 1109  00001ba8  afc20004	sw	4(r30),r2
 1110  00001bac  8fc20000	lw	r2,(r30)
 1111  00001bb0  8fc3fff4	lw	r3,-12(r30)
 1112  00001bb4  00400035	movi2fp	f0,r2
 1113  00001bb8  00600835	movi2fp	f1,r3
 1114  00001bbc  0401000f	div	f0,f0,f1
 1115  00001bc0  00001034	movfp2i	r2,f0
 1116  00001bc4  00021820	add	r3,r0,r2
 1117  00001bc8  20620030	addi	r2,r3,#48
 1118  00001bcc  a0220000	sb	(r1),r2
 1119  00001bd0  8fc10000	lw	r1,(r30)
 1120  00001bd4  8fc3fff4	lw	r3,-12(r30)
 1121  00001bd8  00200035	movi2fp	f0,r1
 1122  00001bdc  00600835	movi2fp	f1,r3
 1123  00001be0  0401000f	div	f0,f0,f1
 1124  00001be4  00001034	movfp2i	r2,f0
 1125  00001be8  8fc3fff4	lw	r3,-12(r30)
 1126  00001bec  00400035	movi2fp	f0,r2
 1127  00001bf0  00600835	movi2fp	f1,r3
 1128  00001bf4  0401000e	mult	f0,f0,f1
 1129  00001bf8  00001034	movfp2i	r2,f0
 1130  00001bfc  00220822	sub	r1,r1,r2
 1131  00001c00  afc10000	sw	(r30),r1
 1132  00001c04          	L70_LF2:
 1133  00001c04  8fc1fff4	lw	r1,-12(r30)
 1134  00001c08  6c220001	sgti	r2,r1,#1
 1135  00001c0c  1440000c	bnez	r2,L71_LF2
 1136  00001c10  54000000	nop; delay slot nop
 1137  00001c14  0800000c	j	L61_LF2
 1138  00001c18  54000000	nop; delay slot nop
 1139  00001c1c          	L71_LF2:
 1140  00001c1c  0bffff64	j	L68_LF2
 1141  00001c20  54000000	nop; delay slot nop
 1142  00001c24          	L69_LF2:
 1143  00001c24          	L63_LF2:
 1144  00001c24          	L61_LF2:
 1145  00001c24  8fc10004	lw	r1,4(r30)
 1146  00001c28  20020000	addi	r2,r0,(#0x0)&0xff
 1147  00001c2c  a0220000	sb	(r1),r2
 1148  00001c30          	L59_LF2:
 1149  00001c30  8fa20000	lw	r2,0(r29)
 1150  00001c34  8fa30004	lw	r3,4(r29)
 1151  00001c38  8fdffff8	lw	r31,-8(r30)
 1152  00001c3c  001ee820	add	r29,r0,r30
 1153  00001c40  8fdefffc	lw	r30,-4(r30)
 1154  00001c44  4be00000	jr	r31
 1155  00001c48  54000000	nop
 1156  00001c4c          	.endproc _ditoa
 1157  00001c4c          	.align 2
 1158  00001c4c          	.proc _dstrtol
 1159  00001c4c          	.global _dstrtol
 1160  00001c4c          	_dstrtol:
 1161                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1162  00001c4c  afbefffc	sw	-4(r29),r30; push fp
 1163  00001c50  001df020	add	r30,r0,r29; fp = sp
 1164  00001c54  afbffff8	sw	-8(r29),r31; push ret addr
 1165  00001c58  2fbd0020	subui	r29,r29,#32; alloc local storage
 1166  00001c5c  afa20000	sw	0(r29),r2
 1167  00001c60  20010000	addi	r1,r0,#0
 1168  00001c64  afc1fff4	sw	-12(r30),r1
 1169  00001c68          	L73_LF2:
 1170  00001c68  8fc10000	lw	r1,(r30)
 1171  00001c6c  90220000	lbu	r2,(r1)
 1172  00001c70  60410020	seqi	r1,r2,#32
 1173  00001c74  14200034	bnez	r1,L75_LF2
 1174  00001c78  54000000	nop; delay slot nop
 1175  00001c7c  8fc10000	lw	r1,(r30)
 1176  00001c80  90220000	lbu	r2,(r1)
 1177  00001c84  60410009	seqi	r1,r2,#9
 1178  00001c88  14200020	bnez	r1,L75_LF2
 1179  00001c8c  54000000	nop; delay slot nop
 1180  00001c90  8fc10000	lw	r1,(r30)
 1181  00001c94  90220000	lbu	r2,(r1)
 1182  00001c98  6041000a	seqi	r1,r2,#10
 1183  00001c9c  1420000c	bnez	r1,L75_LF2
 1184  00001ca0  54000000	nop; delay slot nop
 1185  00001ca4  0800001c	j	L74_LF2
 1186  00001ca8  54000000	nop; delay slot nop
 1187  00001cac          	L75_LF2:
 1188  00001cac  8fc20000	lw	r2,(r30)
 1189  00001cb0  20410001	addi	r1,r2,#1
 1190  00001cb4  00011020	add	r2,r0,r1
 1191  00001cb8  afc20000	sw	(r30),r2
 1192  00001cbc  0bffffa8	j	L73_LF2
 1193  00001cc0  54000000	nop; delay slot nop
 1194  00001cc4          	L74_LF2:
 1195  00001cc4  8fc10004	lw	r1,4(r30)
 1196  00001cc8  64220000	snei	r2,r1,#0
 1197  00001ccc  10400010	beqz	r2,L76_LF2
 1198  00001cd0  54000000	nop; delay slot nop
 1199  00001cd4  8fc10004	lw	r1,4(r30)
 1200  00001cd8  8fc20000	lw	r2,(r30)
 1201  00001cdc  ac220000	sw	(r1),r2
 1202  00001ce0          	L76_LF2:
 1203  00001ce0  8fc10000	lw	r1,(r30)
 1204  00001ce4  90220000	lbu	r2,(r1)
 1205  00001ce8  64410000	snei	r1,r2,#0
 1206  00001cec  14200010	bnez	r1,L77_LF2
 1207  00001cf0  54000000	nop; delay slot nop
 1208  00001cf4  8fc1fff4	lw	r1,-12(r30)
 1209  00001cf8  08000294	j	L72_LF2
 1210  00001cfc  54000000	nop; delay slot nop
 1211  00001d00          	L77_LF2:
 1212  00001d00  8fc10000	lw	r1,(r30)
 1213  00001d04  90220000	lbu	r2,(r1)
 1214  00001d08  6041002d	seqi	r1,r2,#45
 1215  00001d0c  10200024	beqz	r1,L78_LF2
 1216  00001d10  54000000	nop; delay slot nop
 1217  00001d14  2001ffff	addi	r1,r0,#-1
 1218  00001d18  afc1ffec	sw	-20(r30),r1
 1219  00001d1c  8fc20000	lw	r2,(r30)
 1220  00001d20  20410001	addi	r1,r2,#1
 1221  00001d24  00011020	add	r2,r0,r1
 1222  00001d28  afc20000	sw	(r30),r2
 1223  00001d2c  0800000c	j	L79_LF2
 1224  00001d30  54000000	nop; delay slot nop
 1225  00001d34          	L78_LF2:
 1226  00001d34  20010001	addi	r1,r0,#1
 1227  00001d38  afc1ffec	sw	-20(r30),r1
 1228  00001d3c          	L79_LF2:
 1229  00001d3c  8fc10008	lw	r1,8(r30)
 1230  00001d40  64220000	snei	r2,r1,#0
 1231  00001d44  14400090	bnez	r2,L80_LF2
 1232  00001d48  54000000	nop; delay slot nop
 1233  00001d4c  8fc10000	lw	r1,(r30)
 1234  00001d50  90220000	lbu	r2,(r1)
 1235  00001d54  60410030	seqi	r1,r2,#48
 1236  00001d58  10200074	beqz	r1,L81_LF2
 1237  00001d5c  54000000	nop; delay slot nop
 1238  00001d60  8fc20000	lw	r2,(r30)
 1239  00001d64  20410001	addi	r1,r2,#1
 1240  00001d68  00011020	add	r2,r0,r1
 1241  00001d6c  afc20000	sw	(r30),r2
 1242  00001d70  8fc10000	lw	r1,(r30)
 1243  00001d74  90220000	lbu	r2,(r1)
 1244  00001d78  60410078	seqi	r1,r2,#120
 1245  00001d7c  14200020	bnez	r1,L83_LF2
 1246  00001d80  54000000	nop; delay slot nop
 1247  00001d84  8fc10000	lw	r1,(r30)
 1248  00001d88  90220000	lbu	r2,(r1)
 1249  00001d8c  60410058	seqi	r1,r2,#88
 1250  00001d90  1420000c	bnez	r1,L83_LF2
 1251  00001d94  54000000	nop; delay slot nop
 1252  00001d98  08000024	j	L82_LF2
 1253  00001d9c  54000000	nop; delay slot nop
 1254  00001da0          	L83_LF2:
 1255  00001da0  20010010	addi	r1,r0,#16
 1256  00001da4  afc10008	sw	8(r30),r1
 1257  00001da8  8fc20000	lw	r2,(r30)
 1258  00001dac  20410001	addi	r1,r2,#1
 1259  00001db0  00011020	add	r2,r0,r1
 1260  00001db4  afc20000	sw	(r30),r2
 1261  00001db8  0800000c	j	L84_LF2
 1262  00001dbc  54000000	nop; delay slot nop
 1263  00001dc0          	L82_LF2:
 1264  00001dc0  20010008	addi	r1,r0,#8
 1265  00001dc4  afc10008	sw	8(r30),r1
 1266  00001dc8          	L84_LF2:
 1267  00001dc8  0800000c	j	L80_LF2
 1268  00001dcc  54000000	nop; delay slot nop
 1269  00001dd0          	L81_LF2:
 1270  00001dd0  2001000a	addi	r1,r0,#10
 1271  00001dd4  afc10008	sw	8(r30),r1
 1272  00001dd8          	L85_LF2:
 1273  00001dd8          	L80_LF2:
 1274  00001dd8  8fc10008	lw	r1,8(r30)
 1275  00001ddc  70220000	slei	r2,r1,#0
 1276  00001de0  1440001c	bnez	r2,L87_LF2
 1277  00001de4  54000000	nop; delay slot nop
 1278  00001de8  8fc10008	lw	r1,8(r30)
 1279  00001dec  6c220010	sgti	r2,r1,#16
 1280  00001df0  1440000c	bnez	r2,L87_LF2
 1281  00001df4  54000000	nop; delay slot nop
 1282  00001df8  08000010	j	L86_LF2
 1283  00001dfc  54000000	nop; delay slot nop
 1284  00001e00          	L87_LF2:
 1285  00001e00  8fc1fff4	lw	r1,-12(r30)
 1286  00001e04  08000188	j	L72_LF2
 1287  00001e08  54000000	nop; delay slot nop
 1288  00001e0c          	L86_LF2:
 1289  00001e0c  54000000	nop
 1290  00001e10          	L88_LF2:
 1291  00001e10  8fc10000	lw	r1,(r30)
 1292  00001e14  90220000	lbu	r2,(r1)
 1293  00001e18  6c41002f	sgtui	r1,r2,#47
 1294  00001e1c  10200030	beqz	r1,L91_LF2
 1295  00001e20  54000000	nop; delay slot nop
 1296  00001e24  8fc10000	lw	r1,(r30)
 1297  00001e28  90220000	lbu	r2,(r1)
 1298  00001e2c  70410039	sleui	r1,r2,#57
 1299  00001e30  1020001c	beqz	r1,L91_LF2
 1300  00001e34  54000000	nop; delay slot nop
 1301  00001e38  8fc10000	lw	r1,(r30)
 1302  00001e3c  90220000	lbu	r2,(r1)
 1303  00001e40  2041ffd0	addi	r1,r2,#-48
 1304  00001e44  afc1fff0	sw	-16(r30),r1
 1305  00001e48  0800008c	j	L92_LF2
 1306  00001e4c  54000000	nop; delay slot nop
 1307  00001e50          	L91_LF2:
 1308  00001e50  8fc10000	lw	r1,(r30)
 1309  00001e54  90220000	lbu	r2,(r1)
 1310  00001e58  6c410060	sgtui	r1,r2,#96
 1311  00001e5c  10200030	beqz	r1,L93_LF2
 1312  00001e60  54000000	nop; delay slot nop
 1313  00001e64  8fc10000	lw	r1,(r30)
 1314  00001e68  90220000	lbu	r2,(r1)
 1315  00001e6c  7041007a	sleui	r1,r2,#122
 1316  00001e70  1020001c	beqz	r1,L93_LF2
 1317  00001e74  54000000	nop; delay slot nop
 1318  00001e78  8fc10000	lw	r1,(r30)
 1319  00001e7c  90220000	lbu	r2,(r1)
 1320  00001e80  2041ffa9	addi	r1,r2,#-87
 1321  00001e84  afc1fff0	sw	-16(r30),r1
 1322  00001e88  0800004c	j	L92_LF2
 1323  00001e8c  54000000	nop; delay slot nop
 1324  00001e90          	L93_LF2:
 1325  00001e90  8fc10000	lw	r1,(r30)
 1326  00001e94  90220000	lbu	r2,(r1)
 1327  00001e98  6c410040	sgtui	r1,r2,#64
 1328  00001e9c  10200030	beqz	r1,L95_LF2
 1329  00001ea0  54000000	nop; delay slot nop
 1330  00001ea4  8fc10000	lw	r1,(r30)
 1331  00001ea8  90220000	lbu	r2,(r1)
 1332  00001eac  7041005a	sleui	r1,r2,#90
 1333  00001eb0  1020001c	beqz	r1,L95_LF2
 1334  00001eb4  54000000	nop; delay slot nop
 1335  00001eb8  8fc10000	lw	r1,(r30)
 1336  00001ebc  90220000	lbu	r2,(r1)
 1337  00001ec0  2041ffc9	addi	r1,r2,#-55
 1338  00001ec4  afc1fff0	sw	-16(r30),r1
 1339  00001ec8  0800000c	j	L92_LF2
 1340  00001ecc  54000000	nop; delay slot nop
 1341  00001ed0          	L95_LF2:
 1342  00001ed0  200103e8	addi	r1,r0,#1000
 1343  00001ed4  afc1fff0	sw	-16(r30),r1
 1344  00001ed8          	L96_LF2:
 1345  00001ed8          	L94_LF2:
 1346  00001ed8          	L92_LF2:
 1347  00001ed8  8fc1fff0	lw	r1,-16(r30)
 1348  00001edc  8fc20008	lw	r2,8(r30)
 1349  00001ee0  0022082a	slt	r1,r1,r2
 1350  00001ee4  10200040	beqz	r1,L90_LF2
 1351  00001ee8  54000000	nop; delay slot nop
 1352  00001eec  8fc1fff4	lw	r1,-12(r30)
 1353  00001ef0  8fc20008	lw	r2,8(r30)
 1354  00001ef4  00200035	movi2fp	f0,r1
 1355  00001ef8  00400835	movi2fp	f1,r2
 1356  00001efc  0401000e	mult	f0,f0,f1
 1357  00001f00  00000834	movfp2i	r1,f0
 1358  00001f04  afc1fff4	sw	-12(r30),r1
 1359  00001f08  8fc1fff4	lw	r1,-12(r30)
 1360  00001f0c  8fc2fff0	lw	r2,-16(r30)
 1361  00001f10  00220820	add	r1,r1,r2
 1362  00001f14  afc1fff4	sw	-12(r30),r1
 1363  00001f18  8fc20000	lw	r2,(r30)
 1364  00001f1c  20410001	addi	r1,r2,#1
 1365  00001f20  00011020	add	r2,r0,r1
 1366  00001f24  afc20000	sw	(r30),r2
 1367  00001f28          	L97_LF2:
 1368  00001f28          	L90_LF2:
 1369  00001f28  8fc1fff0	lw	r1,-16(r30)
 1370  00001f2c  8fc20008	lw	r2,8(r30)
 1371  00001f30  0022082a	slt	r1,r1,r2
 1372  00001f34  1420000c	bnez	r1,L98_LF2
 1373  00001f38  54000000	nop; delay slot nop
 1374  00001f3c  0800000c	j	L89_LF2
 1375  00001f40  54000000	nop; delay slot nop
 1376  00001f44          	L98_LF2:
 1377  00001f44  0bfffec8	j	L88_LF2
 1378  00001f48  54000000	nop; delay slot nop
 1379  00001f4c          	L89_LF2:
 1380  00001f4c  8fc10004	lw	r1,4(r30)
 1381  00001f50  64220000	snei	r2,r1,#0
 1382  00001f54  10400010	beqz	r2,L99_LF2
 1383  00001f58  54000000	nop; delay slot nop
 1384  00001f5c  8fc10004	lw	r1,4(r30)
 1385  00001f60  8fc20000	lw	r2,(r30)
 1386  00001f64  ac220000	sw	(r1),r2
 1387  00001f68          	L99_LF2:
 1388  00001f68  8fc1fff4	lw	r1,-12(r30)
 1389  00001f6c  8fc2ffec	lw	r2,-20(r30)
 1390  00001f70  00200035	movi2fp	f0,r1
 1391  00001f74  00400835	movi2fp	f1,r2
 1392  00001f78  0401000e	mult	f0,f0,f1
 1393  00001f7c  00000834	movfp2i	r1,f0
 1394  00001f80  afc1fff4	sw	-12(r30),r1
 1395  00001f84  8fc1fff4	lw	r1,-12(r30)
 1396  00001f88  08000004	j	L72_LF2
 1397  00001f8c  54000000	nop; delay slot nop
 1398  00001f90          	L72_LF2:
 1399  00001f90  8fa20000	lw	r2,0(r29)
 1400  00001f94  8fdffff8	lw	r31,-8(r30)
 1401  00001f98  001ee820	add	r29,r0,r30
 1402  00001f9c  8fdefffc	lw	r30,-4(r30)
 1403  00001fa0  4be00000	jr	r31
 1404  00001fa4  54000000	nop
 1405  00001fa8          	.endproc _dstrtol
 1406  00001fa8          	.align 2
 1407  00001fa8          	.proc _bcopy
 1408  00001fa8          	.global _bcopy
 1409  00001fa8          	_bcopy:
 1410                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1411  00001fa8  afbefffc	sw	-4(r29),r30; push fp
 1412  00001fac  001df020	add	r30,r0,r29; fp = sp
 1413  00001fb0  afbffff8	sw	-8(r29),r31; push ret addr
 1414  00001fb4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1415  00001fb8  afa20000	sw	0(r29),r2
 1416  00001fbc  afa30004	sw	4(r29),r3
 1417  00001fc0  54000000	nop
 1418  00001fc4          	L101_LF2:
 1419  00001fc4  8fc10008	lw	r1,8(r30)
 1420  00001fc8  2022ffff	addi	r2,r1,#-1
 1421  00001fcc  afc20008	sw	8(r30),r2
 1422  00001fd0  6c210000	sgti	r1,r1,#0
 1423  00001fd4  1420000c	bnez	r1,L103_LF2
 1424  00001fd8  54000000	nop; delay slot nop
 1425  00001fdc  0800002c	j	L102_LF2
 1426  00001fe0  54000000	nop; delay slot nop
 1427  00001fe4          	L103_LF2:
 1428  00001fe4  8fc10004	lw	r1,4(r30)
 1429  00001fe8  20220001	addi	r2,r1,#1
 1430  00001fec  afc20004	sw	4(r30),r2
 1431  00001ff0  8fc20000	lw	r2,(r30)
 1432  00001ff4  20430001	addi	r3,r2,#1
 1433  00001ff8  afc30000	sw	(r30),r3
 1434  00001ffc  80420000	lb	r2,(r2)
 1435  00002000  a0220000	sb	(r1),r2
 1436  00002004  0bffffbc	j	L101_LF2
 1437  00002008  54000000	nop; delay slot nop
 1438  0000200c          	L102_LF2:
 1439  0000200c          	L100_LF2:
 1440  0000200c  8fa20000	lw	r2,0(r29)
 1441  00002010  8fa30004	lw	r3,4(r29)
 1442  00002014  8fdffff8	lw	r31,-8(r30)
 1443  00002018  001ee820	add	r29,r0,r30
 1444  0000201c  8fdefffc	lw	r30,-4(r30)
 1445  00002020  4be00000	jr	r31
 1446  00002024  54000000	nop
 1447  00002028          	.endproc _bcopy
 1448  00002028          	.align 2
 1449  00002028          	.proc _bzero
 1450  00002028          	.global _bzero
 1451  00002028          	_bzero:
 1452                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1453  00002028  afbefffc	sw	-4(r29),r30; push fp
 1454  0000202c  001df020	add	r30,r0,r29; fp = sp
 1455  00002030  afbffff8	sw	-8(r29),r31; push ret addr
 1456  00002034  2fbd0010	subui	r29,r29,#16; alloc local storage
 1457  00002038  afa20000	sw	0(r29),r2
 1458  0000203c  54000000	nop
 1459  00002040          	L105_LF2:
 1460  00002040  8fc10004	lw	r1,4(r30)
 1461  00002044  2022ffff	addi	r2,r1,#-1
 1462  00002048  afc20004	sw	4(r30),r2
 1463  0000204c  6c210000	sgti	r1,r1,#0
 1464  00002050  1420000c	bnez	r1,L107_LF2
 1465  00002054  54000000	nop; delay slot nop
 1466  00002058  08000020	j	L106_LF2
 1467  0000205c  54000000	nop; delay slot nop
 1468  00002060          	L107_LF2:
 1469  00002060  8fc10000	lw	r1,(r30)
 1470  00002064  20220001	addi	r2,r1,#1
 1471  00002068  afc20000	sw	(r30),r2
 1472  0000206c  20020000	addi	r2,r0,(#0x0)&0xff
 1473  00002070  a0220000	sb	(r1),r2
 1474  00002074  0bffffc8	j	L105_LF2
 1475  00002078  54000000	nop; delay slot nop
 1476  0000207c          	L106_LF2:
 1477  0000207c          	L104_LF2:
 1478  0000207c  8fa20000	lw	r2,0(r29)
 1479  00002080  8fdffff8	lw	r31,-8(r30)
 1480  00002084  001ee820	add	r29,r0,r30
 1481  00002088  8fdefffc	lw	r30,-4(r30)
 1482  0000208c  4be00000	jr	r31
 1483  00002090  54000000	nop
 1484  00002094          	.endproc _bzero
 1485  00002094          	.align 2
 1486  00002094          	.proc _min
 1487  00002094          	.global _min
 1488  00002094          	_min:
 1489                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1490  00002094  afbefffc	sw	-4(r29),r30; push fp
 1491  00002098  001df020	add	r30,r0,r29; fp = sp
 1492  0000209c  afbffff8	sw	-8(r29),r31; push ret addr
 1493  000020a0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1494  000020a4  afa20000	sw	0(r29),r2
 1495  000020a8  afa30004	sw	4(r29),r3
 1496  000020ac  8fc10000	lw	r1,(r30)
 1497  000020b0  8fc20004	lw	r2,4(r30)
 1498  000020b4  0022182c	sle	r3,r1,r2
 1499  000020b8  14600008	bnez	r3,L109_LF2
 1500  000020bc  54000000	nop; delay slot nop
 1501  000020c0  8fc10004	lw	r1,4(r30)
 1502  000020c4          	L109_LF2:
 1503  000020c4  08000004	j	L108_LF2
 1504  000020c8  54000000	nop; delay slot nop
 1505  000020cc          	L108_LF2:
 1506  000020cc  8fa20000	lw	r2,0(r29)
 1507  000020d0  8fa30004	lw	r3,4(r29)
 1508  000020d4  8fdffff8	lw	r31,-8(r30)
 1509  000020d8  001ee820	add	r29,r0,r30
 1510  000020dc  8fdefffc	lw	r30,-4(r30)
 1511  000020e0  4be00000	jr	r31
 1512  000020e4  54000000	nop
 1513  000020e8          	.endproc _min
 1514  000020e8          	.align 2
 1515  000020e8          	.proc _max
 1516  000020e8          	.global _max
 1517  000020e8          	_max:
 1518                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1519  000020e8  afbefffc	sw	-4(r29),r30; push fp
 1520  000020ec  001df020	add	r30,r0,r29; fp = sp
 1521  000020f0  afbffff8	sw	-8(r29),r31; push ret addr
 1522  000020f4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1523  000020f8  afa20000	sw	0(r29),r2
 1524  000020fc  afa30004	sw	4(r29),r3
 1525  00002100  8fc10000	lw	r1,(r30)
 1526  00002104  8fc20004	lw	r2,4(r30)
 1527  00002108  0022182d	sge	r3,r1,r2
 1528  0000210c  14600008	bnez	r3,L111_LF2
 1529  00002110  54000000	nop; delay slot nop
 1530  00002114  8fc10004	lw	r1,4(r30)
 1531  00002118          	L111_LF2:
 1532  00002118  08000004	j	L110_LF2
 1533  0000211c  54000000	nop; delay slot nop
 1534  00002120          	L110_LF2:
 1535  00002120  8fa20000	lw	r2,0(r29)
 1536  00002124  8fa30004	lw	r3,4(r29)
 1537  00002128  8fdffff8	lw	r31,-8(r30)
 1538  0000212c  001ee820	add	r29,r0,r30
 1539  00002130  8fdefffc	lw	r30,-4(r30)
 1540  00002134  4be00000	jr	r31
 1541  00002138  54000000	nop
 1542  0000213c          	.endproc _max
 1543                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1544                      ;;;
 1545                      ;;; Most of the traps are called in files from libtraps.
 1548  0000213c          	.align 2
 1549  0000213c          	.proc _exit
 1550  0000213c          	.global _exit
 1551  0000213c          	_exit:
 1552  0000213c  44000300	trap	#0x300
 1553  00002140  4be00000	jr	r31
 1554  00002144  54000000	nop
 1555  00002148          	.endproc _exit
 1557                      ; for the benefit of gcc.
 1558  00002148          	.proc ___main
 1559  00002148          	.global ___main
 1560  00002148          	___main:
 1561  00002148  4be00000	jr	r31
 1562  0000214c  54000000	nop
 1563  00002150          	.endproc ___main
 1564  00002150          	.text
 1565  00002150          	.global _etext
 1566  00002150          	_etext:
 1567  00002150          	.align 3
 1568  00002150          	.data
 1569  0000312d          	.global _edata
 1570  0000312d          	_edata:
