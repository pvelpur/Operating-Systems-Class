 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 229
    4                      ; Text size: 4512
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.align 2
   80  000010d4          	.proc _recursion
   81  000010d4          	.global _recursion
   82  000010d4          	_recursion:
   83                      ;  Function 'recursion'; 0 bytes of locals, 0 regs to save.
   84  000010d4  afbefffc	sw	-4(r29),r30; push fp
   85  000010d8  001df020	add	r30,r0,r29; fp = sp
   86  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   87  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
   88  000010e4  8fdf0000	lw	r31,(r30)
   89  000010e8  67e10000	snei	r1,r31,#0
   90  000010ec  10200028	beqz	r1,L16_LF0
   91  000010f0  54000000	nop; not filled.
   92  000010f4  23bdfff8	addi	r29,r29,#-8
   93  000010f8  23e1ffff	addi	r1,r31,#-1
   94  000010fc  afa10000	sw	(r29),r1
   95  00001100  0fffffd0	jal	_recursion
   96  00001104  54000000	nop; not filled.
   97  00001108  20210001	addi	r1,r1,#1
   98  0000110c  23bd0008	addi	r29,r29,#8
   99  00001110  08000008	j	L15_LF0
  100  00001114  54000000	nop; not filled.
  101  00001118          	L16_LF0:
  102  00001118  20010000	addi	r1,r0,#0
  103  0000111c          	L15_LF0:
  104  0000111c  8fdffff8	lw	r31,-8(r30)
  105  00001120  001ee820	add	r29,r0,r30
  106  00001124  8fdefffc	lw	r30,-4(r30)
  107  00001128  4be00000	jr	r31
  108  0000112c  54000000	nop
  109  00001130          	.endproc _recursion
  110  00001130          	.data
  111  00003000          	.align 2
  112  00003000          	LC0_LF0:
  113  00003000  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
  113  00003004  653a2025	
  113  00003008  73203c68	
  113  0000300c  616e646c	
  113  00003010  655f746f	
  113  00003014  5f70726f	
  113  00003018  63735f63	
  113  0000301c  6f6d706c	
  113  00003020  65746564	
  113  00003024  5f73656d	
  113  00003028  6170686f	
  113  0000302c  72653e0a	
  113  00003030  00      	
  114  00003031          	.align 2
  115  00003034          	LC1_LF0:
  116  00003034  53746570	.ascii "Step 2.4 (%d): Testing User stack growing past 1 page\n\000"
  116  00003038  20322e34	
  116  0000303c  20282564	
  116  00003040  293a2054	
  116  00003044  65737469	
  116  00003048  6e672055	
  116  0000304c  73657220	
  116  00003050  73746163	
  116  00003054  6b206772	
  116  00003058  6f77696e	
  116  0000305c  67207061	
  116  00003060  73742031	
  116  00003064  20706167	
  116  00003068  650a00  	
  117  0000306b          	.align 2
  118  0000306c          	LC2_LF0:
  119  0000306c  53746570	.ascii "Step 2.4 (%d): Value after recursion: %d\n\000"
  119  00003070  20322e34	
  119  00003074  20282564	
  119  00003078  293a2056	
  119  0000307c  616c7565	
  119  00003080  20616674	
  119  00003084  65722072	
  119  00003088  65637572	
  119  0000308c  73696f6e	
  119  00003090  3a202564	
  119  00003094  0a00    	
  120  00003096          	.align 2
  121  00003098          	LC3_LF0:
  122  00003098  53746570	.ascii "Step2.4 (%d): Bad semaphore s_procs_completed (%d)!\n\000"
  122  0000309c  322e3420	
  122  000030a0  28256429	
  122  000030a4  3a204261	
  122  000030a8  64207365	
  122  000030ac  6d617068	
  122  000030b0  6f726520	
  122  000030b4  735f7072	
  122  000030b8  6f63735f	
  122  000030bc  636f6d70	
  122  000030c0  6c657465	
  122  000030c4  64202825	
  122  000030c8  6429210a	
  122  000030cc  00      	
  123  000030cd          	.align 2
  124  000030d0          	LC4_LF0:
  125  000030d0  53746570	.ascii "Step2.4 (%d): Done!\n\000"
  125  000030d4  322e3420	
  125  000030d8  28256429	
  125  000030dc  3a20446f	
  125  000030e0  6e65210a	
  125  000030e4  00      	
  126  000030e5          	.text
  127  00001130          	.align 2
  128  00001130          	.proc _main
  129  00001130          	.global _main
  130  00001130          	_main:
  131                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  132  00001130  afbefffc	sw	-4(r29),r30; push fp
  133  00001134  001df020	add	r30,r0,r29; fp = sp
  134  00001138  afbffff8	sw	-8(r29),r31; push ret addr
  135  0000113c  2fbd0008	subui	r29,r29,#8; alloc local storage
  136  00001140  8fc20000	lw	r2,(r30)
  137  00001144  8fc30004	lw	r3,4(r30)
  138  00001148  0c00104c	jal	___main
  139  0000114c  54000000	nop; not filled.
  140  00001150  64410002	snei	r1,r2,#2
  141  00001154  10200028	beqz	r1,L19_LF0
  142  00001158  54000000	nop; not filled.
  143  0000115c  23bdfff8	addi	r29,r29,#-8
  144  00001160  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  145  00001164  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  146  00001168  afa40000	sw	(r29),r4
  147  0000116c  0c000168	jal	_Printf
  148  00001170  54000000	nop; not filled.
  149  00001174  0c000268	jal	_Exit
  150  00001178  54000000	nop; not filled.
  151  0000117c  23bd0008	addi	r29,r29,#8
  152  00001180          	L19_LF0:
  153  00001180  23bdfff0	addi	r29,r29,#-16
  154  00001184  8c630004	lw	r3,4(r3)
  155  00001188  afa30000	sw	(r29),r3
  156  0000118c  20040000	addi	r4,r0,#0
  157  00001190  afa40004	sw	4(r29),r4
  158  00001194  2004000a	addi	r4,r0,#10
  159  00001198  afa40008	sw	8(r29),r4
  160  0000119c  0c000afc	jal	_dstrtol
  161  000011a0  54000000	nop; not filled.
  162  000011a4  00011820	add	r3,r0,r1
  163  000011a8  0c000138	jal	_getpid
  164  000011ac  54000000	nop; not filled.
  165  000011b0  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  166  000011b4  24843034	addui	r4,r4,(LC1_LF0)&0xffff
  167  000011b8  afa40000	sw	(r29),r4
  168  000011bc  afa10004	sw	4(r29),r1
  169  000011c0  0c000114	jal	_Printf
  170  000011c4  54000000	nop; not filled.
  171  000011c8  23bd0010	addi	r29,r29,#16
  172  000011cc  23bdfff8	addi	r29,r29,#-8
  173  000011d0  20040bb7	addi	r4,r0,#2999
  174  000011d4  afa40000	sw	(r29),r4
  175  000011d8  0ffffef8	jal	_recursion
  176  000011dc  54000000	nop; not filled.
  177  000011e0  20220001	addi	r2,r1,#1
  178  000011e4  23bd0008	addi	r29,r29,#8
  179  000011e8  0c0000f8	jal	_getpid
  180  000011ec  54000000	nop; not filled.
  181  000011f0  23bdfff0	addi	r29,r29,#-16
  182  000011f4  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  183  000011f8  2484306c	addui	r4,r4,(LC2_LF0)&0xffff
  184  000011fc  afa40000	sw	(r29),r4
  185  00001200  afa10004	sw	4(r29),r1
  186  00001204  afa20008	sw	8(r29),r2
  187  00001208  0c0000cc	jal	_Printf
  188  0000120c  54000000	nop; not filled.
  189  00001210  afa30000	sw	(r29),r3
  190  00001214  0c000114	jal	_sem_signal
  191  00001218  54000000	nop; not filled.
  192  0000121c  23bd0010	addi	r29,r29,#16
  193  00001220  64210001	snei	r1,r1,#1
  194  00001224  10200038	beqz	r1,L22_LF0
  195  00001228  54000000	nop; not filled.
  196  0000122c  0c0000b4	jal	_getpid
  197  00001230  54000000	nop; not filled.
  198  00001234  23bdfff0	addi	r29,r29,#-16
  199  00001238  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  200  0000123c  24843098	addui	r4,r4,(LC3_LF0)&0xffff
  201  00001240  afa40000	sw	(r29),r4
  202  00001244  afa10004	sw	4(r29),r1
  203  00001248  afa30008	sw	8(r29),r3
  204  0000124c  0c000088	jal	_Printf
  205  00001250  54000000	nop; not filled.
  206  00001254  0c000188	jal	_Exit
  207  00001258  54000000	nop; not filled.
  208  0000125c  23bd0010	addi	r29,r29,#16
  209  00001260          	L22_LF0:
  210  00001260  0c000080	jal	_getpid
  211  00001264  54000000	nop; not filled.
  212  00001268  23bdfff8	addi	r29,r29,#-8
  213  0000126c  3c040000	lhi	r4,((LC4_LF0)>>16)&0xffff
  214  00001270  248430d0	addui	r4,r4,(LC4_LF0)&0xffff
  215  00001274  afa40000	sw	(r29),r4
  216  00001278  afa10004	sw	4(r29),r1
  217  0000127c  0c000058	jal	_Printf
  218  00001280  54000000	nop; not filled.
  219  00001284  23bd0008	addi	r29,r29,#8
  220  00001288  0c000f00	jal	_exit
  221  0000128c  54000000	nop
  222  00001290          	.endproc _main
  223                      ;;;
  224                      ;;; Stub functions for DLX traps.
  225                      ;;;
  226                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  227                      ;;;
  228                      ;;; The traps such as Open and Close
  229                      ;;; (note the capital letters) are for use by user programs.  The traps
  230                      ;;; with names such as open and close (lower case) are for use by the OS.
  231                      ;;;
  234  00001290          	.align 2
  236                      ;;; The following are the traps to be used by user-level programs
  237                      ;;;
  239  00001290          	.align 2
  240  00001290          	.proc _Open
  241  00001290          	.global _Open
  242  00001290          	_Open:
  243                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  244                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  245                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  246  00001290  44000213	trap	#0x213
  247  00001294  4be00000	jr	r31
  248  00001298  54000000	nop
  249  0000129c          	.endproc _Open
  251  0000129c          	.proc _Close
  252  0000129c          	.global _Close
  253  0000129c          	_Close:
  254  0000129c  44000214	trap	#0x214
  255  000012a0  4be00000	jr	r31
  256  000012a4  54000000	nop
  257  000012a8          	.endproc _Close
  259  000012a8          	.proc _Read
  260  000012a8          	.global _Read
  261  000012a8          	_Read:
  262  000012a8  44000210	trap	#0x210
  263  000012ac  4be00000	jr	r31
  264  000012b0  54000000	nop
  265  000012b4          	.endproc _Read
  267  000012b4          	.proc _Write
  268  000012b4          	.global _Write
  269  000012b4          	_Write:
  270  000012b4  44000211	trap	#0x211
  271  000012b8  4be00000	jr	r31
  272  000012bc  54000000	nop
  273  000012c0          	.endproc _Write
  275  000012c0          	.proc _Lseek
  276  000012c0          	.global _Lseek
  277  000012c0          	_Lseek:
  278  000012c0  44000212	trap	#0x212
  279  000012c4  4be00000	jr	r31
  280  000012c8  54000000	nop
  281  000012cc          	.endproc _Lseek
  283  000012cc          	.proc _Putchar
  284  000012cc          	.global _Putchar
  285  000012cc          	_Putchar:
  286  000012cc  44000280	trap	#0x280
  287  000012d0  4be00000	jr	r31
  288  000012d4  54000000	nop
  289  000012d8          	.endproc _Putchar
  291  000012d8          	.proc _Printf
  292  000012d8          	.global _Printf
  293  000012d8          	_Printf:
  294  000012d8  44000201	trap	#0x201
  295  000012dc  4be00000	jr	r31
  296  000012e0  54000000	nop
  297  000012e4          	.endproc _Printf
  299  000012e4          	.proc _getpid
  300  000012e4          	.global _getpid
  301  000012e4          	_getpid:
  302  000012e4  44000431	trap	#0x431
  303  000012e8  4be00000	jr	r31
  304  000012ec  54000000	nop
  305  000012f0          	.endproc _getpid
  307  000012f0          	.proc _process_create
  308  000012f0          	.global _process_create
  309  000012f0          	_process_create:
  310  000012f0  44000432	trap	#0x432
  311  000012f4  4be00000	jr	r31
  312  000012f8  54000000	nop
  313  000012fc          	.endproc _process_create
  315  000012fc          	.proc _shmget
  316  000012fc          	.global _shmget
  317  000012fc          	_shmget:
  318  000012fc  44000440	trap	#0x440
  319  00001300  4be00000	jr	r31
  320  00001304  54000000	nop
  321  00001308          	.endproc _shmget
  323  00001308          	.proc _shmat
  324  00001308          	.global _shmat
  325  00001308          	_shmat:
  326  00001308  44000441	trap	#0x441
  327  0000130c  4be00000	jr	r31
  328  00001310  54000000	nop
  329  00001314          	.endproc _shmat
  331  00001314          	.proc _sem_create
  332  00001314          	.global _sem_create
  333  00001314          	_sem_create:
  334  00001314  44000450	trap	#0x450
  335  00001318  4be00000	jr	r31
  336  0000131c  54000000	nop
  337  00001320          	.endproc _sem_create
  339  00001320          	.proc _sem_wait
  340  00001320          	.global _sem_wait
  341  00001320          	_sem_wait:
  342  00001320  44000451	trap	#0x451
  343  00001324  4be00000	jr	r31
  344  00001328  54000000	nop
  345  0000132c          	.endproc _sem_wait
  347  0000132c          	.proc _sem_signal
  348  0000132c          	.global _sem_signal
  349  0000132c          	_sem_signal:
  350  0000132c  44000452	trap	#0x452
  351  00001330  4be00000	jr	r31
  352  00001334  54000000	nop
  353  00001338          	.endproc _sem_signal
  355  00001338          	.proc _lock_create
  356  00001338          	.global _lock_create
  357  00001338          	_lock_create:
  358  00001338  44000453	trap	#0x453
  359  0000133c  4be00000	jr	r31
  360  00001340  54000000	nop
  361  00001344          	.endproc _lock_create
  363  00001344          	.proc _lock_acquire
  364  00001344          	.global _lock_acquire
  365  00001344          	_lock_acquire:
  366  00001344  44000454	trap	#0x454
  367  00001348  4be00000	jr	r31
  368  0000134c  54000000	nop
  369  00001350          	.endproc _lock_acquire
  371  00001350          	.proc _lock_release
  372  00001350          	.global _lock_release
  373  00001350          	_lock_release:
  374  00001350  44000455	trap	#0x455
  375  00001354  4be00000	jr	r31
  376  00001358  54000000	nop
  377  0000135c          	.endproc _lock_release
  379  0000135c          	.proc _cond_create
  380  0000135c          	.global _cond_create
  381  0000135c          	_cond_create:
  382  0000135c  44000456	trap	#0x456
  383  00001360  4be00000	jr	r31
  384  00001364  54000000	nop
  385  00001368          	.endproc _cond_create
  387  00001368          	.proc _cond_wait
  388  00001368          	.global _cond_wait
  389  00001368          	_cond_wait:
  390  00001368  44000457	trap	#0x457
  391  0000136c  4be00000	jr	r31
  392  00001370  54000000	nop
  393  00001374          	.endproc _cond_wait
  395  00001374          	.proc _cond_signal
  396  00001374          	.global _cond_signal
  397  00001374          	_cond_signal:
  398  00001374  44000458	trap	#0x458
  399  00001378  4be00000	jr	r31
  400  0000137c  54000000	nop
  401  00001380          	.endproc _cond_signal
  403  00001380          	.proc _cond_broadcast
  404  00001380          	.global _cond_broadcast
  405  00001380          	_cond_broadcast:
  406  00001380  44000459	trap	#0x459
  407  00001384  4be00000	jr	r31
  408  00001388  54000000	nop
  409  0000138c          	.endproc _cond_broadcast
  411  0000138c          	.proc _mbox_create
  412  0000138c          	.global _mbox_create
  413  0000138c          	_mbox_create:
  414  0000138c  44000460	trap	#0x460
  415  00001390  4be00000	jr	r31
  416  00001394  54000000	nop
  417  00001398          	.endproc _mbox_create
  419  00001398          	.proc _mbox_open
  420  00001398          	.global _mbox_open
  421  00001398          	_mbox_open:
  422  00001398  44000461	trap	#0x461
  423  0000139c  4be00000	jr	r31
  424  000013a0  54000000	nop
  425  000013a4          	.endproc _mbox_open
  427  000013a4          	.proc _mbox_close
  428  000013a4          	.global _mbox_close
  429  000013a4          	_mbox_close:
  430  000013a4  44000462	trap	#0x462
  431  000013a8  4be00000	jr	r31
  432  000013ac  54000000	nop
  433  000013b0          	.endproc _mbox_close
  435  000013b0          	.proc _mbox_send
  436  000013b0          	.global _mbox_send
  437  000013b0          	_mbox_send:
  438  000013b0  44000463	trap	#0x463
  439  000013b4  4be00000	jr	r31
  440  000013b8  54000000	nop
  441  000013bc          	.endproc _mbox_send
  443  000013bc          	.proc _mbox_recv
  444  000013bc          	.global _mbox_recv
  445  000013bc          	_mbox_recv:
  446  000013bc  44000464	trap	#0x464
  447  000013c0  4be00000	jr	r31
  448  000013c4  54000000	nop
  449  000013c8          	.endproc _mbox_recv
  451  000013c8          	.proc _sleep
  452  000013c8          	.global _sleep
  453  000013c8          	_sleep:
  454  000013c8  44000465	trap	#0x465
  455  000013cc  4be00000	jr	r31
  456  000013d0  54000000	nop
  457  000013d4          	.endproc _sleep
  459  000013d4          	.proc _yield
  460  000013d4          	.global _yield
  461  000013d4          	_yield:
  462  000013d4  44000466	trap	#0x466
  463  000013d8  4be00000	jr	r31
  464  000013dc  54000000	nop
  465  000013e0          	.endproc _yield
  468  000013e0          	.proc _Exit
  469  000013e0          	.global _Exit
  470  000013e0          	_Exit:
  471  000013e0  44000500	trap	#0x500
  472  000013e4  4be00000	jr	r31
  473  000013e8  54000000	nop
  474  000013ec          	.endproc _Exit
  477  000013ec          	.proc _malloc
  478  000013ec          	.global _malloc
  479  000013ec          	_malloc:
  480  000013ec  44000467	trap	#0x467
  481  000013f0  4be00000	jr	r31
  482  000013f4          	.endproc _malloc
  485  000013f4          	.proc _mfree
  486  000013f4          	.global _mfree
  487  000013f4          	_mfree:
  488  000013f4  44000468	trap	#0x468
  489  000013f8  4be00000	jr	r31
  490  000013fc          	.endproc _mfree
  491                      ; Compiled by GCC
  493  000013fc          	.align 2
  494  000013fc          	.proc _isspace
  495  000013fc          	.global _isspace
  496  000013fc          	_isspace:
  497                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  498  000013fc  afbefffc	sw	-4(r29),r30; push fp
  499  00001400  001df020	add	r30,r0,r29; fp = sp
  500  00001404  afbffff8	sw	-8(r29),r31; push ret addr
  501  00001408  2fbd0018	subui	r29,r29,#24; alloc local storage
  502  0000140c  afa20000	sw	0(r29),r2
  503  00001410  afa30004	sw	4(r29),r3
  504  00001414  afa40008	sw	8(r29),r4
  505  00001418  83c20003	lb	r2,3(r30)
  506  0000141c  20010000	addi	r1,r0,#0
  507  00001420  304300ff	andi	r3,r2,#0x00ff
  508  00001424  60640020	seqi	r4,r3,#32
  509  00001428  1480002c	bnez	r4,L3_LF2
  510  0000142c  54000000	nop; delay slot nop
  511  00001430  304300ff	andi	r3,r2,#0x00ff
  512  00001434  60640009	seqi	r4,r3,#9
  513  00001438  1480001c	bnez	r4,L3_LF2
  514  0000143c  54000000	nop; delay slot nop
  515  00001440  304300ff	andi	r3,r2,#0x00ff
  516  00001444  6064000a	seqi	r4,r3,#10
  517  00001448  1480000c	bnez	r4,L3_LF2
  518  0000144c  54000000	nop; delay slot nop
  519  00001450  08000008	j	L2_LF2
  520  00001454  54000000	nop; delay slot nop
  521  00001458          	L3_LF2:
  522  00001458  20010001	addi	r1,r0,#1
  523  0000145c          	L2_LF2:
  524  0000145c  08000004	j	L1_LF2
  525  00001460  54000000	nop; delay slot nop
  526  00001464          	L1_LF2:
  527  00001464  8fa20000	lw	r2,0(r29)
  528  00001468  8fa30004	lw	r3,4(r29)
  529  0000146c  8fa40008	lw	r4,8(r29)
  530  00001470  8fdffff8	lw	r31,-8(r30)
  531  00001474  001ee820	add	r29,r0,r30
  532  00001478  8fdefffc	lw	r30,-4(r30)
  533  0000147c  4be00000	jr	r31
  534  00001480  54000000	nop
  535  00001484          	.endproc _isspace
  536  00001484          	.align 2
  537  00001484          	.proc _isxdigit
  538  00001484          	.global _isxdigit
  539  00001484          	_isxdigit:
  540                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  541  00001484  afbefffc	sw	-4(r29),r30; push fp
  542  00001488  001df020	add	r30,r0,r29; fp = sp
  543  0000148c  afbffff8	sw	-8(r29),r31; push ret addr
  544  00001490  2fbd0018	subui	r29,r29,#24; alloc local storage
  545  00001494  afa20000	sw	0(r29),r2
  546  00001498  afa30004	sw	4(r29),r3
  547  0000149c  afa40008	sw	8(r29),r4
  548  000014a0  83c20003	lb	r2,3(r30)
  549  000014a4  20010000	addi	r1,r0,#0
  550  000014a8  304300ff	andi	r3,r2,#0x00ff
  551  000014ac  6c64002f	sgtui	r4,r3,#47
  552  000014b0  1080001c	beqz	r4,L7_LF2
  553  000014b4  54000000	nop; delay slot nop
  554  000014b8  304300ff	andi	r3,r2,#0x00ff
  555  000014bc  70640039	sleui	r4,r3,#57
  556  000014c0  1480005c	bnez	r4,L6_LF2
  557  000014c4  54000000	nop; delay slot nop
  558  000014c8  08000004	j	L7_LF2
  559  000014cc  54000000	nop; delay slot nop
  560  000014d0          	L7_LF2:
  561  000014d0  304300ff	andi	r3,r2,#0x00ff
  562  000014d4  6c640060	sgtui	r4,r3,#96
  563  000014d8  1080001c	beqz	r4,L8_LF2
  564  000014dc  54000000	nop; delay slot nop
  565  000014e0  304300ff	andi	r3,r2,#0x00ff
  566  000014e4  70640066	sleui	r4,r3,#102
  567  000014e8  14800034	bnez	r4,L6_LF2
  568  000014ec  54000000	nop; delay slot nop
  569  000014f0  08000004	j	L8_LF2
  570  000014f4  54000000	nop; delay slot nop
  571  000014f8          	L8_LF2:
  572  000014f8  304300ff	andi	r3,r2,#0x00ff
  573  000014fc  6c640040	sgtui	r4,r3,#64
  574  00001500  10800020	beqz	r4,L5_LF2
  575  00001504  54000000	nop; delay slot nop
  576  00001508  304300ff	andi	r3,r2,#0x00ff
  577  0000150c  70640041	sleui	r4,r3,#65
  578  00001510  1480000c	bnez	r4,L6_LF2
  579  00001514  54000000	nop; delay slot nop
  580  00001518  08000008	j	L5_LF2
  581  0000151c  54000000	nop; delay slot nop
  582  00001520          	L6_LF2:
  583  00001520  20010001	addi	r1,r0,#1
  584  00001524          	L5_LF2:
  585  00001524  08000004	j	L4_LF2
  586  00001528  54000000	nop; delay slot nop
  587  0000152c          	L4_LF2:
  588  0000152c  8fa20000	lw	r2,0(r29)
  589  00001530  8fa30004	lw	r3,4(r29)
  590  00001534  8fa40008	lw	r4,8(r29)
  591  00001538  8fdffff8	lw	r31,-8(r30)
  592  0000153c  001ee820	add	r29,r0,r30
  593  00001540  8fdefffc	lw	r30,-4(r30)
  594  00001544  4be00000	jr	r31
  595  00001548  54000000	nop
  596  0000154c          	.endproc _isxdigit
  597  0000154c          	.align 2
  598  0000154c          	.proc _dstrcpy
  599  0000154c          	.global _dstrcpy
  600  0000154c          	_dstrcpy:
  601                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  602  0000154c  afbefffc	sw	-4(r29),r30; push fp
  603  00001550  001df020	add	r30,r0,r29; fp = sp
  604  00001554  afbffff8	sw	-8(r29),r31; push ret addr
  605  00001558  2fbd0018	subui	r29,r29,#24; alloc local storage
  606  0000155c  afa20000	sw	0(r29),r2
  607  00001560  afa30004	sw	4(r29),r3
  608  00001564  8fc10000	lw	r1,(r30)
  609  00001568  afc1fff4	sw	-12(r30),r1
  610  0000156c          	L10_LF2:
  611  0000156c  8fc10000	lw	r1,(r30)
  612  00001570  20220001	addi	r2,r1,#1
  613  00001574  afc20000	sw	(r30),r2
  614  00001578  8fc20004	lw	r2,4(r30)
  615  0000157c  20430001	addi	r3,r2,#1
  616  00001580  afc30004	sw	4(r30),r3
  617  00001584  80420000	lb	r2,(r2)
  618  00001588  a0220000	sb	(r1),r2
  619  0000158c  a3c2fff3	sb	-13(r30),r2
  620  00001590          	L12_LF2:
  621  00001590  93c1fff3	lbu	r1,-13(r30)
  622  00001594  64220000	snei	r2,r1,#0
  623  00001598  1440000c	bnez	r2,L13_LF2
  624  0000159c  54000000	nop; delay slot nop
  625  000015a0  0800000c	j	L11_LF2
  626  000015a4  54000000	nop; delay slot nop
  627  000015a8          	L13_LF2:
  628  000015a8  0bffffc0	j	L10_LF2
  629  000015ac  54000000	nop; delay slot nop
  630  000015b0          	L11_LF2:
  631  000015b0  8fc1fff4	lw	r1,-12(r30)
  632  000015b4  08000004	j	L9_LF2
  633  000015b8  54000000	nop; delay slot nop
  634  000015bc          	L9_LF2:
  635  000015bc  8fa20000	lw	r2,0(r29)
  636  000015c0  8fa30004	lw	r3,4(r29)
  637  000015c4  8fdffff8	lw	r31,-8(r30)
  638  000015c8  001ee820	add	r29,r0,r30
  639  000015cc  8fdefffc	lw	r30,-4(r30)
  640  000015d0  4be00000	jr	r31
  641  000015d4  54000000	nop
  642  000015d8          	.endproc _dstrcpy
  643  000015d8          	.align 2
  644  000015d8          	.proc _dstrncpy
  645  000015d8          	.global _dstrncpy
  646  000015d8          	_dstrncpy:
  647                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  648  000015d8  afbefffc	sw	-4(r29),r30; push fp
  649  000015dc  001df020	add	r30,r0,r29; fp = sp
  650  000015e0  afbffff8	sw	-8(r29),r31; push ret addr
  651  000015e4  2fbd0018	subui	r29,r29,#24; alloc local storage
  652  000015e8  afa20000	sw	0(r29),r2
  653  000015ec  afa30004	sw	4(r29),r3
  654  000015f0  8fc10000	lw	r1,(r30)
  655  000015f4  afc1fff4	sw	-12(r30),r1
  656  000015f8          	L15_LF2:
  657  000015f8  8fc10008	lw	r1,8(r30)
  658  000015fc  2022ffff	addi	r2,r1,#-1
  659  00001600  afc20008	sw	8(r30),r2
  660  00001604  70210000	slei	r1,r1,#0
  661  00001608  1020000c	beqz	r1,L18_LF2
  662  0000160c  54000000	nop; delay slot nop
  663  00001610  08000048	j	L16_LF2
  664  00001614  54000000	nop; delay slot nop
  665  00001618          	L18_LF2:
  666  00001618  8fc10000	lw	r1,(r30)
  667  0000161c  20220001	addi	r2,r1,#1
  668  00001620  afc20000	sw	(r30),r2
  669  00001624  8fc20004	lw	r2,4(r30)
  670  00001628  20430001	addi	r3,r2,#1
  671  0000162c  afc30004	sw	4(r30),r3
  672  00001630  80420000	lb	r2,(r2)
  673  00001634  a0220000	sb	(r1),r2
  674  00001638  a3c2fff3	sb	-13(r30),r2
  675  0000163c          	L17_LF2:
  676  0000163c  93c1fff3	lbu	r1,-13(r30)
  677  00001640  64220000	snei	r2,r1,#0
  678  00001644  1440000c	bnez	r2,L19_LF2
  679  00001648  54000000	nop; delay slot nop
  680  0000164c  0800000c	j	L16_LF2
  681  00001650  54000000	nop; delay slot nop
  682  00001654          	L19_LF2:
  683  00001654  0bffffa0	j	L15_LF2
  684  00001658  54000000	nop; delay slot nop
  685  0000165c          	L16_LF2:
  686  0000165c  8fc1fff4	lw	r1,-12(r30)
  687  00001660  08000004	j	L14_LF2
  688  00001664  54000000	nop; delay slot nop
  689  00001668          	L14_LF2:
  690  00001668  8fa20000	lw	r2,0(r29)
  691  0000166c  8fa30004	lw	r3,4(r29)
  692  00001670  8fdffff8	lw	r31,-8(r30)
  693  00001674  001ee820	add	r29,r0,r30
  694  00001678  8fdefffc	lw	r30,-4(r30)
  695  0000167c  4be00000	jr	r31
  696  00001680  54000000	nop
  697  00001684          	.endproc _dstrncpy
  698  00001684          	.align 2
  699  00001684          	.proc _dstrcat
  700  00001684          	.global _dstrcat
  701  00001684          	_dstrcat:
  702                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  703  00001684  afbefffc	sw	-4(r29),r30; push fp
  704  00001688  001df020	add	r30,r0,r29; fp = sp
  705  0000168c  afbffff8	sw	-8(r29),r31; push ret addr
  706  00001690  2fbd0018	subui	r29,r29,#24; alloc local storage
  707  00001694  afa20000	sw	0(r29),r2
  708  00001698  8fc10000	lw	r1,(r30)
  709  0000169c  afc1fff4	sw	-12(r30),r1
  710  000016a0          	L21_LF2:
  711  000016a0  8fc10000	lw	r1,(r30)
  712  000016a4  90220000	lbu	r2,(r1)
  713  000016a8  64410000	snei	r1,r2,#0
  714  000016ac  1420000c	bnez	r1,L23_LF2
  715  000016b0  54000000	nop; delay slot nop
  716  000016b4  0800001c	j	L22_LF2
  717  000016b8  54000000	nop; delay slot nop
  718  000016bc          	L23_LF2:
  719  000016bc  8fc20000	lw	r2,(r30)
  720  000016c0  20410001	addi	r1,r2,#1
  721  000016c4  00011020	add	r2,r0,r1
  722  000016c8  afc20000	sw	(r30),r2
  723  000016cc  0bffffd0	j	L21_LF2
  724  000016d0  54000000	nop; delay slot nop
  725  000016d4          	L22_LF2:
  726  000016d4  23bdfff8	addi	r29,r29,#-8
  727  000016d8  001d0820	add	r1,r0,r29
  728  000016dc  8fc20000	lw	r2,(r30)
  729  000016e0  ac220000	sw	(r1),r2
  730  000016e4  8fc20004	lw	r2,4(r30)
  731  000016e8  ac220004	sw	4(r1),r2
  732  000016ec  0ffffe5c	jal	_dstrcpy
  733  000016f0  54000000	nop; delay slot nop
  734  000016f4  23bd0008	addi	r29,r29,#8
  735  000016f8  8fc1fff4	lw	r1,-12(r30)
  736  000016fc  08000004	j	L20_LF2
  737  00001700  54000000	nop; delay slot nop
  738  00001704          	L20_LF2:
  739  00001704  8fa20000	lw	r2,0(r29)
  740  00001708  8fdffff8	lw	r31,-8(r30)
  741  0000170c  001ee820	add	r29,r0,r30
  742  00001710  8fdefffc	lw	r30,-4(r30)
  743  00001714  4be00000	jr	r31
  744  00001718  54000000	nop
  745  0000171c          	.endproc _dstrcat
  746  0000171c          	.align 2
  747  0000171c          	.proc _dstrncmp
  748  0000171c          	.global _dstrncmp
  749  0000171c          	_dstrncmp:
  750                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  751  0000171c  afbefffc	sw	-4(r29),r30; push fp
  752  00001720  001df020	add	r30,r0,r29; fp = sp
  753  00001724  afbffff8	sw	-8(r29),r31; push ret addr
  754  00001728  2fbd0018	subui	r29,r29,#24; alloc local storage
  755  0000172c  afa20000	sw	0(r29),r2
  756  00001730  afa30004	sw	4(r29),r3
  757  00001734  54000000	nop
  758  00001738  20010000	addi	r1,r0,#0
  759  0000173c  afc1fff4	sw	-12(r30),r1
  760  00001740          	L25_LF2:
  761  00001740  8fc1fff4	lw	r1,-12(r30)
  762  00001744  8fc20008	lw	r2,8(r30)
  763  00001748  0022082a	slt	r1,r1,r2
  764  0000174c  1420000c	bnez	r1,L28_LF2
  765  00001750  54000000	nop; delay slot nop
  766  00001754  08000088	j	L26_LF2
  767  00001758  54000000	nop; delay slot nop
  768  0000175c          	L28_LF2:
  769  0000175c  8fc10004	lw	r1,4(r30)
  770  00001760  90220000	lbu	r2,(r1)
  771  00001764  64410000	snei	r1,r2,#0
  772  00001768  14200018	bnez	r1,L29_LF2
  773  0000176c  54000000	nop; delay slot nop
  774  00001770  20010000	addi	r1,r0,#0
  775  00001774  080000d8	j	L24_LF2
  776  00001778  54000000	nop; delay slot nop
  777  0000177c  08000028	j	L30_LF2
  778  00001780  54000000	nop; delay slot nop
  779  00001784          	L29_LF2:
  780  00001784  8fc10000	lw	r1,(r30)
  781  00001788  8fc20004	lw	r2,4(r30)
  782  0000178c  90210000	lbu	r1,(r1)
  783  00001790  90420000	lbu	r2,(r2)
  784  00001794  00220829	sne	r1,r1,r2
  785  00001798  1020000c	beqz	r1,L30_LF2
  786  0000179c  54000000	nop; delay slot nop
  787  000017a0  0800003c	j	L26_LF2
  788  000017a4  54000000	nop; delay slot nop
  789  000017a8          	L31_LF2:
  790  000017a8          	L30_LF2:
  791  000017a8  8fc20000	lw	r2,(r30)
  792  000017ac  20410001	addi	r1,r2,#1
  793  000017b0  00011020	add	r2,r0,r1
  794  000017b4  afc20000	sw	(r30),r2
  795  000017b8  8fc20004	lw	r2,4(r30)
  796  000017bc  20410001	addi	r1,r2,#1
  797  000017c0  00011020	add	r2,r0,r1
  798  000017c4  afc20004	sw	4(r30),r2
  799  000017c8          	L27_LF2:
  800  000017c8  8fc2fff4	lw	r2,-12(r30)
  801  000017cc  20410001	addi	r1,r2,#1
  802  000017d0  00011020	add	r2,r0,r1
  803  000017d4  afc2fff4	sw	-12(r30),r2
  804  000017d8  0bffff64	j	L25_LF2
  805  000017dc  54000000	nop; delay slot nop
  806  000017e0          	L26_LF2:
  807  000017e0  8fc1fff4	lw	r1,-12(r30)
  808  000017e4  8fc20008	lw	r2,8(r30)
  809  000017e8  00220828	seq	r1,r1,r2
  810  000017ec  10200018	beqz	r1,L32_LF2
  811  000017f0  54000000	nop; delay slot nop
  812  000017f4  20010000	addi	r1,r0,#0
  813  000017f8  08000054	j	L24_LF2
  814  000017fc  54000000	nop; delay slot nop
  815  00001800  0800004c	j	L33_LF2
  816  00001804  54000000	nop; delay slot nop
  817  00001808          	L32_LF2:
  818  00001808  8fc20000	lw	r2,(r30)
  819  0000180c  90410000	lbu	r1,(r2)
  820  00001810  8fc20004	lw	r2,4(r30)
  821  00001814  90430000	lbu	r3,(r2)
  822  00001818  00230822	sub	r1,r1,r3
  823  0000181c  74220000	sgei	r2,r1,#0
  824  00001820  10400020	beqz	r2,L34_LF2
  825  00001824  54000000	nop; delay slot nop
  826  00001828  8fc10000	lw	r1,(r30)
  827  0000182c  8fc20004	lw	r2,4(r30)
  828  00001830  90210000	lbu	r1,(r1)
  829  00001834  90420000	lbu	r2,(r2)
  830  00001838  00220829	sne	r1,r1,r2
  831  0000183c  08000008	j	L35_LF2
  832  00001840  54000000	nop; delay slot nop
  833  00001844          	L34_LF2:
  834  00001844  2001ffff	addi	r1,r0,#-1
  835  00001848          	L35_LF2:
  836  00001848  08000004	j	L24_LF2
  837  0000184c  54000000	nop; delay slot nop
  838  00001850          	L33_LF2:
  839  00001850          	L24_LF2:
  840  00001850  8fa20000	lw	r2,0(r29)
  841  00001854  8fa30004	lw	r3,4(r29)
  842  00001858  8fdffff8	lw	r31,-8(r30)
  843  0000185c  001ee820	add	r29,r0,r30
  844  00001860  8fdefffc	lw	r30,-4(r30)
  845  00001864  4be00000	jr	r31
  846  00001868  54000000	nop
  847  0000186c          	.endproc _dstrncmp
  848  0000186c          	.align 2
  849  0000186c          	.proc _dstrlen
  850  0000186c          	.global _dstrlen
  851  0000186c          	_dstrlen:
  852                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  853  0000186c  afbefffc	sw	-4(r29),r30; push fp
  854  00001870  001df020	add	r30,r0,r29; fp = sp
  855  00001874  afbffff8	sw	-8(r29),r31; push ret addr
  856  00001878  2fbd0018	subui	r29,r29,#24; alloc local storage
  857  0000187c  afa20000	sw	0(r29),r2
  858  00001880  20010000	addi	r1,r0,#0
  859  00001884  afc1fff4	sw	-12(r30),r1
  860  00001888          	L37_LF2:
  861  00001888  8fc10000	lw	r1,(r30)
  862  0000188c  20220001	addi	r2,r1,#1
  863  00001890  afc20000	sw	(r30),r2
  864  00001894  90210000	lbu	r1,(r1)
  865  00001898  64220000	snei	r2,r1,#0
  866  0000189c  1440000c	bnez	r2,L39_LF2
  867  000018a0  54000000	nop; delay slot nop
  868  000018a4  0800001c	j	L38_LF2
  869  000018a8  54000000	nop; delay slot nop
  870  000018ac          	L39_LF2:
  871  000018ac  8fc2fff4	lw	r2,-12(r30)
  872  000018b0  20410001	addi	r1,r2,#1
  873  000018b4  00011020	add	r2,r0,r1
  874  000018b8  afc2fff4	sw	-12(r30),r2
  875  000018bc  0bffffc8	j	L37_LF2
  876  000018c0  54000000	nop; delay slot nop
  877  000018c4          	L38_LF2:
  878  000018c4  8fc1fff4	lw	r1,-12(r30)
  879  000018c8  08000004	j	L36_LF2
  880  000018cc  54000000	nop; delay slot nop
  881  000018d0          	L36_LF2:
  882  000018d0  8fa20000	lw	r2,0(r29)
  883  000018d4  8fdffff8	lw	r31,-8(r30)
  884  000018d8  001ee820	add	r29,r0,r30
  885  000018dc  8fdefffc	lw	r30,-4(r30)
  886  000018e0  4be00000	jr	r31
  887  000018e4  54000000	nop
  888  000018e8          	.endproc _dstrlen
  889  000018e8          	.align 2
  890  000018e8          	.proc _dstrstr
  891  000018e8          	.global _dstrstr
  892  000018e8          	_dstrstr:
  893                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  894  000018e8  afbefffc	sw	-4(r29),r30; push fp
  895  000018ec  001df020	add	r30,r0,r29; fp = sp
  896  000018f0  afbffff8	sw	-8(r29),r31; push ret addr
  897  000018f4  2fbd0018	subui	r29,r29,#24; alloc local storage
  898  000018f8  afa20000	sw	0(r29),r2
  899  000018fc  23bdfff8	addi	r29,r29,#-8
  900  00001900  001d0820	add	r1,r0,r29
  901  00001904  8fc20004	lw	r2,4(r30)
  902  00001908  ac220000	sw	(r1),r2
  903  0000190c  0fffff5c	jal	_dstrlen
  904  00001910  54000000	nop; delay slot nop
  905  00001914  23bd0008	addi	r29,r29,#8
  906  00001918  afc1fff4	sw	-12(r30),r1
  907  0000191c          	L41_LF2:
  908  0000191c  8fc10000	lw	r1,(r30)
  909  00001920  90220000	lbu	r2,(r1)
  910  00001924  64410000	snei	r1,r2,#0
  911  00001928  1420000c	bnez	r1,L43_LF2
  912  0000192c  54000000	nop; delay slot nop
  913  00001930  08000060	j	L42_LF2
  914  00001934  54000000	nop; delay slot nop
  915  00001938          	L43_LF2:
  916  00001938  23bdfff0	addi	r29,r29,#-16
  917  0000193c  001d0820	add	r1,r0,r29
  918  00001940  8fc20000	lw	r2,(r30)
  919  00001944  ac220000	sw	(r1),r2
  920  00001948  8fc20004	lw	r2,4(r30)
  921  0000194c  ac220004	sw	4(r1),r2
  922  00001950  8fc2fff4	lw	r2,-12(r30)
  923  00001954  ac220008	sw	8(r1),r2
  924  00001958  0ffffdc0	jal	_dstrncmp
  925  0000195c  54000000	nop; delay slot nop
  926  00001960  23bd0010	addi	r29,r29,#16
  927  00001964  64220000	snei	r2,r1,#0
  928  00001968  14400010	bnez	r2,L44_LF2
  929  0000196c  54000000	nop; delay slot nop
  930  00001970  8fc10000	lw	r1,(r30)
  931  00001974  08000028	j	L40_LF2
  932  00001978  54000000	nop; delay slot nop
  933  0000197c          	L44_LF2:
  934  0000197c  8fc20000	lw	r2,(r30)
  935  00001980  20410001	addi	r1,r2,#1
  936  00001984  00011020	add	r2,r0,r1
  937  00001988  afc20000	sw	(r30),r2
  938  0000198c  0bffff8c	j	L41_LF2
  939  00001990  54000000	nop; delay slot nop
  940  00001994          	L42_LF2:
  941  00001994  20010000	addi	r1,r0,#0
  942  00001998  08000004	j	L40_LF2
  943  0000199c  54000000	nop; delay slot nop
  944  000019a0          	L40_LF2:
  945  000019a0  8fa20000	lw	r2,0(r29)
  946  000019a4  8fdffff8	lw	r31,-8(r30)
  947  000019a8  001ee820	add	r29,r0,r30
  948  000019ac  8fdefffc	lw	r30,-4(r30)
  949  000019b0  4be00000	jr	r31
  950  000019b4  54000000	nop
  951  000019b8          	.endproc _dstrstr
  952  000019b8          	.align 2
  953  000019b8          	.proc _dmindex
  954  000019b8          	.global _dmindex
  955  000019b8          	_dmindex:
  956                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  957  000019b8  afbefffc	sw	-4(r29),r30; push fp
  958  000019bc  001df020	add	r30,r0,r29; fp = sp
  959  000019c0  afbffff8	sw	-8(r29),r31; push ret addr
  960  000019c4  2fbd0018	subui	r29,r29,#24; alloc local storage
  961  000019c8  afa20000	sw	0(r29),r2
  962  000019cc  54000000	nop
  963  000019d0          	L46_LF2:
  964  000019d0  8fc10000	lw	r1,(r30)
  965  000019d4  90220000	lbu	r2,(r1)
  966  000019d8  64410000	snei	r1,r2,#0
  967  000019dc  1420000c	bnez	r1,L48_LF2
  968  000019e0  54000000	nop; delay slot nop
  969  000019e4  08000070	j	L47_LF2
  970  000019e8  54000000	nop; delay slot nop
  971  000019ec          	L48_LF2:
  972  000019ec  8fc10004	lw	r1,4(r30)
  973  000019f0  afc1fff4	sw	-12(r30),r1
  974  000019f4          	L49_LF2:
  975  000019f4  8fc1fff4	lw	r1,-12(r30)
  976  000019f8  90220000	lbu	r2,(r1)
  977  000019fc  64410000	snei	r1,r2,#0
  978  00001a00  1420000c	bnez	r1,L52_LF2
  979  00001a04  54000000	nop; delay slot nop
  980  00001a08  08000044	j	L50_LF2
  981  00001a0c  54000000	nop; delay slot nop
  982  00001a10          	L52_LF2:
  983  00001a10  8fc10000	lw	r1,(r30)
  984  00001a14  8fc2fff4	lw	r2,-12(r30)
  985  00001a18  90210000	lbu	r1,(r1)
  986  00001a1c  90420000	lbu	r2,(r2)
  987  00001a20  00220828	seq	r1,r1,r2
  988  00001a24  10200010	beqz	r1,L51_LF2
  989  00001a28  54000000	nop; delay slot nop
  990  00001a2c  8fc10000	lw	r1,(r30)
  991  00001a30  08000030	j	L45_LF2
  992  00001a34  54000000	nop; delay slot nop
  993  00001a38          	L53_LF2:
  994  00001a38          	L51_LF2:
  995  00001a38  8fc2fff4	lw	r2,-12(r30)
  996  00001a3c  20410001	addi	r1,r2,#1
  997  00001a40  00011020	add	r2,r0,r1
  998  00001a44  afc2fff4	sw	-12(r30),r2
  999  00001a48  0bffffa8	j	L49_LF2
 1000  00001a4c  54000000	nop; delay slot nop
 1001  00001a50          	L50_LF2:
 1002  00001a50  0bffff7c	j	L46_LF2
 1003  00001a54  54000000	nop; delay slot nop
 1004  00001a58          	L47_LF2:
 1005  00001a58  20010000	addi	r1,r0,#0
 1006  00001a5c  08000004	j	L45_LF2
 1007  00001a60  54000000	nop; delay slot nop
 1008  00001a64          	L45_LF2:
 1009  00001a64  8fa20000	lw	r2,0(r29)
 1010  00001a68  8fdffff8	lw	r31,-8(r30)
 1011  00001a6c  001ee820	add	r29,r0,r30
 1012  00001a70  8fdefffc	lw	r30,-4(r30)
 1013  00001a74  4be00000	jr	r31
 1014  00001a78  54000000	nop
 1015  00001a7c          	.endproc _dmindex
 1016  00001a7c          	.align 2
 1017  00001a7c          	.proc _dindex
 1018  00001a7c          	.global _dindex
 1019  00001a7c          	_dindex:
 1020                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1021  00001a7c  afbefffc	sw	-4(r29),r30; push fp
 1022  00001a80  001df020	add	r30,r0,r29; fp = sp
 1023  00001a84  afbffff8	sw	-8(r29),r31; push ret addr
 1024  00001a88  2fbd0010	subui	r29,r29,#16; alloc local storage
 1025  00001a8c  afa20000	sw	0(r29),r2
 1026  00001a90  54000000	nop
 1027  00001a94          	L55_LF2:
 1028  00001a94  8fc10000	lw	r1,(r30)
 1029  00001a98  90220000	lbu	r2,(r1)
 1030  00001a9c  64410000	snei	r1,r2,#0
 1031  00001aa0  1420000c	bnez	r1,L57_LF2
 1032  00001aa4  54000000	nop; delay slot nop
 1033  00001aa8  08000040	j	L56_LF2
 1034  00001aac  54000000	nop; delay slot nop
 1035  00001ab0          	L57_LF2:
 1036  00001ab0  8fc10000	lw	r1,(r30)
 1037  00001ab4  90220000	lbu	r2,(r1)
 1038  00001ab8  8fc10004	lw	r1,4(r30)
 1039  00001abc  00411028	seq	r2,r2,r1
 1040  00001ac0  10400010	beqz	r2,L58_LF2
 1041  00001ac4  54000000	nop; delay slot nop
 1042  00001ac8  8fc10000	lw	r1,(r30)
 1043  00001acc  08000028	j	L54_LF2
 1044  00001ad0  54000000	nop; delay slot nop
 1045  00001ad4          	L58_LF2:
 1046  00001ad4  8fc20000	lw	r2,(r30)
 1047  00001ad8  20410001	addi	r1,r2,#1
 1048  00001adc  00011020	add	r2,r0,r1
 1049  00001ae0  afc20000	sw	(r30),r2
 1050  00001ae4  0bffffac	j	L55_LF2
 1051  00001ae8  54000000	nop; delay slot nop
 1052  00001aec          	L56_LF2:
 1053  00001aec  20010000	addi	r1,r0,#0
 1054  00001af0  08000004	j	L54_LF2
 1055  00001af4  54000000	nop; delay slot nop
 1056  00001af8          	L54_LF2:
 1057  00001af8  8fa20000	lw	r2,0(r29)
 1058  00001afc  8fdffff8	lw	r31,-8(r30)
 1059  00001b00  001ee820	add	r29,r0,r30
 1060  00001b04  8fdefffc	lw	r30,-4(r30)
 1061  00001b08  4be00000	jr	r31
 1062  00001b0c  54000000	nop
 1063  00001b10          	.endproc _dindex
 1064  00001b10          	.align 2
 1065  00001b10          	.proc _ditoa
 1066  00001b10          	.global _ditoa
 1067  00001b10          	_ditoa:
 1068                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1069  00001b10  afbefffc	sw	-4(r29),r30; push fp
 1070  00001b14  001df020	add	r30,r0,r29; fp = sp
 1071  00001b18  afbffff8	sw	-8(r29),r31; push ret addr
 1072  00001b1c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1073  00001b20  afa20000	sw	0(r29),r2
 1074  00001b24  afa30004	sw	4(r29),r3
 1075  00001b28  8fc10000	lw	r1,(r30)
 1076  00001b2c  68220000	slti	r2,r1,#0
 1077  00001b30  1040002c	beqz	r2,L60_LF2
 1078  00001b34  54000000	nop; delay slot nop
 1079  00001b38  8fc10004	lw	r1,4(r30)
 1080  00001b3c  20220001	addi	r2,r1,#1
 1081  00001b40  afc20004	sw	4(r30),r2
 1082  00001b44  2002002d	addi	r2,r0,(#0x2d)&0xff
 1083  00001b48  a0220000	sb	(r1),r2
 1084  00001b4c  8fc10000	lw	r1,(r30)
 1085  00001b50  00011022	sub	r2,r0,r1
 1086  00001b54  afc20000	sw	(r30),r2
 1087  00001b58  08000118	j	L61_LF2
 1088  00001b5c  54000000	nop; delay slot nop
 1089  00001b60          	L60_LF2:
 1090  00001b60  8fc10000	lw	r1,(r30)
 1091  00001b64  64220000	snei	r2,r1,#0
 1092  00001b68  14400020	bnez	r2,L62_LF2
 1093  00001b6c  54000000	nop; delay slot nop
 1094  00001b70  8fc10004	lw	r1,4(r30)
 1095  00001b74  20220001	addi	r2,r1,#1
 1096  00001b78  afc20004	sw	4(r30),r2
 1097  00001b7c  20020030	addi	r2,r0,(#0x30)&0xff
 1098  00001b80  a0220000	sb	(r1),r2
 1099  00001b84  080000ec	j	L61_LF2
 1100  00001b88  54000000	nop; delay slot nop
 1101  00001b8c          	L62_LF2:
 1102  00001b8c  20010001	addi	r1,r0,#1
 1103  00001b90  afc1fff4	sw	-12(r30),r1
 1104  00001b94          	L64_LF2:
 1105  00001b94  8fc1fff4	lw	r1,-12(r30)
 1106  00001b98  8fc20000	lw	r2,(r30)
 1107  00001b9c  0022082c	sle	r1,r1,r2
 1108  00001ba0  1420000c	bnez	r1,L66_LF2
 1109  00001ba4  54000000	nop; delay slot nop
 1110  00001ba8  08000024	j	L65_LF2
 1111  00001bac  54000000	nop; delay slot nop
 1112  00001bb0          	L67_LF2:
 1113  00001bb0          	L66_LF2:
 1114  00001bb0  8fc1fff4	lw	r1,-12(r30)
 1115  00001bb4  00011820	add	r3,r0,r1
 1116  00001bb8  50620002	slli	r2,r3,#0x2
 1117  00001bbc  00411020	add	r2,r2,r1
 1118  00001bc0  50410001	slli	r1,r2,#0x1
 1119  00001bc4  afc1fff4	sw	-12(r30),r1
 1120  00001bc8  0bffffc8	j	L64_LF2
 1121  00001bcc  54000000	nop; delay slot nop
 1122  00001bd0          	L65_LF2:
 1123  00001bd0  54000000	nop
 1124  00001bd4          	L68_LF2:
 1125  00001bd4  8fc1fff4	lw	r1,-12(r30)
 1126  00001bd8  2002000a	addi	r2,r0,#10
 1127  00001bdc  00200035	movi2fp	f0,r1
 1128  00001be0  00400835	movi2fp	f1,r2
 1129  00001be4  0401000f	div	f0,f0,f1
 1130  00001be8  00000834	movfp2i	r1,f0
 1131  00001bec  afc1fff4	sw	-12(r30),r1
 1132  00001bf0  8fc10004	lw	r1,4(r30)
 1133  00001bf4  20220001	addi	r2,r1,#1
 1134  00001bf8  afc20004	sw	4(r30),r2
 1135  00001bfc  8fc20000	lw	r2,(r30)
 1136  00001c00  8fc3fff4	lw	r3,-12(r30)
 1137  00001c04  00400035	movi2fp	f0,r2
 1138  00001c08  00600835	movi2fp	f1,r3
 1139  00001c0c  0401000f	div	f0,f0,f1
 1140  00001c10  00001034	movfp2i	r2,f0
 1141  00001c14  00021820	add	r3,r0,r2
 1142  00001c18  20620030	addi	r2,r3,#48
 1143  00001c1c  a0220000	sb	(r1),r2
 1144  00001c20  8fc10000	lw	r1,(r30)
 1145  00001c24  8fc3fff4	lw	r3,-12(r30)
 1146  00001c28  00200035	movi2fp	f0,r1
 1147  00001c2c  00600835	movi2fp	f1,r3
 1148  00001c30  0401000f	div	f0,f0,f1
 1149  00001c34  00001034	movfp2i	r2,f0
 1150  00001c38  8fc3fff4	lw	r3,-12(r30)
 1151  00001c3c  00400035	movi2fp	f0,r2
 1152  00001c40  00600835	movi2fp	f1,r3
 1153  00001c44  0401000e	mult	f0,f0,f1
 1154  00001c48  00001034	movfp2i	r2,f0
 1155  00001c4c  00220822	sub	r1,r1,r2
 1156  00001c50  afc10000	sw	(r30),r1
 1157  00001c54          	L70_LF2:
 1158  00001c54  8fc1fff4	lw	r1,-12(r30)
 1159  00001c58  6c220001	sgti	r2,r1,#1
 1160  00001c5c  1440000c	bnez	r2,L71_LF2
 1161  00001c60  54000000	nop; delay slot nop
 1162  00001c64  0800000c	j	L61_LF2
 1163  00001c68  54000000	nop; delay slot nop
 1164  00001c6c          	L71_LF2:
 1165  00001c6c  0bffff64	j	L68_LF2
 1166  00001c70  54000000	nop; delay slot nop
 1167  00001c74          	L69_LF2:
 1168  00001c74          	L63_LF2:
 1169  00001c74          	L61_LF2:
 1170  00001c74  8fc10004	lw	r1,4(r30)
 1171  00001c78  20020000	addi	r2,r0,(#0x0)&0xff
 1172  00001c7c  a0220000	sb	(r1),r2
 1173  00001c80          	L59_LF2:
 1174  00001c80  8fa20000	lw	r2,0(r29)
 1175  00001c84  8fa30004	lw	r3,4(r29)
 1176  00001c88  8fdffff8	lw	r31,-8(r30)
 1177  00001c8c  001ee820	add	r29,r0,r30
 1178  00001c90  8fdefffc	lw	r30,-4(r30)
 1179  00001c94  4be00000	jr	r31
 1180  00001c98  54000000	nop
 1181  00001c9c          	.endproc _ditoa
 1182  00001c9c          	.align 2
 1183  00001c9c          	.proc _dstrtol
 1184  00001c9c          	.global _dstrtol
 1185  00001c9c          	_dstrtol:
 1186                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1187  00001c9c  afbefffc	sw	-4(r29),r30; push fp
 1188  00001ca0  001df020	add	r30,r0,r29; fp = sp
 1189  00001ca4  afbffff8	sw	-8(r29),r31; push ret addr
 1190  00001ca8  2fbd0020	subui	r29,r29,#32; alloc local storage
 1191  00001cac  afa20000	sw	0(r29),r2
 1192  00001cb0  20010000	addi	r1,r0,#0
 1193  00001cb4  afc1fff4	sw	-12(r30),r1
 1194  00001cb8          	L73_LF2:
 1195  00001cb8  8fc10000	lw	r1,(r30)
 1196  00001cbc  90220000	lbu	r2,(r1)
 1197  00001cc0  60410020	seqi	r1,r2,#32
 1198  00001cc4  14200034	bnez	r1,L75_LF2
 1199  00001cc8  54000000	nop; delay slot nop
 1200  00001ccc  8fc10000	lw	r1,(r30)
 1201  00001cd0  90220000	lbu	r2,(r1)
 1202  00001cd4  60410009	seqi	r1,r2,#9
 1203  00001cd8  14200020	bnez	r1,L75_LF2
 1204  00001cdc  54000000	nop; delay slot nop
 1205  00001ce0  8fc10000	lw	r1,(r30)
 1206  00001ce4  90220000	lbu	r2,(r1)
 1207  00001ce8  6041000a	seqi	r1,r2,#10
 1208  00001cec  1420000c	bnez	r1,L75_LF2
 1209  00001cf0  54000000	nop; delay slot nop
 1210  00001cf4  0800001c	j	L74_LF2
 1211  00001cf8  54000000	nop; delay slot nop
 1212  00001cfc          	L75_LF2:
 1213  00001cfc  8fc20000	lw	r2,(r30)
 1214  00001d00  20410001	addi	r1,r2,#1
 1215  00001d04  00011020	add	r2,r0,r1
 1216  00001d08  afc20000	sw	(r30),r2
 1217  00001d0c  0bffffa8	j	L73_LF2
 1218  00001d10  54000000	nop; delay slot nop
 1219  00001d14          	L74_LF2:
 1220  00001d14  8fc10004	lw	r1,4(r30)
 1221  00001d18  64220000	snei	r2,r1,#0
 1222  00001d1c  10400010	beqz	r2,L76_LF2
 1223  00001d20  54000000	nop; delay slot nop
 1224  00001d24  8fc10004	lw	r1,4(r30)
 1225  00001d28  8fc20000	lw	r2,(r30)
 1226  00001d2c  ac220000	sw	(r1),r2
 1227  00001d30          	L76_LF2:
 1228  00001d30  8fc10000	lw	r1,(r30)
 1229  00001d34  90220000	lbu	r2,(r1)
 1230  00001d38  64410000	snei	r1,r2,#0
 1231  00001d3c  14200010	bnez	r1,L77_LF2
 1232  00001d40  54000000	nop; delay slot nop
 1233  00001d44  8fc1fff4	lw	r1,-12(r30)
 1234  00001d48  08000294	j	L72_LF2
 1235  00001d4c  54000000	nop; delay slot nop
 1236  00001d50          	L77_LF2:
 1237  00001d50  8fc10000	lw	r1,(r30)
 1238  00001d54  90220000	lbu	r2,(r1)
 1239  00001d58  6041002d	seqi	r1,r2,#45
 1240  00001d5c  10200024	beqz	r1,L78_LF2
 1241  00001d60  54000000	nop; delay slot nop
 1242  00001d64  2001ffff	addi	r1,r0,#-1
 1243  00001d68  afc1ffec	sw	-20(r30),r1
 1244  00001d6c  8fc20000	lw	r2,(r30)
 1245  00001d70  20410001	addi	r1,r2,#1
 1246  00001d74  00011020	add	r2,r0,r1
 1247  00001d78  afc20000	sw	(r30),r2
 1248  00001d7c  0800000c	j	L79_LF2
 1249  00001d80  54000000	nop; delay slot nop
 1250  00001d84          	L78_LF2:
 1251  00001d84  20010001	addi	r1,r0,#1
 1252  00001d88  afc1ffec	sw	-20(r30),r1
 1253  00001d8c          	L79_LF2:
 1254  00001d8c  8fc10008	lw	r1,8(r30)
 1255  00001d90  64220000	snei	r2,r1,#0
 1256  00001d94  14400090	bnez	r2,L80_LF2
 1257  00001d98  54000000	nop; delay slot nop
 1258  00001d9c  8fc10000	lw	r1,(r30)
 1259  00001da0  90220000	lbu	r2,(r1)
 1260  00001da4  60410030	seqi	r1,r2,#48
 1261  00001da8  10200074	beqz	r1,L81_LF2
 1262  00001dac  54000000	nop; delay slot nop
 1263  00001db0  8fc20000	lw	r2,(r30)
 1264  00001db4  20410001	addi	r1,r2,#1
 1265  00001db8  00011020	add	r2,r0,r1
 1266  00001dbc  afc20000	sw	(r30),r2
 1267  00001dc0  8fc10000	lw	r1,(r30)
 1268  00001dc4  90220000	lbu	r2,(r1)
 1269  00001dc8  60410078	seqi	r1,r2,#120
 1270  00001dcc  14200020	bnez	r1,L83_LF2
 1271  00001dd0  54000000	nop; delay slot nop
 1272  00001dd4  8fc10000	lw	r1,(r30)
 1273  00001dd8  90220000	lbu	r2,(r1)
 1274  00001ddc  60410058	seqi	r1,r2,#88
 1275  00001de0  1420000c	bnez	r1,L83_LF2
 1276  00001de4  54000000	nop; delay slot nop
 1277  00001de8  08000024	j	L82_LF2
 1278  00001dec  54000000	nop; delay slot nop
 1279  00001df0          	L83_LF2:
 1280  00001df0  20010010	addi	r1,r0,#16
 1281  00001df4  afc10008	sw	8(r30),r1
 1282  00001df8  8fc20000	lw	r2,(r30)
 1283  00001dfc  20410001	addi	r1,r2,#1
 1284  00001e00  00011020	add	r2,r0,r1
 1285  00001e04  afc20000	sw	(r30),r2
 1286  00001e08  0800000c	j	L84_LF2
 1287  00001e0c  54000000	nop; delay slot nop
 1288  00001e10          	L82_LF2:
 1289  00001e10  20010008	addi	r1,r0,#8
 1290  00001e14  afc10008	sw	8(r30),r1
 1291  00001e18          	L84_LF2:
 1292  00001e18  0800000c	j	L80_LF2
 1293  00001e1c  54000000	nop; delay slot nop
 1294  00001e20          	L81_LF2:
 1295  00001e20  2001000a	addi	r1,r0,#10
 1296  00001e24  afc10008	sw	8(r30),r1
 1297  00001e28          	L85_LF2:
 1298  00001e28          	L80_LF2:
 1299  00001e28  8fc10008	lw	r1,8(r30)
 1300  00001e2c  70220000	slei	r2,r1,#0
 1301  00001e30  1440001c	bnez	r2,L87_LF2
 1302  00001e34  54000000	nop; delay slot nop
 1303  00001e38  8fc10008	lw	r1,8(r30)
 1304  00001e3c  6c220010	sgti	r2,r1,#16
 1305  00001e40  1440000c	bnez	r2,L87_LF2
 1306  00001e44  54000000	nop; delay slot nop
 1307  00001e48  08000010	j	L86_LF2
 1308  00001e4c  54000000	nop; delay slot nop
 1309  00001e50          	L87_LF2:
 1310  00001e50  8fc1fff4	lw	r1,-12(r30)
 1311  00001e54  08000188	j	L72_LF2
 1312  00001e58  54000000	nop; delay slot nop
 1313  00001e5c          	L86_LF2:
 1314  00001e5c  54000000	nop
 1315  00001e60          	L88_LF2:
 1316  00001e60  8fc10000	lw	r1,(r30)
 1317  00001e64  90220000	lbu	r2,(r1)
 1318  00001e68  6c41002f	sgtui	r1,r2,#47
 1319  00001e6c  10200030	beqz	r1,L91_LF2
 1320  00001e70  54000000	nop; delay slot nop
 1321  00001e74  8fc10000	lw	r1,(r30)
 1322  00001e78  90220000	lbu	r2,(r1)
 1323  00001e7c  70410039	sleui	r1,r2,#57
 1324  00001e80  1020001c	beqz	r1,L91_LF2
 1325  00001e84  54000000	nop; delay slot nop
 1326  00001e88  8fc10000	lw	r1,(r30)
 1327  00001e8c  90220000	lbu	r2,(r1)
 1328  00001e90  2041ffd0	addi	r1,r2,#-48
 1329  00001e94  afc1fff0	sw	-16(r30),r1
 1330  00001e98  0800008c	j	L92_LF2
 1331  00001e9c  54000000	nop; delay slot nop
 1332  00001ea0          	L91_LF2:
 1333  00001ea0  8fc10000	lw	r1,(r30)
 1334  00001ea4  90220000	lbu	r2,(r1)
 1335  00001ea8  6c410060	sgtui	r1,r2,#96
 1336  00001eac  10200030	beqz	r1,L93_LF2
 1337  00001eb0  54000000	nop; delay slot nop
 1338  00001eb4  8fc10000	lw	r1,(r30)
 1339  00001eb8  90220000	lbu	r2,(r1)
 1340  00001ebc  7041007a	sleui	r1,r2,#122
 1341  00001ec0  1020001c	beqz	r1,L93_LF2
 1342  00001ec4  54000000	nop; delay slot nop
 1343  00001ec8  8fc10000	lw	r1,(r30)
 1344  00001ecc  90220000	lbu	r2,(r1)
 1345  00001ed0  2041ffa9	addi	r1,r2,#-87
 1346  00001ed4  afc1fff0	sw	-16(r30),r1
 1347  00001ed8  0800004c	j	L92_LF2
 1348  00001edc  54000000	nop; delay slot nop
 1349  00001ee0          	L93_LF2:
 1350  00001ee0  8fc10000	lw	r1,(r30)
 1351  00001ee4  90220000	lbu	r2,(r1)
 1352  00001ee8  6c410040	sgtui	r1,r2,#64
 1353  00001eec  10200030	beqz	r1,L95_LF2
 1354  00001ef0  54000000	nop; delay slot nop
 1355  00001ef4  8fc10000	lw	r1,(r30)
 1356  00001ef8  90220000	lbu	r2,(r1)
 1357  00001efc  7041005a	sleui	r1,r2,#90
 1358  00001f00  1020001c	beqz	r1,L95_LF2
 1359  00001f04  54000000	nop; delay slot nop
 1360  00001f08  8fc10000	lw	r1,(r30)
 1361  00001f0c  90220000	lbu	r2,(r1)
 1362  00001f10  2041ffc9	addi	r1,r2,#-55
 1363  00001f14  afc1fff0	sw	-16(r30),r1
 1364  00001f18  0800000c	j	L92_LF2
 1365  00001f1c  54000000	nop; delay slot nop
 1366  00001f20          	L95_LF2:
 1367  00001f20  200103e8	addi	r1,r0,#1000
 1368  00001f24  afc1fff0	sw	-16(r30),r1
 1369  00001f28          	L96_LF2:
 1370  00001f28          	L94_LF2:
 1371  00001f28          	L92_LF2:
 1372  00001f28  8fc1fff0	lw	r1,-16(r30)
 1373  00001f2c  8fc20008	lw	r2,8(r30)
 1374  00001f30  0022082a	slt	r1,r1,r2
 1375  00001f34  10200040	beqz	r1,L90_LF2
 1376  00001f38  54000000	nop; delay slot nop
 1377  00001f3c  8fc1fff4	lw	r1,-12(r30)
 1378  00001f40  8fc20008	lw	r2,8(r30)
 1379  00001f44  00200035	movi2fp	f0,r1
 1380  00001f48  00400835	movi2fp	f1,r2
 1381  00001f4c  0401000e	mult	f0,f0,f1
 1382  00001f50  00000834	movfp2i	r1,f0
 1383  00001f54  afc1fff4	sw	-12(r30),r1
 1384  00001f58  8fc1fff4	lw	r1,-12(r30)
 1385  00001f5c  8fc2fff0	lw	r2,-16(r30)
 1386  00001f60  00220820	add	r1,r1,r2
 1387  00001f64  afc1fff4	sw	-12(r30),r1
 1388  00001f68  8fc20000	lw	r2,(r30)
 1389  00001f6c  20410001	addi	r1,r2,#1
 1390  00001f70  00011020	add	r2,r0,r1
 1391  00001f74  afc20000	sw	(r30),r2
 1392  00001f78          	L97_LF2:
 1393  00001f78          	L90_LF2:
 1394  00001f78  8fc1fff0	lw	r1,-16(r30)
 1395  00001f7c  8fc20008	lw	r2,8(r30)
 1396  00001f80  0022082a	slt	r1,r1,r2
 1397  00001f84  1420000c	bnez	r1,L98_LF2
 1398  00001f88  54000000	nop; delay slot nop
 1399  00001f8c  0800000c	j	L89_LF2
 1400  00001f90  54000000	nop; delay slot nop
 1401  00001f94          	L98_LF2:
 1402  00001f94  0bfffec8	j	L88_LF2
 1403  00001f98  54000000	nop; delay slot nop
 1404  00001f9c          	L89_LF2:
 1405  00001f9c  8fc10004	lw	r1,4(r30)
 1406  00001fa0  64220000	snei	r2,r1,#0
 1407  00001fa4  10400010	beqz	r2,L99_LF2
 1408  00001fa8  54000000	nop; delay slot nop
 1409  00001fac  8fc10004	lw	r1,4(r30)
 1410  00001fb0  8fc20000	lw	r2,(r30)
 1411  00001fb4  ac220000	sw	(r1),r2
 1412  00001fb8          	L99_LF2:
 1413  00001fb8  8fc1fff4	lw	r1,-12(r30)
 1414  00001fbc  8fc2ffec	lw	r2,-20(r30)
 1415  00001fc0  00200035	movi2fp	f0,r1
 1416  00001fc4  00400835	movi2fp	f1,r2
 1417  00001fc8  0401000e	mult	f0,f0,f1
 1418  00001fcc  00000834	movfp2i	r1,f0
 1419  00001fd0  afc1fff4	sw	-12(r30),r1
 1420  00001fd4  8fc1fff4	lw	r1,-12(r30)
 1421  00001fd8  08000004	j	L72_LF2
 1422  00001fdc  54000000	nop; delay slot nop
 1423  00001fe0          	L72_LF2:
 1424  00001fe0  8fa20000	lw	r2,0(r29)
 1425  00001fe4  8fdffff8	lw	r31,-8(r30)
 1426  00001fe8  001ee820	add	r29,r0,r30
 1427  00001fec  8fdefffc	lw	r30,-4(r30)
 1428  00001ff0  4be00000	jr	r31
 1429  00001ff4  54000000	nop
 1430  00001ff8          	.endproc _dstrtol
 1431  00001ff8          	.align 2
 1432  00001ff8          	.proc _bcopy
 1433  00001ff8          	.global _bcopy
 1434  00001ff8          	_bcopy:
 1435                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1436  00001ff8  afbefffc	sw	-4(r29),r30; push fp
 1437  00001ffc  001df020	add	r30,r0,r29; fp = sp
 1438  00002000  afbffff8	sw	-8(r29),r31; push ret addr
 1439  00002004  2fbd0010	subui	r29,r29,#16; alloc local storage
 1440  00002008  afa20000	sw	0(r29),r2
 1441  0000200c  afa30004	sw	4(r29),r3
 1442  00002010  54000000	nop
 1443  00002014          	L101_LF2:
 1444  00002014  8fc10008	lw	r1,8(r30)
 1445  00002018  2022ffff	addi	r2,r1,#-1
 1446  0000201c  afc20008	sw	8(r30),r2
 1447  00002020  6c210000	sgti	r1,r1,#0
 1448  00002024  1420000c	bnez	r1,L103_LF2
 1449  00002028  54000000	nop; delay slot nop
 1450  0000202c  0800002c	j	L102_LF2
 1451  00002030  54000000	nop; delay slot nop
 1452  00002034          	L103_LF2:
 1453  00002034  8fc10004	lw	r1,4(r30)
 1454  00002038  20220001	addi	r2,r1,#1
 1455  0000203c  afc20004	sw	4(r30),r2
 1456  00002040  8fc20000	lw	r2,(r30)
 1457  00002044  20430001	addi	r3,r2,#1
 1458  00002048  afc30000	sw	(r30),r3
 1459  0000204c  80420000	lb	r2,(r2)
 1460  00002050  a0220000	sb	(r1),r2
 1461  00002054  0bffffbc	j	L101_LF2
 1462  00002058  54000000	nop; delay slot nop
 1463  0000205c          	L102_LF2:
 1464  0000205c          	L100_LF2:
 1465  0000205c  8fa20000	lw	r2,0(r29)
 1466  00002060  8fa30004	lw	r3,4(r29)
 1467  00002064  8fdffff8	lw	r31,-8(r30)
 1468  00002068  001ee820	add	r29,r0,r30
 1469  0000206c  8fdefffc	lw	r30,-4(r30)
 1470  00002070  4be00000	jr	r31
 1471  00002074  54000000	nop
 1472  00002078          	.endproc _bcopy
 1473  00002078          	.align 2
 1474  00002078          	.proc _bzero
 1475  00002078          	.global _bzero
 1476  00002078          	_bzero:
 1477                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1478  00002078  afbefffc	sw	-4(r29),r30; push fp
 1479  0000207c  001df020	add	r30,r0,r29; fp = sp
 1480  00002080  afbffff8	sw	-8(r29),r31; push ret addr
 1481  00002084  2fbd0010	subui	r29,r29,#16; alloc local storage
 1482  00002088  afa20000	sw	0(r29),r2
 1483  0000208c  54000000	nop
 1484  00002090          	L105_LF2:
 1485  00002090  8fc10004	lw	r1,4(r30)
 1486  00002094  2022ffff	addi	r2,r1,#-1
 1487  00002098  afc20004	sw	4(r30),r2
 1488  0000209c  6c210000	sgti	r1,r1,#0
 1489  000020a0  1420000c	bnez	r1,L107_LF2
 1490  000020a4  54000000	nop; delay slot nop
 1491  000020a8  08000020	j	L106_LF2
 1492  000020ac  54000000	nop; delay slot nop
 1493  000020b0          	L107_LF2:
 1494  000020b0  8fc10000	lw	r1,(r30)
 1495  000020b4  20220001	addi	r2,r1,#1
 1496  000020b8  afc20000	sw	(r30),r2
 1497  000020bc  20020000	addi	r2,r0,(#0x0)&0xff
 1498  000020c0  a0220000	sb	(r1),r2
 1499  000020c4  0bffffc8	j	L105_LF2
 1500  000020c8  54000000	nop; delay slot nop
 1501  000020cc          	L106_LF2:
 1502  000020cc          	L104_LF2:
 1503  000020cc  8fa20000	lw	r2,0(r29)
 1504  000020d0  8fdffff8	lw	r31,-8(r30)
 1505  000020d4  001ee820	add	r29,r0,r30
 1506  000020d8  8fdefffc	lw	r30,-4(r30)
 1507  000020dc  4be00000	jr	r31
 1508  000020e0  54000000	nop
 1509  000020e4          	.endproc _bzero
 1510  000020e4          	.align 2
 1511  000020e4          	.proc _min
 1512  000020e4          	.global _min
 1513  000020e4          	_min:
 1514                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1515  000020e4  afbefffc	sw	-4(r29),r30; push fp
 1516  000020e8  001df020	add	r30,r0,r29; fp = sp
 1517  000020ec  afbffff8	sw	-8(r29),r31; push ret addr
 1518  000020f0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1519  000020f4  afa20000	sw	0(r29),r2
 1520  000020f8  afa30004	sw	4(r29),r3
 1521  000020fc  8fc10000	lw	r1,(r30)
 1522  00002100  8fc20004	lw	r2,4(r30)
 1523  00002104  0022182c	sle	r3,r1,r2
 1524  00002108  14600008	bnez	r3,L109_LF2
 1525  0000210c  54000000	nop; delay slot nop
 1526  00002110  8fc10004	lw	r1,4(r30)
 1527  00002114          	L109_LF2:
 1528  00002114  08000004	j	L108_LF2
 1529  00002118  54000000	nop; delay slot nop
 1530  0000211c          	L108_LF2:
 1531  0000211c  8fa20000	lw	r2,0(r29)
 1532  00002120  8fa30004	lw	r3,4(r29)
 1533  00002124  8fdffff8	lw	r31,-8(r30)
 1534  00002128  001ee820	add	r29,r0,r30
 1535  0000212c  8fdefffc	lw	r30,-4(r30)
 1536  00002130  4be00000	jr	r31
 1537  00002134  54000000	nop
 1538  00002138          	.endproc _min
 1539  00002138          	.align 2
 1540  00002138          	.proc _max
 1541  00002138          	.global _max
 1542  00002138          	_max:
 1543                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1544  00002138  afbefffc	sw	-4(r29),r30; push fp
 1545  0000213c  001df020	add	r30,r0,r29; fp = sp
 1546  00002140  afbffff8	sw	-8(r29),r31; push ret addr
 1547  00002144  2fbd0010	subui	r29,r29,#16; alloc local storage
 1548  00002148  afa20000	sw	0(r29),r2
 1549  0000214c  afa30004	sw	4(r29),r3
 1550  00002150  8fc10000	lw	r1,(r30)
 1551  00002154  8fc20004	lw	r2,4(r30)
 1552  00002158  0022182d	sge	r3,r1,r2
 1553  0000215c  14600008	bnez	r3,L111_LF2
 1554  00002160  54000000	nop; delay slot nop
 1555  00002164  8fc10004	lw	r1,4(r30)
 1556  00002168          	L111_LF2:
 1557  00002168  08000004	j	L110_LF2
 1558  0000216c  54000000	nop; delay slot nop
 1559  00002170          	L110_LF2:
 1560  00002170  8fa20000	lw	r2,0(r29)
 1561  00002174  8fa30004	lw	r3,4(r29)
 1562  00002178  8fdffff8	lw	r31,-8(r30)
 1563  0000217c  001ee820	add	r29,r0,r30
 1564  00002180  8fdefffc	lw	r30,-4(r30)
 1565  00002184  4be00000	jr	r31
 1566  00002188  54000000	nop
 1567  0000218c          	.endproc _max
 1568                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1569                      ;;;
 1570                      ;;; Most of the traps are called in files from libtraps.
 1573  0000218c          	.align 2
 1574  0000218c          	.proc _exit
 1575  0000218c          	.global _exit
 1576  0000218c          	_exit:
 1577  0000218c  44000300	trap	#0x300
 1578  00002190  4be00000	jr	r31
 1579  00002194  54000000	nop
 1580  00002198          	.endproc _exit
 1582                      ; for the benefit of gcc.
 1583  00002198          	.proc ___main
 1584  00002198          	.global ___main
 1585  00002198          	___main:
 1586  00002198  4be00000	jr	r31
 1587  0000219c  54000000	nop
 1588  000021a0          	.endproc ___main
 1589  000021a0          	.text
 1590  000021a0          	.global _etext
 1591  000021a0          	_etext:
 1592  000021a0          	.align 3
 1593  000021a0          	.data
 1594  000030e5          	.global _edata
 1595  000030e5          	_edata:
