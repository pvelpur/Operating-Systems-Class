 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 474
    4                      ; Text size: 4996
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <number of processes to create\n\000"
   82  00003004  653a2025	
   82  00003008  73203c6e	
   82  0000300c  756d6265	
   82  00003010  72206f66	
   82  00003014  2070726f	
   82  00003018  63657373	
   82  0000301c  65732074	
   82  00003020  6f206372	
   82  00003024  65617465	
   82  00003028  0a00    	
   83  0000302a          	.align 2
   84  0000302c          	LC1_LF0:
   85  0000302c  6d616b65	.ascii "makeprocs (%d): Creating %d processes\n\000"
   85  00003030  70726f63	
   85  00003034  73202825	
   85  00003038  64293a20	
   85  0000303c  43726561	
   85  00003040  74696e67	
   85  00003044  20256420	
   85  00003048  70726f63	
   85  0000304c  65737365	
   85  00003050  730a00  	
   86  00003053          	.align 2
   87  00003054          	LC2_LF0:
   88  00003054  6d616b65	.ascii "makeprocs (%d): ERROR: could not allocate mailbox!\000"
   88  00003058  70726f63	
   88  0000305c  73202825	
   88  00003060  64293a20	
   88  00003064  4552524f	
   88  00003068  523a2063	
   88  0000306c  6f756c64	
   88  00003070  206e6f74	
   88  00003074  20616c6c	
   88  00003078  6f636174	
   88  0000307c  65206d61	
   88  00003080  696c626f	
   88  00003084  782100  	
   89  00003087          	.align 2
   90  00003088          	LC3_LF0:
   91  00003088  6d616b65	.ascii "makeprocs (%d): Could not open mailbox %d!\n\000"
   91  0000308c  70726f63	
   91  00003090  73202825	
   91  00003094  64293a20	
   91  00003098  436f756c	
   91  0000309c  64206e6f	
   91  000030a0  74206f70	
   91  000030a4  656e206d	
   91  000030a8  61696c62	
   91  000030ac  6f782025	
   91  000030b0  64210a00	
   92  000030b4          	.align 2
   93  000030b4          	LC4_LF0:
   94  000030b4  6d616b65	.ascii "makeprocs (%d): Bad sem_create\n\000"
   94  000030b8  70726f63	
   94  000030bc  73202825	
   94  000030c0  64293a20	
   94  000030c4  42616420	
   94  000030c8  73656d5f	
   94  000030cc  63726561	
   94  000030d0  74650a00	
   95  000030d4          	.align 2
   96  000030d4          	LC5_LF0:
   97  000030d4  73706177	.ascii "spawn_me.dlx.obj\000"
   97  000030d8  6e5f6d65	
   97  000030dc  2e646c78	
   97  000030e0  2e6f626a	
   97  000030e4  00      	
   98  000030e5          	.align 2
   99  000030e8          	LC6_LF0:
  100  000030e8  6d616b65	.ascii "makeprocs (%d): Process %d created\n\000"
  100  000030ec  70726f63	
  100  000030f0  73202825	
  100  000030f4  64293a20	
  100  000030f8  50726f63	
  100  000030fc  65737320	
  100  00003100  25642063	
  100  00003104  72656174	
  100  00003108  65640a00	
  101  0000310c          	.align 2
  102  0000310c          	LC7_LF0:
  103  0000310c  436f756c	.ascii "Could not send message to mailbox %d in %s (%d)\n\000"
  103  00003110  64206e6f	
  103  00003114  74207365	
  103  00003118  6e64206d	
  103  0000311c  65737361	
  103  00003120  67652074	
  103  00003124  6f206d61	
  103  00003128  696c626f	
  103  0000312c  78202564	
  103  00003130  20696e20	
  103  00003134  25732028	
  103  00003138  2564290a	
  103  0000313c  00      	
  104  0000313d          	.align 2
  105  00003140          	LC8_LF0:
  106  00003140  6d616b65	.ascii "makeprocs (%d): Sent message %d\n\000"
  106  00003144  70726f63	
  106  00003148  73202825	
  106  0000314c  64293a20	
  106  00003150  53656e74	
  106  00003154  206d6573	
  106  00003158  73616765	
  106  0000315c  2025640a	
  106  00003160  00      	
  107  00003161          	.align 2
  108  00003164          	LC9_LF0:
  109  00003164  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
  109  00003168  73656d61	
  109  0000316c  70686f72	
  109  00003170  6520735f	
  109  00003174  70726f63	
  109  00003178  735f636f	
  109  0000317c  6d706c65	
  109  00003180  74656420	
  109  00003184  28256429	
  109  00003188  20696e20	
  109  0000318c  00      	
  110  0000318d          	.align 2
  111  00003190          	LC10_LF0:
  112  00003190  0a00    	.ascii "\n\000"
  113  00003192          	.align 2
  114  00003194          	LC11_LF0:
  115  00003194  6d616b65	.ascii "makeprocs (%d): All other processes completed, exiting main process.\n"
  115  00003198  70726f63	
  115  0000319c  73202825	
  115  000031a0  64293a20	
  115  000031a4  416c6c20	
  115  000031a8  6f746865	
  115  000031ac  72207072	
  115  000031b0  6f636573	
  115  000031b4  73657320	
  115  000031b8  636f6d70	
  115  000031bc  6c657465	
  115  000031c0  642c2065	
  115  000031c4  78697469	
  115  000031c8  6e67206d	
  115  000031cc  61696e20	
  115  000031d0  70726f63	
  115  000031d4  6573732e	
  115  000031d8  0a      	
  116  000031d9  00      	.ascii "\000"
  117  000031da          	.text
  118  000010d4          	.align 2
  119  000010d4          	.proc _main
  120  000010d4          	.global _main
  121  000010d4          	_main:
  122                      ;  Function 'main'; 40 bytes of locals, 0 regs to save.
  123  000010d4  afbefffc	sw	-4(r29),r30; push fp
  124  000010d8  001df020	add	r30,r0,r29; fp = sp
  125  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  126  000010e0  2fbd0030	subui	r29,r29,#48; alloc local storage
  127  000010e4  8fc20000	lw	r2,(r30)
  128  000010e8  8fc80004	lw	r8,4(r30)
  129  000010ec  0c00128c	jal	___main
  130  000010f0  54000000	nop; not filled.
  131  000010f4  64410002	snei	r1,r2,#2
  132  000010f8  10200030	beqz	r1,L14_LF0
  133  000010fc  54000000	nop; not filled.
  134  00001100  23bdfff8	addi	r29,r29,#-8
  135  00001104  3c090000	lhi	r9,((LC0_LF0)>>16)&0xffff
  136  00001108  25293000	addui	r9,r9,(LC0_LF0)&0xffff
  137  0000110c  afa90000	sw	(r29),r9
  138  00001110  8d010000	lw	r1,(r8)
  139  00001114  afa10004	sw	4(r29),r1
  140  00001118  0c0003b0	jal	_Printf
  141  0000111c  54000000	nop; not filled.
  142  00001120  0c0004b0	jal	_Exit
  143  00001124  54000000	nop; not filled.
  144  00001128  23bd0008	addi	r29,r29,#8
  145  0000112c          	L14_LF0:
  146  0000112c  23bdfff0	addi	r29,r29,#-16
  147  00001130  8d090004	lw	r9,4(r8)
  148  00001134  afa90000	sw	(r29),r9
  149  00001138  20090000	addi	r9,r0,#0
  150  0000113c  afa90004	sw	4(r29),r9
  151  00001140  2009000a	addi	r9,r0,#10
  152  00001144  afa90008	sw	8(r29),r9
  153  00001148  0c000d34	jal	_dstrtol
  154  0000114c  54000000	nop; not filled.
  155  00001150  00012820	add	r5,r0,r1
  156  00001154  0c000380	jal	_getpid
  157  00001158  54000000	nop; not filled.
  158  0000115c  3c090000	lhi	r9,((LC1_LF0)>>16)&0xffff
  159  00001160  2529302c	addui	r9,r9,(LC1_LF0)&0xffff
  160  00001164  afa90000	sw	(r29),r9
  161  00001168  afa10004	sw	4(r29),r1
  162  0000116c  afa50008	sw	8(r29),r5
  163  00001170  0c000358	jal	_Printf
  164  00001174  54000000	nop; not filled.
  165  00001178  0c000404	jal	_mbox_create
  166  0000117c  54000000	nop; not filled.
  167  00001180  00013020	add	r6,r0,r1
  168  00001184  23bd0010	addi	r29,r29,#16
  169  00001188  60c1ffff	seqi	r1,r6,#-1
  170  0000118c  10200034	beqz	r1,L15_LF0
  171  00001190  54000000	nop; not filled.
  172  00001194  0c000340	jal	_getpid
  173  00001198  54000000	nop; not filled.
  174  0000119c  23bdfff8	addi	r29,r29,#-8
  175  000011a0  3c090000	lhi	r9,((LC2_LF0)>>16)&0xffff
  176  000011a4  25293054	addui	r9,r9,(LC2_LF0)&0xffff
  177  000011a8  afa90000	sw	(r29),r9
  178  000011ac  afa10004	sw	4(r29),r1
  179  000011b0  0c000318	jal	_Printf
  180  000011b4  54000000	nop; not filled.
  181  000011b8  0c000418	jal	_Exit
  182  000011bc  54000000	nop; not filled.
  183  000011c0  23bd0008	addi	r29,r29,#8
  184  000011c4          	L15_LF0:
  185  000011c4  23bdfff8	addi	r29,r29,#-8
  186  000011c8  afa60000	sw	(r29),r6
  187  000011cc  0c0003bc	jal	_mbox_open
  188  000011d0  54000000	nop; not filled.
  189  000011d4  23bd0008	addi	r29,r29,#8
  190  000011d8  6021ffff	seqi	r1,r1,#-1
  191  000011dc  10200038	beqz	r1,L16_LF0
  192  000011e0  54000000	nop; not filled.
  193  000011e4  0c0002f0	jal	_getpid
  194  000011e8  54000000	nop; not filled.
  195  000011ec  23bdfff0	addi	r29,r29,#-16
  196  000011f0  3c090000	lhi	r9,((LC3_LF0)>>16)&0xffff
  197  000011f4  25293088	addui	r9,r9,(LC3_LF0)&0xffff
  198  000011f8  afa90000	sw	(r29),r9
  199  000011fc  afa10004	sw	4(r29),r1
  200  00001200  afa60008	sw	8(r29),r6
  201  00001204  0c0002c4	jal	_Printf
  202  00001208  54000000	nop; not filled.
  203  0000120c  0c0003c4	jal	_Exit
  204  00001210  54000000	nop; not filled.
  205  00001214  23bd0010	addi	r29,r29,#16
  206  00001218          	L16_LF0:
  207  00001218  afc5fff0	sw	-16(r30),r5
  208  0000121c  20090041	addi	r9,r0,(#0x41)&0xff
  209  00001220  a3c9fff4	sb	-12(r30),r9
  210  00001224  23bdfff8	addi	r29,r29,#-8
  211  00001228  20010001	addi	r1,r0,#1
  212  0000122c  00250822	sub	r1,r1,r5
  213  00001230  afa10000	sw	(r29),r1
  214  00001234  0c0002d0	jal	_sem_create
  215  00001238  54000000	nop; not filled.
  216  0000123c  00013820	add	r7,r0,r1
  217  00001240  23bd0008	addi	r29,r29,#8
  218  00001244  60e1ffff	seqi	r1,r7,#-1
  219  00001248  10200034	beqz	r1,L17_LF0
  220  0000124c  54000000	nop; not filled.
  221  00001250  0c000284	jal	_getpid
  222  00001254  54000000	nop; not filled.
  223  00001258  23bdfff8	addi	r29,r29,#-8
  224  0000125c  3c090000	lhi	r9,((LC4_LF0)>>16)&0xffff
  225  00001260  252930b4	addui	r9,r9,(LC4_LF0)&0xffff
  226  00001264  afa90000	sw	(r29),r9
  227  00001268  afa10004	sw	4(r29),r1
  228  0000126c  0c00025c	jal	_Printf
  229  00001270  54000000	nop; not filled.
  230  00001274  0c00035c	jal	_Exit
  231  00001278  54000000	nop; not filled.
  232  0000127c  23bd0008	addi	r29,r29,#8
  233  00001280          	L17_LF0:
  234  00001280  23bdfff8	addi	r29,r29,#-8
  235  00001284  afa60000	sw	(r29),r6
  236  00001288  23c4ffe0	addi	r4,r30,#-32
  237  0000128c  afa40004	sw	4(r29),r4
  238  00001290  0c000a60	jal	_ditoa
  239  00001294  54000000	nop; not filled.
  240  00001298  afa70000	sw	(r29),r7
  241  0000129c  23c3ffd0	addi	r3,r30,#-48
  242  000012a0  afa30004	sw	4(r29),r3
  243  000012a4  0c000a4c	jal	_ditoa
  244  000012a8  54000000	nop; not filled.
  245  000012ac  20020000	addi	r2,r0,#0
  246  000012b0  23bd0008	addi	r29,r29,#8
  247  000012b4  0045082a	slt	r1,r2,r5
  248  000012b8  1020007c	beqz	r1,L30_LF0
  249  000012bc  54000000	nop; not filled.
  250  000012c0          	L21_LF0:
  251  000012c0  23bdffe8	addi	r29,r29,#-24
  252  000012c4  3c090000	lhi	r9,((LC5_LF0)>>16)&0xffff
  253  000012c8  252930d4	addui	r9,r9,(LC5_LF0)&0xffff
  254  000012cc  afa90000	sw	(r29),r9
  255  000012d0  20090000	addi	r9,r0,#0
  256  000012d4  afa90004	sw	4(r29),r9
  257  000012d8  20090001	addi	r9,r0,#1
  258  000012dc  afa90008	sw	8(r29),r9
  259  000012e0  afa4000c	sw	12(r29),r4
  260  000012e4  afa30010	sw	16(r29),r3
  261  000012e8  20090000	addi	r9,r0,#0
  262  000012ec  afa90014	sw	20(r29),r9
  263  000012f0  0c0001f0	jal	_process_create
  264  000012f4  54000000	nop; not filled.
  265  000012f8  0c0001dc	jal	_getpid
  266  000012fc  54000000	nop; not filled.
  267  00001300  3c090000	lhi	r9,((LC6_LF0)>>16)&0xffff
  268  00001304  252930e8	addui	r9,r9,(LC6_LF0)&0xffff
  269  00001308  afa90000	sw	(r29),r9
  270  0000130c  afa10004	sw	4(r29),r1
  271  00001310  afa20008	sw	8(r29),r2
  272  00001314  0c0001b4	jal	_Printf
  273  00001318  54000000	nop; not filled.
  274  0000131c  23bd0018	addi	r29,r29,#24
  275  00001320  20420001	addi	r2,r2,#1
  276  00001324  0045082a	slt	r1,r2,r5
  277  00001328  1420ff94	bnez	r1,L21_LF0
  278  0000132c  54000000	nop; not filled.
  279  00001330  20020000	addi	r2,r0,#0
  280  00001334  0045082a	slt	r1,r2,r5
  281  00001338          	L30_LF0:
  282  00001338  102000ac	beqz	r1,L24_LF0
  283  0000133c  54000000	nop; not filled.
  284  00001340  23c3fff0	addi	r3,r30,#-16
  285  00001344          	L26_LF0:
  286  00001344  23bdfff0	addi	r29,r29,#-16
  287  00001348  afa60000	sw	(r29),r6
  288  0000134c  20090008	addi	r9,r0,#8
  289  00001350  afa90004	sw	4(r29),r9
  290  00001354  afa30008	sw	8(r29),r3
  291  00001358  0c000248	jal	_mbox_send
  292  0000135c  54000000	nop; not filled.
  293  00001360  23bd0010	addi	r29,r29,#16
  294  00001364  6021ffff	seqi	r1,r1,#-1
  295  00001368  10200040	beqz	r1,L27_LF0
  296  0000136c  54000000	nop; not filled.
  297  00001370  0c000164	jal	_getpid
  298  00001374  54000000	nop; not filled.
  299  00001378  23bdfff0	addi	r29,r29,#-16
  300  0000137c  3c090000	lhi	r9,((LC7_LF0)>>16)&0xffff
  301  00001380  2529310c	addui	r9,r9,(LC7_LF0)&0xffff
  302  00001384  afa90000	sw	(r29),r9
  303  00001388  afa60004	sw	4(r29),r6
  304  0000138c  8d090000	lw	r9,(r8)
  305  00001390  afa90008	sw	8(r29),r9
  306  00001394  afa1000c	sw	12(r29),r1
  307  00001398  0c000130	jal	_Printf
  308  0000139c  54000000	nop; not filled.
  309  000013a0  0c000230	jal	_Exit
  310  000013a4  54000000	nop; not filled.
  311  000013a8  23bd0010	addi	r29,r29,#16
  312  000013ac          	L27_LF0:
  313  000013ac  0c000128	jal	_getpid
  314  000013b0  54000000	nop; not filled.
  315  000013b4  23bdfff0	addi	r29,r29,#-16
  316  000013b8  3c090000	lhi	r9,((LC8_LF0)>>16)&0xffff
  317  000013bc  25293140	addui	r9,r9,(LC8_LF0)&0xffff
  318  000013c0  afa90000	sw	(r29),r9
  319  000013c4  afa10004	sw	4(r29),r1
  320  000013c8  afa20008	sw	8(r29),r2
  321  000013cc  0c0000fc	jal	_Printf
  322  000013d0  54000000	nop; not filled.
  323  000013d4  23bd0010	addi	r29,r29,#16
  324  000013d8  20420001	addi	r2,r2,#1
  325  000013dc  0045082a	slt	r1,r2,r5
  326  000013e0  1420ff60	bnez	r1,L26_LF0
  327  000013e4  54000000	nop; not filled.
  328  000013e8          	L24_LF0:
  329  000013e8  23bdfff8	addi	r29,r29,#-8
  330  000013ec  afa70000	sw	(r29),r7
  331  000013f0  0c000120	jal	_sem_wait
  332  000013f4  54000000	nop; not filled.
  333  000013f8  23bd0008	addi	r29,r29,#8
  334  000013fc  64210001	snei	r1,r1,#1
  335  00001400  10200050	beqz	r1,L29_LF0
  336  00001404  54000000	nop; not filled.
  337  00001408  23bdfff8	addi	r29,r29,#-8
  338  0000140c  3c090000	lhi	r9,((LC9_LF0)>>16)&0xffff
  339  00001410  25293164	addui	r9,r9,(LC9_LF0)&0xffff
  340  00001414  afa90000	sw	(r29),r9
  341  00001418  afa70004	sw	4(r29),r7
  342  0000141c  0c0000ac	jal	_Printf
  343  00001420  54000000	nop; not filled.
  344  00001424  8d080000	lw	r8,(r8)
  345  00001428  afa80000	sw	(r29),r8
  346  0000142c  0c00009c	jal	_Printf
  347  00001430  54000000	nop; not filled.
  348  00001434  3c090000	lhi	r9,((LC10_LF0)>>16)&0xffff
  349  00001438  25293190	addui	r9,r9,(LC10_LF0)&0xffff
  350  0000143c  afa90000	sw	(r29),r9
  351  00001440  0c000088	jal	_Printf
  352  00001444  54000000	nop; not filled.
  353  00001448  0c000188	jal	_Exit
  354  0000144c  54000000	nop; not filled.
  355  00001450  23bd0008	addi	r29,r29,#8
  356  00001454          	L29_LF0:
  357  00001454  0c000080	jal	_getpid
  358  00001458  54000000	nop; not filled.
  359  0000145c  23bdfff8	addi	r29,r29,#-8
  360  00001460  3c090000	lhi	r9,((LC11_LF0)>>16)&0xffff
  361  00001464  25293194	addui	r9,r9,(LC11_LF0)&0xffff
  362  00001468  afa90000	sw	(r29),r9
  363  0000146c  afa10004	sw	4(r29),r1
  364  00001470  0c000058	jal	_Printf
  365  00001474  54000000	nop; not filled.
  366  00001478  23bd0008	addi	r29,r29,#8
  367  0000147c  0c000ef0	jal	_exit
  368  00001480  54000000	nop
  369  00001484          	.endproc _main
  370                      ;;;
  371                      ;;; Stub functions for DLX traps.
  372                      ;;;
  373                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  374                      ;;;
  375                      ;;; The traps such as Open and Close
  376                      ;;; (note the capital letters) are for use by user programs.  The traps
  377                      ;;; with names such as open and close (lower case) are for use by the OS.
  378                      ;;;
  381  00001484          	.align 2
  383                      ;;; The following are the traps to be used by user-level programs
  384                      ;;;
  386  00001484          	.align 2
  387  00001484          	.proc _Open
  388  00001484          	.global _Open
  389  00001484          	_Open:
  390                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  391                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  392                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  393  00001484  44000213	trap	#0x213
  394  00001488  4be00000	jr	r31
  395  0000148c  54000000	nop
  396  00001490          	.endproc _Open
  398  00001490          	.proc _Close
  399  00001490          	.global _Close
  400  00001490          	_Close:
  401  00001490  44000214	trap	#0x214
  402  00001494  4be00000	jr	r31
  403  00001498  54000000	nop
  404  0000149c          	.endproc _Close
  406  0000149c          	.proc _Read
  407  0000149c          	.global _Read
  408  0000149c          	_Read:
  409  0000149c  44000210	trap	#0x210
  410  000014a0  4be00000	jr	r31
  411  000014a4  54000000	nop
  412  000014a8          	.endproc _Read
  414  000014a8          	.proc _Write
  415  000014a8          	.global _Write
  416  000014a8          	_Write:
  417  000014a8  44000211	trap	#0x211
  418  000014ac  4be00000	jr	r31
  419  000014b0  54000000	nop
  420  000014b4          	.endproc _Write
  422  000014b4          	.proc _Lseek
  423  000014b4          	.global _Lseek
  424  000014b4          	_Lseek:
  425  000014b4  44000212	trap	#0x212
  426  000014b8  4be00000	jr	r31
  427  000014bc  54000000	nop
  428  000014c0          	.endproc _Lseek
  430  000014c0          	.proc _Putchar
  431  000014c0          	.global _Putchar
  432  000014c0          	_Putchar:
  433  000014c0  44000280	trap	#0x280
  434  000014c4  4be00000	jr	r31
  435  000014c8  54000000	nop
  436  000014cc          	.endproc _Putchar
  438  000014cc          	.proc _Printf
  439  000014cc          	.global _Printf
  440  000014cc          	_Printf:
  441  000014cc  44000201	trap	#0x201
  442  000014d0  4be00000	jr	r31
  443  000014d4  54000000	nop
  444  000014d8          	.endproc _Printf
  446  000014d8          	.proc _getpid
  447  000014d8          	.global _getpid
  448  000014d8          	_getpid:
  449  000014d8  44000431	trap	#0x431
  450  000014dc  4be00000	jr	r31
  451  000014e0  54000000	nop
  452  000014e4          	.endproc _getpid
  454  000014e4          	.proc _process_create
  455  000014e4          	.global _process_create
  456  000014e4          	_process_create:
  457  000014e4  44000432	trap	#0x432
  458  000014e8  4be00000	jr	r31
  459  000014ec  54000000	nop
  460  000014f0          	.endproc _process_create
  462  000014f0          	.proc _shmget
  463  000014f0          	.global _shmget
  464  000014f0          	_shmget:
  465  000014f0  44000440	trap	#0x440
  466  000014f4  4be00000	jr	r31
  467  000014f8  54000000	nop
  468  000014fc          	.endproc _shmget
  470  000014fc          	.proc _shmat
  471  000014fc          	.global _shmat
  472  000014fc          	_shmat:
  473  000014fc  44000441	trap	#0x441
  474  00001500  4be00000	jr	r31
  475  00001504  54000000	nop
  476  00001508          	.endproc _shmat
  478  00001508          	.proc _sem_create
  479  00001508          	.global _sem_create
  480  00001508          	_sem_create:
  481  00001508  44000450	trap	#0x450
  482  0000150c  4be00000	jr	r31
  483  00001510  54000000	nop
  484  00001514          	.endproc _sem_create
  486  00001514          	.proc _sem_wait
  487  00001514          	.global _sem_wait
  488  00001514          	_sem_wait:
  489  00001514  44000451	trap	#0x451
  490  00001518  4be00000	jr	r31
  491  0000151c  54000000	nop
  492  00001520          	.endproc _sem_wait
  494  00001520          	.proc _sem_signal
  495  00001520          	.global _sem_signal
  496  00001520          	_sem_signal:
  497  00001520  44000452	trap	#0x452
  498  00001524  4be00000	jr	r31
  499  00001528  54000000	nop
  500  0000152c          	.endproc _sem_signal
  502  0000152c          	.proc _lock_create
  503  0000152c          	.global _lock_create
  504  0000152c          	_lock_create:
  505  0000152c  44000453	trap	#0x453
  506  00001530  4be00000	jr	r31
  507  00001534  54000000	nop
  508  00001538          	.endproc _lock_create
  510  00001538          	.proc _lock_acquire
  511  00001538          	.global _lock_acquire
  512  00001538          	_lock_acquire:
  513  00001538  44000454	trap	#0x454
  514  0000153c  4be00000	jr	r31
  515  00001540  54000000	nop
  516  00001544          	.endproc _lock_acquire
  518  00001544          	.proc _lock_release
  519  00001544          	.global _lock_release
  520  00001544          	_lock_release:
  521  00001544  44000455	trap	#0x455
  522  00001548  4be00000	jr	r31
  523  0000154c  54000000	nop
  524  00001550          	.endproc _lock_release
  526  00001550          	.proc _cond_create
  527  00001550          	.global _cond_create
  528  00001550          	_cond_create:
  529  00001550  44000456	trap	#0x456
  530  00001554  4be00000	jr	r31
  531  00001558  54000000	nop
  532  0000155c          	.endproc _cond_create
  534  0000155c          	.proc _cond_wait
  535  0000155c          	.global _cond_wait
  536  0000155c          	_cond_wait:
  537  0000155c  44000457	trap	#0x457
  538  00001560  4be00000	jr	r31
  539  00001564  54000000	nop
  540  00001568          	.endproc _cond_wait
  542  00001568          	.proc _cond_signal
  543  00001568          	.global _cond_signal
  544  00001568          	_cond_signal:
  545  00001568  44000458	trap	#0x458
  546  0000156c  4be00000	jr	r31
  547  00001570  54000000	nop
  548  00001574          	.endproc _cond_signal
  550  00001574          	.proc _cond_broadcast
  551  00001574          	.global _cond_broadcast
  552  00001574          	_cond_broadcast:
  553  00001574  44000459	trap	#0x459
  554  00001578  4be00000	jr	r31
  555  0000157c  54000000	nop
  556  00001580          	.endproc _cond_broadcast
  558  00001580          	.proc _mbox_create
  559  00001580          	.global _mbox_create
  560  00001580          	_mbox_create:
  561  00001580  44000460	trap	#0x460
  562  00001584  4be00000	jr	r31
  563  00001588  54000000	nop
  564  0000158c          	.endproc _mbox_create
  566  0000158c          	.proc _mbox_open
  567  0000158c          	.global _mbox_open
  568  0000158c          	_mbox_open:
  569  0000158c  44000461	trap	#0x461
  570  00001590  4be00000	jr	r31
  571  00001594  54000000	nop
  572  00001598          	.endproc _mbox_open
  574  00001598          	.proc _mbox_close
  575  00001598          	.global _mbox_close
  576  00001598          	_mbox_close:
  577  00001598  44000462	trap	#0x462
  578  0000159c  4be00000	jr	r31
  579  000015a0  54000000	nop
  580  000015a4          	.endproc _mbox_close
  582  000015a4          	.proc _mbox_send
  583  000015a4          	.global _mbox_send
  584  000015a4          	_mbox_send:
  585  000015a4  44000463	trap	#0x463
  586  000015a8  4be00000	jr	r31
  587  000015ac  54000000	nop
  588  000015b0          	.endproc _mbox_send
  590  000015b0          	.proc _mbox_recv
  591  000015b0          	.global _mbox_recv
  592  000015b0          	_mbox_recv:
  593  000015b0  44000464	trap	#0x464
  594  000015b4  4be00000	jr	r31
  595  000015b8  54000000	nop
  596  000015bc          	.endproc _mbox_recv
  598  000015bc          	.proc _sleep
  599  000015bc          	.global _sleep
  600  000015bc          	_sleep:
  601  000015bc  44000465	trap	#0x465
  602  000015c0  4be00000	jr	r31
  603  000015c4  54000000	nop
  604  000015c8          	.endproc _sleep
  606  000015c8          	.proc _yield
  607  000015c8          	.global _yield
  608  000015c8          	_yield:
  609  000015c8  44000466	trap	#0x466
  610  000015cc  4be00000	jr	r31
  611  000015d0  54000000	nop
  612  000015d4          	.endproc _yield
  615  000015d4          	.proc _Exit
  616  000015d4          	.global _Exit
  617  000015d4          	_Exit:
  618  000015d4  44000500	trap	#0x500
  619  000015d8  4be00000	jr	r31
  620  000015dc  54000000	nop
  621  000015e0          	.endproc _Exit
  622                      ; Compiled by GCC
  624  000015e0          	.align 2
  625  000015e0          	.proc _isspace
  626  000015e0          	.global _isspace
  627  000015e0          	_isspace:
  628                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  629  000015e0  afbefffc	sw	-4(r29),r30; push fp
  630  000015e4  001df020	add	r30,r0,r29; fp = sp
  631  000015e8  afbffff8	sw	-8(r29),r31; push ret addr
  632  000015ec  2fbd0018	subui	r29,r29,#24; alloc local storage
  633  000015f0  afa20000	sw	0(r29),r2
  634  000015f4  afa30004	sw	4(r29),r3
  635  000015f8  afa40008	sw	8(r29),r4
  636  000015fc  83c20003	lb	r2,3(r30)
  637  00001600  20010000	addi	r1,r0,#0
  638  00001604  304300ff	andi	r3,r2,#0x00ff
  639  00001608  60640020	seqi	r4,r3,#32
  640  0000160c  1480002c	bnez	r4,L3_LF2
  641  00001610  54000000	nop; delay slot nop
  642  00001614  304300ff	andi	r3,r2,#0x00ff
  643  00001618  60640009	seqi	r4,r3,#9
  644  0000161c  1480001c	bnez	r4,L3_LF2
  645  00001620  54000000	nop; delay slot nop
  646  00001624  304300ff	andi	r3,r2,#0x00ff
  647  00001628  6064000a	seqi	r4,r3,#10
  648  0000162c  1480000c	bnez	r4,L3_LF2
  649  00001630  54000000	nop; delay slot nop
  650  00001634  08000008	j	L2_LF2
  651  00001638  54000000	nop; delay slot nop
  652  0000163c          	L3_LF2:
  653  0000163c  20010001	addi	r1,r0,#1
  654  00001640          	L2_LF2:
  655  00001640  08000004	j	L1_LF2
  656  00001644  54000000	nop; delay slot nop
  657  00001648          	L1_LF2:
  658  00001648  8fa20000	lw	r2,0(r29)
  659  0000164c  8fa30004	lw	r3,4(r29)
  660  00001650  8fa40008	lw	r4,8(r29)
  661  00001654  8fdffff8	lw	r31,-8(r30)
  662  00001658  001ee820	add	r29,r0,r30
  663  0000165c  8fdefffc	lw	r30,-4(r30)
  664  00001660  4be00000	jr	r31
  665  00001664  54000000	nop
  666  00001668          	.endproc _isspace
  667  00001668          	.align 2
  668  00001668          	.proc _isxdigit
  669  00001668          	.global _isxdigit
  670  00001668          	_isxdigit:
  671                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  672  00001668  afbefffc	sw	-4(r29),r30; push fp
  673  0000166c  001df020	add	r30,r0,r29; fp = sp
  674  00001670  afbffff8	sw	-8(r29),r31; push ret addr
  675  00001674  2fbd0018	subui	r29,r29,#24; alloc local storage
  676  00001678  afa20000	sw	0(r29),r2
  677  0000167c  afa30004	sw	4(r29),r3
  678  00001680  afa40008	sw	8(r29),r4
  679  00001684  83c20003	lb	r2,3(r30)
  680  00001688  20010000	addi	r1,r0,#0
  681  0000168c  304300ff	andi	r3,r2,#0x00ff
  682  00001690  6c64002f	sgtui	r4,r3,#47
  683  00001694  1080001c	beqz	r4,L7_LF2
  684  00001698  54000000	nop; delay slot nop
  685  0000169c  304300ff	andi	r3,r2,#0x00ff
  686  000016a0  70640039	sleui	r4,r3,#57
  687  000016a4  1480005c	bnez	r4,L6_LF2
  688  000016a8  54000000	nop; delay slot nop
  689  000016ac  08000004	j	L7_LF2
  690  000016b0  54000000	nop; delay slot nop
  691  000016b4          	L7_LF2:
  692  000016b4  304300ff	andi	r3,r2,#0x00ff
  693  000016b8  6c640060	sgtui	r4,r3,#96
  694  000016bc  1080001c	beqz	r4,L8_LF2
  695  000016c0  54000000	nop; delay slot nop
  696  000016c4  304300ff	andi	r3,r2,#0x00ff
  697  000016c8  70640066	sleui	r4,r3,#102
  698  000016cc  14800034	bnez	r4,L6_LF2
  699  000016d0  54000000	nop; delay slot nop
  700  000016d4  08000004	j	L8_LF2
  701  000016d8  54000000	nop; delay slot nop
  702  000016dc          	L8_LF2:
  703  000016dc  304300ff	andi	r3,r2,#0x00ff
  704  000016e0  6c640040	sgtui	r4,r3,#64
  705  000016e4  10800020	beqz	r4,L5_LF2
  706  000016e8  54000000	nop; delay slot nop
  707  000016ec  304300ff	andi	r3,r2,#0x00ff
  708  000016f0  70640041	sleui	r4,r3,#65
  709  000016f4  1480000c	bnez	r4,L6_LF2
  710  000016f8  54000000	nop; delay slot nop
  711  000016fc  08000008	j	L5_LF2
  712  00001700  54000000	nop; delay slot nop
  713  00001704          	L6_LF2:
  714  00001704  20010001	addi	r1,r0,#1
  715  00001708          	L5_LF2:
  716  00001708  08000004	j	L4_LF2
  717  0000170c  54000000	nop; delay slot nop
  718  00001710          	L4_LF2:
  719  00001710  8fa20000	lw	r2,0(r29)
  720  00001714  8fa30004	lw	r3,4(r29)
  721  00001718  8fa40008	lw	r4,8(r29)
  722  0000171c  8fdffff8	lw	r31,-8(r30)
  723  00001720  001ee820	add	r29,r0,r30
  724  00001724  8fdefffc	lw	r30,-4(r30)
  725  00001728  4be00000	jr	r31
  726  0000172c  54000000	nop
  727  00001730          	.endproc _isxdigit
  728  00001730          	.align 2
  729  00001730          	.proc _dstrcpy
  730  00001730          	.global _dstrcpy
  731  00001730          	_dstrcpy:
  732                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  733  00001730  afbefffc	sw	-4(r29),r30; push fp
  734  00001734  001df020	add	r30,r0,r29; fp = sp
  735  00001738  afbffff8	sw	-8(r29),r31; push ret addr
  736  0000173c  2fbd0018	subui	r29,r29,#24; alloc local storage
  737  00001740  afa20000	sw	0(r29),r2
  738  00001744  afa30004	sw	4(r29),r3
  739  00001748  8fc10000	lw	r1,(r30)
  740  0000174c  afc1fff4	sw	-12(r30),r1
  741  00001750          	L10_LF2:
  742  00001750  8fc10000	lw	r1,(r30)
  743  00001754  20220001	addi	r2,r1,#1
  744  00001758  afc20000	sw	(r30),r2
  745  0000175c  8fc20004	lw	r2,4(r30)
  746  00001760  20430001	addi	r3,r2,#1
  747  00001764  afc30004	sw	4(r30),r3
  748  00001768  80420000	lb	r2,(r2)
  749  0000176c  a0220000	sb	(r1),r2
  750  00001770  a3c2fff3	sb	-13(r30),r2
  751  00001774          	L12_LF2:
  752  00001774  93c1fff3	lbu	r1,-13(r30)
  753  00001778  64220000	snei	r2,r1,#0
  754  0000177c  1440000c	bnez	r2,L13_LF2
  755  00001780  54000000	nop; delay slot nop
  756  00001784  0800000c	j	L11_LF2
  757  00001788  54000000	nop; delay slot nop
  758  0000178c          	L13_LF2:
  759  0000178c  0bffffc0	j	L10_LF2
  760  00001790  54000000	nop; delay slot nop
  761  00001794          	L11_LF2:
  762  00001794  8fc1fff4	lw	r1,-12(r30)
  763  00001798  08000004	j	L9_LF2
  764  0000179c  54000000	nop; delay slot nop
  765  000017a0          	L9_LF2:
  766  000017a0  8fa20000	lw	r2,0(r29)
  767  000017a4  8fa30004	lw	r3,4(r29)
  768  000017a8  8fdffff8	lw	r31,-8(r30)
  769  000017ac  001ee820	add	r29,r0,r30
  770  000017b0  8fdefffc	lw	r30,-4(r30)
  771  000017b4  4be00000	jr	r31
  772  000017b8  54000000	nop
  773  000017bc          	.endproc _dstrcpy
  774  000017bc          	.align 2
  775  000017bc          	.proc _dstrncpy
  776  000017bc          	.global _dstrncpy
  777  000017bc          	_dstrncpy:
  778                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  779  000017bc  afbefffc	sw	-4(r29),r30; push fp
  780  000017c0  001df020	add	r30,r0,r29; fp = sp
  781  000017c4  afbffff8	sw	-8(r29),r31; push ret addr
  782  000017c8  2fbd0018	subui	r29,r29,#24; alloc local storage
  783  000017cc  afa20000	sw	0(r29),r2
  784  000017d0  afa30004	sw	4(r29),r3
  785  000017d4  8fc10000	lw	r1,(r30)
  786  000017d8  afc1fff4	sw	-12(r30),r1
  787  000017dc          	L15_LF2:
  788  000017dc  8fc10008	lw	r1,8(r30)
  789  000017e0  2022ffff	addi	r2,r1,#-1
  790  000017e4  afc20008	sw	8(r30),r2
  791  000017e8  70210000	slei	r1,r1,#0
  792  000017ec  1020000c	beqz	r1,L18_LF2
  793  000017f0  54000000	nop; delay slot nop
  794  000017f4  08000048	j	L16_LF2
  795  000017f8  54000000	nop; delay slot nop
  796  000017fc          	L18_LF2:
  797  000017fc  8fc10000	lw	r1,(r30)
  798  00001800  20220001	addi	r2,r1,#1
  799  00001804  afc20000	sw	(r30),r2
  800  00001808  8fc20004	lw	r2,4(r30)
  801  0000180c  20430001	addi	r3,r2,#1
  802  00001810  afc30004	sw	4(r30),r3
  803  00001814  80420000	lb	r2,(r2)
  804  00001818  a0220000	sb	(r1),r2
  805  0000181c  a3c2fff3	sb	-13(r30),r2
  806  00001820          	L17_LF2:
  807  00001820  93c1fff3	lbu	r1,-13(r30)
  808  00001824  64220000	snei	r2,r1,#0
  809  00001828  1440000c	bnez	r2,L19_LF2
  810  0000182c  54000000	nop; delay slot nop
  811  00001830  0800000c	j	L16_LF2
  812  00001834  54000000	nop; delay slot nop
  813  00001838          	L19_LF2:
  814  00001838  0bffffa0	j	L15_LF2
  815  0000183c  54000000	nop; delay slot nop
  816  00001840          	L16_LF2:
  817  00001840  8fc1fff4	lw	r1,-12(r30)
  818  00001844  08000004	j	L14_LF2
  819  00001848  54000000	nop; delay slot nop
  820  0000184c          	L14_LF2:
  821  0000184c  8fa20000	lw	r2,0(r29)
  822  00001850  8fa30004	lw	r3,4(r29)
  823  00001854  8fdffff8	lw	r31,-8(r30)
  824  00001858  001ee820	add	r29,r0,r30
  825  0000185c  8fdefffc	lw	r30,-4(r30)
  826  00001860  4be00000	jr	r31
  827  00001864  54000000	nop
  828  00001868          	.endproc _dstrncpy
  829  00001868          	.align 2
  830  00001868          	.proc _dstrcat
  831  00001868          	.global _dstrcat
  832  00001868          	_dstrcat:
  833                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  834  00001868  afbefffc	sw	-4(r29),r30; push fp
  835  0000186c  001df020	add	r30,r0,r29; fp = sp
  836  00001870  afbffff8	sw	-8(r29),r31; push ret addr
  837  00001874  2fbd0018	subui	r29,r29,#24; alloc local storage
  838  00001878  afa20000	sw	0(r29),r2
  839  0000187c  8fc10000	lw	r1,(r30)
  840  00001880  afc1fff4	sw	-12(r30),r1
  841  00001884          	L21_LF2:
  842  00001884  8fc10000	lw	r1,(r30)
  843  00001888  90220000	lbu	r2,(r1)
  844  0000188c  64410000	snei	r1,r2,#0
  845  00001890  1420000c	bnez	r1,L23_LF2
  846  00001894  54000000	nop; delay slot nop
  847  00001898  0800001c	j	L22_LF2
  848  0000189c  54000000	nop; delay slot nop
  849  000018a0          	L23_LF2:
  850  000018a0  8fc20000	lw	r2,(r30)
  851  000018a4  20410001	addi	r1,r2,#1
  852  000018a8  00011020	add	r2,r0,r1
  853  000018ac  afc20000	sw	(r30),r2
  854  000018b0  0bffffd0	j	L21_LF2
  855  000018b4  54000000	nop; delay slot nop
  856  000018b8          	L22_LF2:
  857  000018b8  23bdfff8	addi	r29,r29,#-8
  858  000018bc  001d0820	add	r1,r0,r29
  859  000018c0  8fc20000	lw	r2,(r30)
  860  000018c4  ac220000	sw	(r1),r2
  861  000018c8  8fc20004	lw	r2,4(r30)
  862  000018cc  ac220004	sw	4(r1),r2
  863  000018d0  0ffffe5c	jal	_dstrcpy
  864  000018d4  54000000	nop; delay slot nop
  865  000018d8  23bd0008	addi	r29,r29,#8
  866  000018dc  8fc1fff4	lw	r1,-12(r30)
  867  000018e0  08000004	j	L20_LF2
  868  000018e4  54000000	nop; delay slot nop
  869  000018e8          	L20_LF2:
  870  000018e8  8fa20000	lw	r2,0(r29)
  871  000018ec  8fdffff8	lw	r31,-8(r30)
  872  000018f0  001ee820	add	r29,r0,r30
  873  000018f4  8fdefffc	lw	r30,-4(r30)
  874  000018f8  4be00000	jr	r31
  875  000018fc  54000000	nop
  876  00001900          	.endproc _dstrcat
  877  00001900          	.align 2
  878  00001900          	.proc _dstrncmp
  879  00001900          	.global _dstrncmp
  880  00001900          	_dstrncmp:
  881                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  882  00001900  afbefffc	sw	-4(r29),r30; push fp
  883  00001904  001df020	add	r30,r0,r29; fp = sp
  884  00001908  afbffff8	sw	-8(r29),r31; push ret addr
  885  0000190c  2fbd0018	subui	r29,r29,#24; alloc local storage
  886  00001910  afa20000	sw	0(r29),r2
  887  00001914  afa30004	sw	4(r29),r3
  888  00001918  54000000	nop
  889  0000191c  20010000	addi	r1,r0,#0
  890  00001920  afc1fff4	sw	-12(r30),r1
  891  00001924          	L25_LF2:
  892  00001924  8fc1fff4	lw	r1,-12(r30)
  893  00001928  8fc20008	lw	r2,8(r30)
  894  0000192c  0022082a	slt	r1,r1,r2
  895  00001930  1420000c	bnez	r1,L28_LF2
  896  00001934  54000000	nop; delay slot nop
  897  00001938  08000088	j	L26_LF2
  898  0000193c  54000000	nop; delay slot nop
  899  00001940          	L28_LF2:
  900  00001940  8fc10004	lw	r1,4(r30)
  901  00001944  90220000	lbu	r2,(r1)
  902  00001948  64410000	snei	r1,r2,#0
  903  0000194c  14200018	bnez	r1,L29_LF2
  904  00001950  54000000	nop; delay slot nop
  905  00001954  20010000	addi	r1,r0,#0
  906  00001958  080000d8	j	L24_LF2
  907  0000195c  54000000	nop; delay slot nop
  908  00001960  08000028	j	L30_LF2
  909  00001964  54000000	nop; delay slot nop
  910  00001968          	L29_LF2:
  911  00001968  8fc10000	lw	r1,(r30)
  912  0000196c  8fc20004	lw	r2,4(r30)
  913  00001970  90210000	lbu	r1,(r1)
  914  00001974  90420000	lbu	r2,(r2)
  915  00001978  00220829	sne	r1,r1,r2
  916  0000197c  1020000c	beqz	r1,L30_LF2
  917  00001980  54000000	nop; delay slot nop
  918  00001984  0800003c	j	L26_LF2
  919  00001988  54000000	nop; delay slot nop
  920  0000198c          	L31_LF2:
  921  0000198c          	L30_LF2:
  922  0000198c  8fc20000	lw	r2,(r30)
  923  00001990  20410001	addi	r1,r2,#1
  924  00001994  00011020	add	r2,r0,r1
  925  00001998  afc20000	sw	(r30),r2
  926  0000199c  8fc20004	lw	r2,4(r30)
  927  000019a0  20410001	addi	r1,r2,#1
  928  000019a4  00011020	add	r2,r0,r1
  929  000019a8  afc20004	sw	4(r30),r2
  930  000019ac          	L27_LF2:
  931  000019ac  8fc2fff4	lw	r2,-12(r30)
  932  000019b0  20410001	addi	r1,r2,#1
  933  000019b4  00011020	add	r2,r0,r1
  934  000019b8  afc2fff4	sw	-12(r30),r2
  935  000019bc  0bffff64	j	L25_LF2
  936  000019c0  54000000	nop; delay slot nop
  937  000019c4          	L26_LF2:
  938  000019c4  8fc1fff4	lw	r1,-12(r30)
  939  000019c8  8fc20008	lw	r2,8(r30)
  940  000019cc  00220828	seq	r1,r1,r2
  941  000019d0  10200018	beqz	r1,L32_LF2
  942  000019d4  54000000	nop; delay slot nop
  943  000019d8  20010000	addi	r1,r0,#0
  944  000019dc  08000054	j	L24_LF2
  945  000019e0  54000000	nop; delay slot nop
  946  000019e4  0800004c	j	L33_LF2
  947  000019e8  54000000	nop; delay slot nop
  948  000019ec          	L32_LF2:
  949  000019ec  8fc20000	lw	r2,(r30)
  950  000019f0  90410000	lbu	r1,(r2)
  951  000019f4  8fc20004	lw	r2,4(r30)
  952  000019f8  90430000	lbu	r3,(r2)
  953  000019fc  00230822	sub	r1,r1,r3
  954  00001a00  74220000	sgei	r2,r1,#0
  955  00001a04  10400020	beqz	r2,L34_LF2
  956  00001a08  54000000	nop; delay slot nop
  957  00001a0c  8fc10000	lw	r1,(r30)
  958  00001a10  8fc20004	lw	r2,4(r30)
  959  00001a14  90210000	lbu	r1,(r1)
  960  00001a18  90420000	lbu	r2,(r2)
  961  00001a1c  00220829	sne	r1,r1,r2
  962  00001a20  08000008	j	L35_LF2
  963  00001a24  54000000	nop; delay slot nop
  964  00001a28          	L34_LF2:
  965  00001a28  2001ffff	addi	r1,r0,#-1
  966  00001a2c          	L35_LF2:
  967  00001a2c  08000004	j	L24_LF2
  968  00001a30  54000000	nop; delay slot nop
  969  00001a34          	L33_LF2:
  970  00001a34          	L24_LF2:
  971  00001a34  8fa20000	lw	r2,0(r29)
  972  00001a38  8fa30004	lw	r3,4(r29)
  973  00001a3c  8fdffff8	lw	r31,-8(r30)
  974  00001a40  001ee820	add	r29,r0,r30
  975  00001a44  8fdefffc	lw	r30,-4(r30)
  976  00001a48  4be00000	jr	r31
  977  00001a4c  54000000	nop
  978  00001a50          	.endproc _dstrncmp
  979  00001a50          	.align 2
  980  00001a50          	.proc _dstrlen
  981  00001a50          	.global _dstrlen
  982  00001a50          	_dstrlen:
  983                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  984  00001a50  afbefffc	sw	-4(r29),r30; push fp
  985  00001a54  001df020	add	r30,r0,r29; fp = sp
  986  00001a58  afbffff8	sw	-8(r29),r31; push ret addr
  987  00001a5c  2fbd0018	subui	r29,r29,#24; alloc local storage
  988  00001a60  afa20000	sw	0(r29),r2
  989  00001a64  20010000	addi	r1,r0,#0
  990  00001a68  afc1fff4	sw	-12(r30),r1
  991  00001a6c          	L37_LF2:
  992  00001a6c  8fc10000	lw	r1,(r30)
  993  00001a70  20220001	addi	r2,r1,#1
  994  00001a74  afc20000	sw	(r30),r2
  995  00001a78  90210000	lbu	r1,(r1)
  996  00001a7c  64220000	snei	r2,r1,#0
  997  00001a80  1440000c	bnez	r2,L39_LF2
  998  00001a84  54000000	nop; delay slot nop
  999  00001a88  0800001c	j	L38_LF2
 1000  00001a8c  54000000	nop; delay slot nop
 1001  00001a90          	L39_LF2:
 1002  00001a90  8fc2fff4	lw	r2,-12(r30)
 1003  00001a94  20410001	addi	r1,r2,#1
 1004  00001a98  00011020	add	r2,r0,r1
 1005  00001a9c  afc2fff4	sw	-12(r30),r2
 1006  00001aa0  0bffffc8	j	L37_LF2
 1007  00001aa4  54000000	nop; delay slot nop
 1008  00001aa8          	L38_LF2:
 1009  00001aa8  8fc1fff4	lw	r1,-12(r30)
 1010  00001aac  08000004	j	L36_LF2
 1011  00001ab0  54000000	nop; delay slot nop
 1012  00001ab4          	L36_LF2:
 1013  00001ab4  8fa20000	lw	r2,0(r29)
 1014  00001ab8  8fdffff8	lw	r31,-8(r30)
 1015  00001abc  001ee820	add	r29,r0,r30
 1016  00001ac0  8fdefffc	lw	r30,-4(r30)
 1017  00001ac4  4be00000	jr	r31
 1018  00001ac8  54000000	nop
 1019  00001acc          	.endproc _dstrlen
 1020  00001acc          	.align 2
 1021  00001acc          	.proc _dstrstr
 1022  00001acc          	.global _dstrstr
 1023  00001acc          	_dstrstr:
 1024                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
 1025  00001acc  afbefffc	sw	-4(r29),r30; push fp
 1026  00001ad0  001df020	add	r30,r0,r29; fp = sp
 1027  00001ad4  afbffff8	sw	-8(r29),r31; push ret addr
 1028  00001ad8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1029  00001adc  afa20000	sw	0(r29),r2
 1030  00001ae0  23bdfff8	addi	r29,r29,#-8
 1031  00001ae4  001d0820	add	r1,r0,r29
 1032  00001ae8  8fc20004	lw	r2,4(r30)
 1033  00001aec  ac220000	sw	(r1),r2
 1034  00001af0  0fffff5c	jal	_dstrlen
 1035  00001af4  54000000	nop; delay slot nop
 1036  00001af8  23bd0008	addi	r29,r29,#8
 1037  00001afc  afc1fff4	sw	-12(r30),r1
 1038  00001b00          	L41_LF2:
 1039  00001b00  8fc10000	lw	r1,(r30)
 1040  00001b04  90220000	lbu	r2,(r1)
 1041  00001b08  64410000	snei	r1,r2,#0
 1042  00001b0c  1420000c	bnez	r1,L43_LF2
 1043  00001b10  54000000	nop; delay slot nop
 1044  00001b14  08000060	j	L42_LF2
 1045  00001b18  54000000	nop; delay slot nop
 1046  00001b1c          	L43_LF2:
 1047  00001b1c  23bdfff0	addi	r29,r29,#-16
 1048  00001b20  001d0820	add	r1,r0,r29
 1049  00001b24  8fc20000	lw	r2,(r30)
 1050  00001b28  ac220000	sw	(r1),r2
 1051  00001b2c  8fc20004	lw	r2,4(r30)
 1052  00001b30  ac220004	sw	4(r1),r2
 1053  00001b34  8fc2fff4	lw	r2,-12(r30)
 1054  00001b38  ac220008	sw	8(r1),r2
 1055  00001b3c  0ffffdc0	jal	_dstrncmp
 1056  00001b40  54000000	nop; delay slot nop
 1057  00001b44  23bd0010	addi	r29,r29,#16
 1058  00001b48  64220000	snei	r2,r1,#0
 1059  00001b4c  14400010	bnez	r2,L44_LF2
 1060  00001b50  54000000	nop; delay slot nop
 1061  00001b54  8fc10000	lw	r1,(r30)
 1062  00001b58  08000028	j	L40_LF2
 1063  00001b5c  54000000	nop; delay slot nop
 1064  00001b60          	L44_LF2:
 1065  00001b60  8fc20000	lw	r2,(r30)
 1066  00001b64  20410001	addi	r1,r2,#1
 1067  00001b68  00011020	add	r2,r0,r1
 1068  00001b6c  afc20000	sw	(r30),r2
 1069  00001b70  0bffff8c	j	L41_LF2
 1070  00001b74  54000000	nop; delay slot nop
 1071  00001b78          	L42_LF2:
 1072  00001b78  20010000	addi	r1,r0,#0
 1073  00001b7c  08000004	j	L40_LF2
 1074  00001b80  54000000	nop; delay slot nop
 1075  00001b84          	L40_LF2:
 1076  00001b84  8fa20000	lw	r2,0(r29)
 1077  00001b88  8fdffff8	lw	r31,-8(r30)
 1078  00001b8c  001ee820	add	r29,r0,r30
 1079  00001b90  8fdefffc	lw	r30,-4(r30)
 1080  00001b94  4be00000	jr	r31
 1081  00001b98  54000000	nop
 1082  00001b9c          	.endproc _dstrstr
 1083  00001b9c          	.align 2
 1084  00001b9c          	.proc _dmindex
 1085  00001b9c          	.global _dmindex
 1086  00001b9c          	_dmindex:
 1087                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1088  00001b9c  afbefffc	sw	-4(r29),r30; push fp
 1089  00001ba0  001df020	add	r30,r0,r29; fp = sp
 1090  00001ba4  afbffff8	sw	-8(r29),r31; push ret addr
 1091  00001ba8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1092  00001bac  afa20000	sw	0(r29),r2
 1093  00001bb0  54000000	nop
 1094  00001bb4          	L46_LF2:
 1095  00001bb4  8fc10000	lw	r1,(r30)
 1096  00001bb8  90220000	lbu	r2,(r1)
 1097  00001bbc  64410000	snei	r1,r2,#0
 1098  00001bc0  1420000c	bnez	r1,L48_LF2
 1099  00001bc4  54000000	nop; delay slot nop
 1100  00001bc8  08000070	j	L47_LF2
 1101  00001bcc  54000000	nop; delay slot nop
 1102  00001bd0          	L48_LF2:
 1103  00001bd0  8fc10004	lw	r1,4(r30)
 1104  00001bd4  afc1fff4	sw	-12(r30),r1
 1105  00001bd8          	L49_LF2:
 1106  00001bd8  8fc1fff4	lw	r1,-12(r30)
 1107  00001bdc  90220000	lbu	r2,(r1)
 1108  00001be0  64410000	snei	r1,r2,#0
 1109  00001be4  1420000c	bnez	r1,L52_LF2
 1110  00001be8  54000000	nop; delay slot nop
 1111  00001bec  08000044	j	L50_LF2
 1112  00001bf0  54000000	nop; delay slot nop
 1113  00001bf4          	L52_LF2:
 1114  00001bf4  8fc10000	lw	r1,(r30)
 1115  00001bf8  8fc2fff4	lw	r2,-12(r30)
 1116  00001bfc  90210000	lbu	r1,(r1)
 1117  00001c00  90420000	lbu	r2,(r2)
 1118  00001c04  00220828	seq	r1,r1,r2
 1119  00001c08  10200010	beqz	r1,L51_LF2
 1120  00001c0c  54000000	nop; delay slot nop
 1121  00001c10  8fc10000	lw	r1,(r30)
 1122  00001c14  08000030	j	L45_LF2
 1123  00001c18  54000000	nop; delay slot nop
 1124  00001c1c          	L53_LF2:
 1125  00001c1c          	L51_LF2:
 1126  00001c1c  8fc2fff4	lw	r2,-12(r30)
 1127  00001c20  20410001	addi	r1,r2,#1
 1128  00001c24  00011020	add	r2,r0,r1
 1129  00001c28  afc2fff4	sw	-12(r30),r2
 1130  00001c2c  0bffffa8	j	L49_LF2
 1131  00001c30  54000000	nop; delay slot nop
 1132  00001c34          	L50_LF2:
 1133  00001c34  0bffff7c	j	L46_LF2
 1134  00001c38  54000000	nop; delay slot nop
 1135  00001c3c          	L47_LF2:
 1136  00001c3c  20010000	addi	r1,r0,#0
 1137  00001c40  08000004	j	L45_LF2
 1138  00001c44  54000000	nop; delay slot nop
 1139  00001c48          	L45_LF2:
 1140  00001c48  8fa20000	lw	r2,0(r29)
 1141  00001c4c  8fdffff8	lw	r31,-8(r30)
 1142  00001c50  001ee820	add	r29,r0,r30
 1143  00001c54  8fdefffc	lw	r30,-4(r30)
 1144  00001c58  4be00000	jr	r31
 1145  00001c5c  54000000	nop
 1146  00001c60          	.endproc _dmindex
 1147  00001c60          	.align 2
 1148  00001c60          	.proc _dindex
 1149  00001c60          	.global _dindex
 1150  00001c60          	_dindex:
 1151                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1152  00001c60  afbefffc	sw	-4(r29),r30; push fp
 1153  00001c64  001df020	add	r30,r0,r29; fp = sp
 1154  00001c68  afbffff8	sw	-8(r29),r31; push ret addr
 1155  00001c6c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1156  00001c70  afa20000	sw	0(r29),r2
 1157  00001c74  54000000	nop
 1158  00001c78          	L55_LF2:
 1159  00001c78  8fc10000	lw	r1,(r30)
 1160  00001c7c  90220000	lbu	r2,(r1)
 1161  00001c80  64410000	snei	r1,r2,#0
 1162  00001c84  1420000c	bnez	r1,L57_LF2
 1163  00001c88  54000000	nop; delay slot nop
 1164  00001c8c  08000040	j	L56_LF2
 1165  00001c90  54000000	nop; delay slot nop
 1166  00001c94          	L57_LF2:
 1167  00001c94  8fc10000	lw	r1,(r30)
 1168  00001c98  90220000	lbu	r2,(r1)
 1169  00001c9c  8fc10004	lw	r1,4(r30)
 1170  00001ca0  00411028	seq	r2,r2,r1
 1171  00001ca4  10400010	beqz	r2,L58_LF2
 1172  00001ca8  54000000	nop; delay slot nop
 1173  00001cac  8fc10000	lw	r1,(r30)
 1174  00001cb0  08000028	j	L54_LF2
 1175  00001cb4  54000000	nop; delay slot nop
 1176  00001cb8          	L58_LF2:
 1177  00001cb8  8fc20000	lw	r2,(r30)
 1178  00001cbc  20410001	addi	r1,r2,#1
 1179  00001cc0  00011020	add	r2,r0,r1
 1180  00001cc4  afc20000	sw	(r30),r2
 1181  00001cc8  0bffffac	j	L55_LF2
 1182  00001ccc  54000000	nop; delay slot nop
 1183  00001cd0          	L56_LF2:
 1184  00001cd0  20010000	addi	r1,r0,#0
 1185  00001cd4  08000004	j	L54_LF2
 1186  00001cd8  54000000	nop; delay slot nop
 1187  00001cdc          	L54_LF2:
 1188  00001cdc  8fa20000	lw	r2,0(r29)
 1189  00001ce0  8fdffff8	lw	r31,-8(r30)
 1190  00001ce4  001ee820	add	r29,r0,r30
 1191  00001ce8  8fdefffc	lw	r30,-4(r30)
 1192  00001cec  4be00000	jr	r31
 1193  00001cf0  54000000	nop
 1194  00001cf4          	.endproc _dindex
 1195  00001cf4          	.align 2
 1196  00001cf4          	.proc _ditoa
 1197  00001cf4          	.global _ditoa
 1198  00001cf4          	_ditoa:
 1199                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1200  00001cf4  afbefffc	sw	-4(r29),r30; push fp
 1201  00001cf8  001df020	add	r30,r0,r29; fp = sp
 1202  00001cfc  afbffff8	sw	-8(r29),r31; push ret addr
 1203  00001d00  2fbd0018	subui	r29,r29,#24; alloc local storage
 1204  00001d04  afa20000	sw	0(r29),r2
 1205  00001d08  afa30004	sw	4(r29),r3
 1206  00001d0c  8fc10000	lw	r1,(r30)
 1207  00001d10  68220000	slti	r2,r1,#0
 1208  00001d14  1040002c	beqz	r2,L60_LF2
 1209  00001d18  54000000	nop; delay slot nop
 1210  00001d1c  8fc10004	lw	r1,4(r30)
 1211  00001d20  20220001	addi	r2,r1,#1
 1212  00001d24  afc20004	sw	4(r30),r2
 1213  00001d28  2002002d	addi	r2,r0,(#0x2d)&0xff
 1214  00001d2c  a0220000	sb	(r1),r2
 1215  00001d30  8fc10000	lw	r1,(r30)
 1216  00001d34  00011022	sub	r2,r0,r1
 1217  00001d38  afc20000	sw	(r30),r2
 1218  00001d3c  08000118	j	L61_LF2
 1219  00001d40  54000000	nop; delay slot nop
 1220  00001d44          	L60_LF2:
 1221  00001d44  8fc10000	lw	r1,(r30)
 1222  00001d48  64220000	snei	r2,r1,#0
 1223  00001d4c  14400020	bnez	r2,L62_LF2
 1224  00001d50  54000000	nop; delay slot nop
 1225  00001d54  8fc10004	lw	r1,4(r30)
 1226  00001d58  20220001	addi	r2,r1,#1
 1227  00001d5c  afc20004	sw	4(r30),r2
 1228  00001d60  20020030	addi	r2,r0,(#0x30)&0xff
 1229  00001d64  a0220000	sb	(r1),r2
 1230  00001d68  080000ec	j	L61_LF2
 1231  00001d6c  54000000	nop; delay slot nop
 1232  00001d70          	L62_LF2:
 1233  00001d70  20010001	addi	r1,r0,#1
 1234  00001d74  afc1fff4	sw	-12(r30),r1
 1235  00001d78          	L64_LF2:
 1236  00001d78  8fc1fff4	lw	r1,-12(r30)
 1237  00001d7c  8fc20000	lw	r2,(r30)
 1238  00001d80  0022082c	sle	r1,r1,r2
 1239  00001d84  1420000c	bnez	r1,L66_LF2
 1240  00001d88  54000000	nop; delay slot nop
 1241  00001d8c  08000024	j	L65_LF2
 1242  00001d90  54000000	nop; delay slot nop
 1243  00001d94          	L67_LF2:
 1244  00001d94          	L66_LF2:
 1245  00001d94  8fc1fff4	lw	r1,-12(r30)
 1246  00001d98  00011820	add	r3,r0,r1
 1247  00001d9c  50620002	slli	r2,r3,#0x2
 1248  00001da0  00411020	add	r2,r2,r1
 1249  00001da4  50410001	slli	r1,r2,#0x1
 1250  00001da8  afc1fff4	sw	-12(r30),r1
 1251  00001dac  0bffffc8	j	L64_LF2
 1252  00001db0  54000000	nop; delay slot nop
 1253  00001db4          	L65_LF2:
 1254  00001db4  54000000	nop
 1255  00001db8          	L68_LF2:
 1256  00001db8  8fc1fff4	lw	r1,-12(r30)
 1257  00001dbc  2002000a	addi	r2,r0,#10
 1258  00001dc0  00200035	movi2fp	f0,r1
 1259  00001dc4  00400835	movi2fp	f1,r2
 1260  00001dc8  0401000f	div	f0,f0,f1
 1261  00001dcc  00000834	movfp2i	r1,f0
 1262  00001dd0  afc1fff4	sw	-12(r30),r1
 1263  00001dd4  8fc10004	lw	r1,4(r30)
 1264  00001dd8  20220001	addi	r2,r1,#1
 1265  00001ddc  afc20004	sw	4(r30),r2
 1266  00001de0  8fc20000	lw	r2,(r30)
 1267  00001de4  8fc3fff4	lw	r3,-12(r30)
 1268  00001de8  00400035	movi2fp	f0,r2
 1269  00001dec  00600835	movi2fp	f1,r3
 1270  00001df0  0401000f	div	f0,f0,f1
 1271  00001df4  00001034	movfp2i	r2,f0
 1272  00001df8  00021820	add	r3,r0,r2
 1273  00001dfc  20620030	addi	r2,r3,#48
 1274  00001e00  a0220000	sb	(r1),r2
 1275  00001e04  8fc10000	lw	r1,(r30)
 1276  00001e08  8fc3fff4	lw	r3,-12(r30)
 1277  00001e0c  00200035	movi2fp	f0,r1
 1278  00001e10  00600835	movi2fp	f1,r3
 1279  00001e14  0401000f	div	f0,f0,f1
 1280  00001e18  00001034	movfp2i	r2,f0
 1281  00001e1c  8fc3fff4	lw	r3,-12(r30)
 1282  00001e20  00400035	movi2fp	f0,r2
 1283  00001e24  00600835	movi2fp	f1,r3
 1284  00001e28  0401000e	mult	f0,f0,f1
 1285  00001e2c  00001034	movfp2i	r2,f0
 1286  00001e30  00220822	sub	r1,r1,r2
 1287  00001e34  afc10000	sw	(r30),r1
 1288  00001e38          	L70_LF2:
 1289  00001e38  8fc1fff4	lw	r1,-12(r30)
 1290  00001e3c  6c220001	sgti	r2,r1,#1
 1291  00001e40  1440000c	bnez	r2,L71_LF2
 1292  00001e44  54000000	nop; delay slot nop
 1293  00001e48  0800000c	j	L61_LF2
 1294  00001e4c  54000000	nop; delay slot nop
 1295  00001e50          	L71_LF2:
 1296  00001e50  0bffff64	j	L68_LF2
 1297  00001e54  54000000	nop; delay slot nop
 1298  00001e58          	L69_LF2:
 1299  00001e58          	L63_LF2:
 1300  00001e58          	L61_LF2:
 1301  00001e58  8fc10004	lw	r1,4(r30)
 1302  00001e5c  20020000	addi	r2,r0,(#0x0)&0xff
 1303  00001e60  a0220000	sb	(r1),r2
 1304  00001e64          	L59_LF2:
 1305  00001e64  8fa20000	lw	r2,0(r29)
 1306  00001e68  8fa30004	lw	r3,4(r29)
 1307  00001e6c  8fdffff8	lw	r31,-8(r30)
 1308  00001e70  001ee820	add	r29,r0,r30
 1309  00001e74  8fdefffc	lw	r30,-4(r30)
 1310  00001e78  4be00000	jr	r31
 1311  00001e7c  54000000	nop
 1312  00001e80          	.endproc _ditoa
 1313  00001e80          	.align 2
 1314  00001e80          	.proc _dstrtol
 1315  00001e80          	.global _dstrtol
 1316  00001e80          	_dstrtol:
 1317                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1318  00001e80  afbefffc	sw	-4(r29),r30; push fp
 1319  00001e84  001df020	add	r30,r0,r29; fp = sp
 1320  00001e88  afbffff8	sw	-8(r29),r31; push ret addr
 1321  00001e8c  2fbd0020	subui	r29,r29,#32; alloc local storage
 1322  00001e90  afa20000	sw	0(r29),r2
 1323  00001e94  20010000	addi	r1,r0,#0
 1324  00001e98  afc1fff4	sw	-12(r30),r1
 1325  00001e9c          	L73_LF2:
 1326  00001e9c  8fc10000	lw	r1,(r30)
 1327  00001ea0  90220000	lbu	r2,(r1)
 1328  00001ea4  60410020	seqi	r1,r2,#32
 1329  00001ea8  14200034	bnez	r1,L75_LF2
 1330  00001eac  54000000	nop; delay slot nop
 1331  00001eb0  8fc10000	lw	r1,(r30)
 1332  00001eb4  90220000	lbu	r2,(r1)
 1333  00001eb8  60410009	seqi	r1,r2,#9
 1334  00001ebc  14200020	bnez	r1,L75_LF2
 1335  00001ec0  54000000	nop; delay slot nop
 1336  00001ec4  8fc10000	lw	r1,(r30)
 1337  00001ec8  90220000	lbu	r2,(r1)
 1338  00001ecc  6041000a	seqi	r1,r2,#10
 1339  00001ed0  1420000c	bnez	r1,L75_LF2
 1340  00001ed4  54000000	nop; delay slot nop
 1341  00001ed8  0800001c	j	L74_LF2
 1342  00001edc  54000000	nop; delay slot nop
 1343  00001ee0          	L75_LF2:
 1344  00001ee0  8fc20000	lw	r2,(r30)
 1345  00001ee4  20410001	addi	r1,r2,#1
 1346  00001ee8  00011020	add	r2,r0,r1
 1347  00001eec  afc20000	sw	(r30),r2
 1348  00001ef0  0bffffa8	j	L73_LF2
 1349  00001ef4  54000000	nop; delay slot nop
 1350  00001ef8          	L74_LF2:
 1351  00001ef8  8fc10004	lw	r1,4(r30)
 1352  00001efc  64220000	snei	r2,r1,#0
 1353  00001f00  10400010	beqz	r2,L76_LF2
 1354  00001f04  54000000	nop; delay slot nop
 1355  00001f08  8fc10004	lw	r1,4(r30)
 1356  00001f0c  8fc20000	lw	r2,(r30)
 1357  00001f10  ac220000	sw	(r1),r2
 1358  00001f14          	L76_LF2:
 1359  00001f14  8fc10000	lw	r1,(r30)
 1360  00001f18  90220000	lbu	r2,(r1)
 1361  00001f1c  64410000	snei	r1,r2,#0
 1362  00001f20  14200010	bnez	r1,L77_LF2
 1363  00001f24  54000000	nop; delay slot nop
 1364  00001f28  8fc1fff4	lw	r1,-12(r30)
 1365  00001f2c  08000294	j	L72_LF2
 1366  00001f30  54000000	nop; delay slot nop
 1367  00001f34          	L77_LF2:
 1368  00001f34  8fc10000	lw	r1,(r30)
 1369  00001f38  90220000	lbu	r2,(r1)
 1370  00001f3c  6041002d	seqi	r1,r2,#45
 1371  00001f40  10200024	beqz	r1,L78_LF2
 1372  00001f44  54000000	nop; delay slot nop
 1373  00001f48  2001ffff	addi	r1,r0,#-1
 1374  00001f4c  afc1ffec	sw	-20(r30),r1
 1375  00001f50  8fc20000	lw	r2,(r30)
 1376  00001f54  20410001	addi	r1,r2,#1
 1377  00001f58  00011020	add	r2,r0,r1
 1378  00001f5c  afc20000	sw	(r30),r2
 1379  00001f60  0800000c	j	L79_LF2
 1380  00001f64  54000000	nop; delay slot nop
 1381  00001f68          	L78_LF2:
 1382  00001f68  20010001	addi	r1,r0,#1
 1383  00001f6c  afc1ffec	sw	-20(r30),r1
 1384  00001f70          	L79_LF2:
 1385  00001f70  8fc10008	lw	r1,8(r30)
 1386  00001f74  64220000	snei	r2,r1,#0
 1387  00001f78  14400090	bnez	r2,L80_LF2
 1388  00001f7c  54000000	nop; delay slot nop
 1389  00001f80  8fc10000	lw	r1,(r30)
 1390  00001f84  90220000	lbu	r2,(r1)
 1391  00001f88  60410030	seqi	r1,r2,#48
 1392  00001f8c  10200074	beqz	r1,L81_LF2
 1393  00001f90  54000000	nop; delay slot nop
 1394  00001f94  8fc20000	lw	r2,(r30)
 1395  00001f98  20410001	addi	r1,r2,#1
 1396  00001f9c  00011020	add	r2,r0,r1
 1397  00001fa0  afc20000	sw	(r30),r2
 1398  00001fa4  8fc10000	lw	r1,(r30)
 1399  00001fa8  90220000	lbu	r2,(r1)
 1400  00001fac  60410078	seqi	r1,r2,#120
 1401  00001fb0  14200020	bnez	r1,L83_LF2
 1402  00001fb4  54000000	nop; delay slot nop
 1403  00001fb8  8fc10000	lw	r1,(r30)
 1404  00001fbc  90220000	lbu	r2,(r1)
 1405  00001fc0  60410058	seqi	r1,r2,#88
 1406  00001fc4  1420000c	bnez	r1,L83_LF2
 1407  00001fc8  54000000	nop; delay slot nop
 1408  00001fcc  08000024	j	L82_LF2
 1409  00001fd0  54000000	nop; delay slot nop
 1410  00001fd4          	L83_LF2:
 1411  00001fd4  20010010	addi	r1,r0,#16
 1412  00001fd8  afc10008	sw	8(r30),r1
 1413  00001fdc  8fc20000	lw	r2,(r30)
 1414  00001fe0  20410001	addi	r1,r2,#1
 1415  00001fe4  00011020	add	r2,r0,r1
 1416  00001fe8  afc20000	sw	(r30),r2
 1417  00001fec  0800000c	j	L84_LF2
 1418  00001ff0  54000000	nop; delay slot nop
 1419  00001ff4          	L82_LF2:
 1420  00001ff4  20010008	addi	r1,r0,#8
 1421  00001ff8  afc10008	sw	8(r30),r1
 1422  00001ffc          	L84_LF2:
 1423  00001ffc  0800000c	j	L80_LF2
 1424  00002000  54000000	nop; delay slot nop
 1425  00002004          	L81_LF2:
 1426  00002004  2001000a	addi	r1,r0,#10
 1427  00002008  afc10008	sw	8(r30),r1
 1428  0000200c          	L85_LF2:
 1429  0000200c          	L80_LF2:
 1430  0000200c  8fc10008	lw	r1,8(r30)
 1431  00002010  70220000	slei	r2,r1,#0
 1432  00002014  1440001c	bnez	r2,L87_LF2
 1433  00002018  54000000	nop; delay slot nop
 1434  0000201c  8fc10008	lw	r1,8(r30)
 1435  00002020  6c220010	sgti	r2,r1,#16
 1436  00002024  1440000c	bnez	r2,L87_LF2
 1437  00002028  54000000	nop; delay slot nop
 1438  0000202c  08000010	j	L86_LF2
 1439  00002030  54000000	nop; delay slot nop
 1440  00002034          	L87_LF2:
 1441  00002034  8fc1fff4	lw	r1,-12(r30)
 1442  00002038  08000188	j	L72_LF2
 1443  0000203c  54000000	nop; delay slot nop
 1444  00002040          	L86_LF2:
 1445  00002040  54000000	nop
 1446  00002044          	L88_LF2:
 1447  00002044  8fc10000	lw	r1,(r30)
 1448  00002048  90220000	lbu	r2,(r1)
 1449  0000204c  6c41002f	sgtui	r1,r2,#47
 1450  00002050  10200030	beqz	r1,L91_LF2
 1451  00002054  54000000	nop; delay slot nop
 1452  00002058  8fc10000	lw	r1,(r30)
 1453  0000205c  90220000	lbu	r2,(r1)
 1454  00002060  70410039	sleui	r1,r2,#57
 1455  00002064  1020001c	beqz	r1,L91_LF2
 1456  00002068  54000000	nop; delay slot nop
 1457  0000206c  8fc10000	lw	r1,(r30)
 1458  00002070  90220000	lbu	r2,(r1)
 1459  00002074  2041ffd0	addi	r1,r2,#-48
 1460  00002078  afc1fff0	sw	-16(r30),r1
 1461  0000207c  0800008c	j	L92_LF2
 1462  00002080  54000000	nop; delay slot nop
 1463  00002084          	L91_LF2:
 1464  00002084  8fc10000	lw	r1,(r30)
 1465  00002088  90220000	lbu	r2,(r1)
 1466  0000208c  6c410060	sgtui	r1,r2,#96
 1467  00002090  10200030	beqz	r1,L93_LF2
 1468  00002094  54000000	nop; delay slot nop
 1469  00002098  8fc10000	lw	r1,(r30)
 1470  0000209c  90220000	lbu	r2,(r1)
 1471  000020a0  7041007a	sleui	r1,r2,#122
 1472  000020a4  1020001c	beqz	r1,L93_LF2
 1473  000020a8  54000000	nop; delay slot nop
 1474  000020ac  8fc10000	lw	r1,(r30)
 1475  000020b0  90220000	lbu	r2,(r1)
 1476  000020b4  2041ffa9	addi	r1,r2,#-87
 1477  000020b8  afc1fff0	sw	-16(r30),r1
 1478  000020bc  0800004c	j	L92_LF2
 1479  000020c0  54000000	nop; delay slot nop
 1480  000020c4          	L93_LF2:
 1481  000020c4  8fc10000	lw	r1,(r30)
 1482  000020c8  90220000	lbu	r2,(r1)
 1483  000020cc  6c410040	sgtui	r1,r2,#64
 1484  000020d0  10200030	beqz	r1,L95_LF2
 1485  000020d4  54000000	nop; delay slot nop
 1486  000020d8  8fc10000	lw	r1,(r30)
 1487  000020dc  90220000	lbu	r2,(r1)
 1488  000020e0  7041005a	sleui	r1,r2,#90
 1489  000020e4  1020001c	beqz	r1,L95_LF2
 1490  000020e8  54000000	nop; delay slot nop
 1491  000020ec  8fc10000	lw	r1,(r30)
 1492  000020f0  90220000	lbu	r2,(r1)
 1493  000020f4  2041ffc9	addi	r1,r2,#-55
 1494  000020f8  afc1fff0	sw	-16(r30),r1
 1495  000020fc  0800000c	j	L92_LF2
 1496  00002100  54000000	nop; delay slot nop
 1497  00002104          	L95_LF2:
 1498  00002104  200103e8	addi	r1,r0,#1000
 1499  00002108  afc1fff0	sw	-16(r30),r1
 1500  0000210c          	L96_LF2:
 1501  0000210c          	L94_LF2:
 1502  0000210c          	L92_LF2:
 1503  0000210c  8fc1fff0	lw	r1,-16(r30)
 1504  00002110  8fc20008	lw	r2,8(r30)
 1505  00002114  0022082a	slt	r1,r1,r2
 1506  00002118  10200040	beqz	r1,L90_LF2
 1507  0000211c  54000000	nop; delay slot nop
 1508  00002120  8fc1fff4	lw	r1,-12(r30)
 1509  00002124  8fc20008	lw	r2,8(r30)
 1510  00002128  00200035	movi2fp	f0,r1
 1511  0000212c  00400835	movi2fp	f1,r2
 1512  00002130  0401000e	mult	f0,f0,f1
 1513  00002134  00000834	movfp2i	r1,f0
 1514  00002138  afc1fff4	sw	-12(r30),r1
 1515  0000213c  8fc1fff4	lw	r1,-12(r30)
 1516  00002140  8fc2fff0	lw	r2,-16(r30)
 1517  00002144  00220820	add	r1,r1,r2
 1518  00002148  afc1fff4	sw	-12(r30),r1
 1519  0000214c  8fc20000	lw	r2,(r30)
 1520  00002150  20410001	addi	r1,r2,#1
 1521  00002154  00011020	add	r2,r0,r1
 1522  00002158  afc20000	sw	(r30),r2
 1523  0000215c          	L97_LF2:
 1524  0000215c          	L90_LF2:
 1525  0000215c  8fc1fff0	lw	r1,-16(r30)
 1526  00002160  8fc20008	lw	r2,8(r30)
 1527  00002164  0022082a	slt	r1,r1,r2
 1528  00002168  1420000c	bnez	r1,L98_LF2
 1529  0000216c  54000000	nop; delay slot nop
 1530  00002170  0800000c	j	L89_LF2
 1531  00002174  54000000	nop; delay slot nop
 1532  00002178          	L98_LF2:
 1533  00002178  0bfffec8	j	L88_LF2
 1534  0000217c  54000000	nop; delay slot nop
 1535  00002180          	L89_LF2:
 1536  00002180  8fc10004	lw	r1,4(r30)
 1537  00002184  64220000	snei	r2,r1,#0
 1538  00002188  10400010	beqz	r2,L99_LF2
 1539  0000218c  54000000	nop; delay slot nop
 1540  00002190  8fc10004	lw	r1,4(r30)
 1541  00002194  8fc20000	lw	r2,(r30)
 1542  00002198  ac220000	sw	(r1),r2
 1543  0000219c          	L99_LF2:
 1544  0000219c  8fc1fff4	lw	r1,-12(r30)
 1545  000021a0  8fc2ffec	lw	r2,-20(r30)
 1546  000021a4  00200035	movi2fp	f0,r1
 1547  000021a8  00400835	movi2fp	f1,r2
 1548  000021ac  0401000e	mult	f0,f0,f1
 1549  000021b0  00000834	movfp2i	r1,f0
 1550  000021b4  afc1fff4	sw	-12(r30),r1
 1551  000021b8  8fc1fff4	lw	r1,-12(r30)
 1552  000021bc  08000004	j	L72_LF2
 1553  000021c0  54000000	nop; delay slot nop
 1554  000021c4          	L72_LF2:
 1555  000021c4  8fa20000	lw	r2,0(r29)
 1556  000021c8  8fdffff8	lw	r31,-8(r30)
 1557  000021cc  001ee820	add	r29,r0,r30
 1558  000021d0  8fdefffc	lw	r30,-4(r30)
 1559  000021d4  4be00000	jr	r31
 1560  000021d8  54000000	nop
 1561  000021dc          	.endproc _dstrtol
 1562  000021dc          	.align 2
 1563  000021dc          	.proc _bcopy
 1564  000021dc          	.global _bcopy
 1565  000021dc          	_bcopy:
 1566                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1567  000021dc  afbefffc	sw	-4(r29),r30; push fp
 1568  000021e0  001df020	add	r30,r0,r29; fp = sp
 1569  000021e4  afbffff8	sw	-8(r29),r31; push ret addr
 1570  000021e8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1571  000021ec  afa20000	sw	0(r29),r2
 1572  000021f0  afa30004	sw	4(r29),r3
 1573  000021f4  54000000	nop
 1574  000021f8          	L101_LF2:
 1575  000021f8  8fc10008	lw	r1,8(r30)
 1576  000021fc  2022ffff	addi	r2,r1,#-1
 1577  00002200  afc20008	sw	8(r30),r2
 1578  00002204  6c210000	sgti	r1,r1,#0
 1579  00002208  1420000c	bnez	r1,L103_LF2
 1580  0000220c  54000000	nop; delay slot nop
 1581  00002210  0800002c	j	L102_LF2
 1582  00002214  54000000	nop; delay slot nop
 1583  00002218          	L103_LF2:
 1584  00002218  8fc10004	lw	r1,4(r30)
 1585  0000221c  20220001	addi	r2,r1,#1
 1586  00002220  afc20004	sw	4(r30),r2
 1587  00002224  8fc20000	lw	r2,(r30)
 1588  00002228  20430001	addi	r3,r2,#1
 1589  0000222c  afc30000	sw	(r30),r3
 1590  00002230  80420000	lb	r2,(r2)
 1591  00002234  a0220000	sb	(r1),r2
 1592  00002238  0bffffbc	j	L101_LF2
 1593  0000223c  54000000	nop; delay slot nop
 1594  00002240          	L102_LF2:
 1595  00002240          	L100_LF2:
 1596  00002240  8fa20000	lw	r2,0(r29)
 1597  00002244  8fa30004	lw	r3,4(r29)
 1598  00002248  8fdffff8	lw	r31,-8(r30)
 1599  0000224c  001ee820	add	r29,r0,r30
 1600  00002250  8fdefffc	lw	r30,-4(r30)
 1601  00002254  4be00000	jr	r31
 1602  00002258  54000000	nop
 1603  0000225c          	.endproc _bcopy
 1604  0000225c          	.align 2
 1605  0000225c          	.proc _bzero
 1606  0000225c          	.global _bzero
 1607  0000225c          	_bzero:
 1608                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1609  0000225c  afbefffc	sw	-4(r29),r30; push fp
 1610  00002260  001df020	add	r30,r0,r29; fp = sp
 1611  00002264  afbffff8	sw	-8(r29),r31; push ret addr
 1612  00002268  2fbd0010	subui	r29,r29,#16; alloc local storage
 1613  0000226c  afa20000	sw	0(r29),r2
 1614  00002270  54000000	nop
 1615  00002274          	L105_LF2:
 1616  00002274  8fc10004	lw	r1,4(r30)
 1617  00002278  2022ffff	addi	r2,r1,#-1
 1618  0000227c  afc20004	sw	4(r30),r2
 1619  00002280  6c210000	sgti	r1,r1,#0
 1620  00002284  1420000c	bnez	r1,L107_LF2
 1621  00002288  54000000	nop; delay slot nop
 1622  0000228c  08000020	j	L106_LF2
 1623  00002290  54000000	nop; delay slot nop
 1624  00002294          	L107_LF2:
 1625  00002294  8fc10000	lw	r1,(r30)
 1626  00002298  20220001	addi	r2,r1,#1
 1627  0000229c  afc20000	sw	(r30),r2
 1628  000022a0  20020000	addi	r2,r0,(#0x0)&0xff
 1629  000022a4  a0220000	sb	(r1),r2
 1630  000022a8  0bffffc8	j	L105_LF2
 1631  000022ac  54000000	nop; delay slot nop
 1632  000022b0          	L106_LF2:
 1633  000022b0          	L104_LF2:
 1634  000022b0  8fa20000	lw	r2,0(r29)
 1635  000022b4  8fdffff8	lw	r31,-8(r30)
 1636  000022b8  001ee820	add	r29,r0,r30
 1637  000022bc  8fdefffc	lw	r30,-4(r30)
 1638  000022c0  4be00000	jr	r31
 1639  000022c4  54000000	nop
 1640  000022c8          	.endproc _bzero
 1641  000022c8          	.align 2
 1642  000022c8          	.proc _min
 1643  000022c8          	.global _min
 1644  000022c8          	_min:
 1645                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1646  000022c8  afbefffc	sw	-4(r29),r30; push fp
 1647  000022cc  001df020	add	r30,r0,r29; fp = sp
 1648  000022d0  afbffff8	sw	-8(r29),r31; push ret addr
 1649  000022d4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1650  000022d8  afa20000	sw	0(r29),r2
 1651  000022dc  afa30004	sw	4(r29),r3
 1652  000022e0  8fc10000	lw	r1,(r30)
 1653  000022e4  8fc20004	lw	r2,4(r30)
 1654  000022e8  0022182c	sle	r3,r1,r2
 1655  000022ec  14600008	bnez	r3,L109_LF2
 1656  000022f0  54000000	nop; delay slot nop
 1657  000022f4  8fc10004	lw	r1,4(r30)
 1658  000022f8          	L109_LF2:
 1659  000022f8  08000004	j	L108_LF2
 1660  000022fc  54000000	nop; delay slot nop
 1661  00002300          	L108_LF2:
 1662  00002300  8fa20000	lw	r2,0(r29)
 1663  00002304  8fa30004	lw	r3,4(r29)
 1664  00002308  8fdffff8	lw	r31,-8(r30)
 1665  0000230c  001ee820	add	r29,r0,r30
 1666  00002310  8fdefffc	lw	r30,-4(r30)
 1667  00002314  4be00000	jr	r31
 1668  00002318  54000000	nop
 1669  0000231c          	.endproc _min
 1670  0000231c          	.align 2
 1671  0000231c          	.proc _max
 1672  0000231c          	.global _max
 1673  0000231c          	_max:
 1674                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1675  0000231c  afbefffc	sw	-4(r29),r30; push fp
 1676  00002320  001df020	add	r30,r0,r29; fp = sp
 1677  00002324  afbffff8	sw	-8(r29),r31; push ret addr
 1678  00002328  2fbd0010	subui	r29,r29,#16; alloc local storage
 1679  0000232c  afa20000	sw	0(r29),r2
 1680  00002330  afa30004	sw	4(r29),r3
 1681  00002334  8fc10000	lw	r1,(r30)
 1682  00002338  8fc20004	lw	r2,4(r30)
 1683  0000233c  0022182d	sge	r3,r1,r2
 1684  00002340  14600008	bnez	r3,L111_LF2
 1685  00002344  54000000	nop; delay slot nop
 1686  00002348  8fc10004	lw	r1,4(r30)
 1687  0000234c          	L111_LF2:
 1688  0000234c  08000004	j	L110_LF2
 1689  00002350  54000000	nop; delay slot nop
 1690  00002354          	L110_LF2:
 1691  00002354  8fa20000	lw	r2,0(r29)
 1692  00002358  8fa30004	lw	r3,4(r29)
 1693  0000235c  8fdffff8	lw	r31,-8(r30)
 1694  00002360  001ee820	add	r29,r0,r30
 1695  00002364  8fdefffc	lw	r30,-4(r30)
 1696  00002368  4be00000	jr	r31
 1697  0000236c  54000000	nop
 1698  00002370          	.endproc _max
 1699                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1700                      ;;;
 1701                      ;;; Most of the traps are called in files from libtraps.
 1704  00002370          	.align 2
 1705  00002370          	.proc _exit
 1706  00002370          	.global _exit
 1707  00002370          	_exit:
 1708  00002370  44000300	trap	#0x300
 1709  00002374  4be00000	jr	r31
 1710  00002378  54000000	nop
 1711  0000237c          	.endproc _exit
 1713                      ; for the benefit of gcc.
 1714  0000237c          	.proc ___main
 1715  0000237c          	.global ___main
 1716  0000237c          	___main:
 1717  0000237c  4be00000	jr	r31
 1718  00002380  54000000	nop
 1719  00002384          	.endproc ___main
 1720  00002384          	.text
 1721  00002384          	.global _etext
 1722  00002384          	_etext:
 1723  00002384          	.align 3
 1724  00002388          	.data
 1725  000031da          	.global _edata
 1726  000031da          	_edata:
