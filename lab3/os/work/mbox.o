; Compiled by GCC
.text
	.align 2
.proc _isspace
.global _isspace
_isspace:
;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lb	r2,3(r30)
	addi	r1,r0,#0
	andi	r3,r2,#0x00ff
	seqi	r4,r3,#32
	bnez	r4,L3
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	seqi	r4,r3,#9
	bnez	r4,L3
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	seqi	r4,r3,#10
	bnez	r4,L3
	nop	; delay slot nop
	j	L2
	nop	; delay slot nop
L3:
	addi	r1,r0,#1
L2:
	j	L1
	nop	; delay slot nop
L1:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isspace
	.align 2
.proc _isxdigit
.global _isxdigit
_isxdigit:
;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lb	r2,3(r30)
	addi	r1,r0,#0
	andi	r3,r2,#0x00ff
	sgtui	r4,r3,#47
	beqz	r4,L7
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	sleui	r4,r3,#57
	bnez	r4,L6
	nop	; delay slot nop
	j	L7
	nop	; delay slot nop
L7:
	andi	r3,r2,#0x00ff
	sgtui	r4,r3,#96
	beqz	r4,L8
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	sleui	r4,r3,#102
	bnez	r4,L6
	nop	; delay slot nop
	j	L8
	nop	; delay slot nop
L8:
	andi	r3,r2,#0x00ff
	sgtui	r4,r3,#64
	beqz	r4,L5
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	sleui	r4,r3,#65
	bnez	r4,L6
	nop	; delay slot nop
	j	L5
	nop	; delay slot nop
L6:
	addi	r1,r0,#1
L5:
	j	L4
	nop	; delay slot nop
L4:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isxdigit
	.align 2
.proc _DisableIntrs
.global _DisableIntrs
_DisableIntrs:
;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	add	r1,r0,r29
	addi	r2,r0,#15
	sw	(r1),r2
	jal	_SetIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r1
	add	r1,r0,r2
	j	L9
	nop	; delay slot nop
L9:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _DisableIntrs
	.align 2
.proc _EnableIntrs
.global _EnableIntrs
_EnableIntrs:
;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	add	r1,r0,r29
	addi	r2,r0,#0
	sw	(r1),r2
	jal	_SetIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r1
	add	r1,r0,r2
	j	L10
	nop	; delay slot nop
L10:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _EnableIntrs
	.align 2
.proc _RestoreIntrs
.global _RestoreIntrs
_RestoreIntrs:
;  Function 'RestoreIntrs'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r2,(r30)
	addi	r29,r29,#-8
	add	r1,r0,r29
	sw	(r1),r2
	jal	_SetIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r3,r0,r1
	add	r1,r0,r3
	j	L11
	nop	; delay slot nop
L11:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _RestoreIntrs
.data
	.align 2
LC0:
	.ascii "MboxModuleInit: Entering MboxModuleInit\n\000"
.text
	.align 2
.proc _MboxModuleInit
.global _MboxModuleInit
_MboxModuleInit:
;  Function 'MboxModuleInit'; 8 bytes of locals, 4 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#112
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L13
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC0)>>16)&0xffff
	addui	r2,r2,(LC0)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L13:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#43
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L14
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC0)>>16)&0xffff
	addui	r2,r2,(LC0)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L14:
	nop
	addi	r1,r0,#0
	sw	-12(r30),r1
L15:
	lw	r1,-12(r30)
	slei	r2,r1,#15
	bnez	r2,L18
	nop	; delay slot nop
	j	L16
	nop	; delay slot nop
L18:
	lhi	r1,((_mboxes)>>16)&0xffff
	addui	r1,r1,(_mboxes)&0xffff
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	add	r1,r1,r2
	addi	r2,r0,#0
	sw	12(r1),r2
	addi	r1,r0,#0
	sw	-16(r30),r1
L19:
	lw	r1,-16(r30)
	slei	r2,r1,#31
	bnez	r2,L22
	nop	; delay slot nop
	j	L20
	nop	; delay slot nop
L22:
	lw	r1,-12(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r3,r2,#0x5
	lhi	r5,((_mboxes)>>16)&0xffff
	addui	r5,r5,(_mboxes)&0xffff
	add	r1,r3,r5
	lw	r2,-16(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	add	r1,r2,r1
	addi	r2,r1,#32
	addi	r1,r0,#0
	sw	(r2),r1
L21:
	lw	r2,-16(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-16(r30),r2
	j	L19
	nop	; delay slot nop
L20:
	lhi	r1,((_mboxes)>>16)&0xffff
	addui	r1,r1,(_mboxes)&0xffff
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	add	r1,r1,r2
	addi	r2,r0,#0
	sw	28(r1),r2
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	lhi	r3,((_mboxes)>>16)&0xffff
	addui	r3,r3,(_mboxes)&0xffff
	add	r2,r3,r2
	sw	(r1),r2
	jal	_AQueueInit
	nop	; delay slot nop
	addi	r29,r29,#8
L17:
	lw	r2,-12(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-12(r30),r2
	j	L15
	nop	; delay slot nop
L16:
	nop
	addi	r1,r0,#0
	sw	-12(r30),r1
L23:
	lw	r1,-12(r30)
	slei	r2,r1,#49
	bnez	r2,L26
	nop	; delay slot nop
	j	L24
	nop	; delay slot nop
L26:
	lhi	r1,((_mbox_messages)>>16)&0xffff
	addui	r1,r1,(_mbox_messages)&0xffff
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x3
	sub	r3,r3,r2
	slli	r4,r3,#0x2
	sub	r4,r4,r2
	slli	r2,r4,#0x2
	add	r1,r1,r2
	addi	r2,r0,#0
	sw	104(r1),r2
L25:
	lw	r2,-12(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-12(r30),r2
	j	L23
	nop	; delay slot nop
L24:
L12:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MboxModuleInit
.data
	.align 2
LC1:
	.ascii "FATAL ERROR: could not initialize mbox msgs queue in MboxCreate!\n\000"
	.align 2
LC2:
	.ascii "Some process has opened the mailbox\n\000"
.text
	.align 2
.proc _MboxCreate
.global _MboxCreate
_MboxCreate:
;  Function 'MboxCreate'; 8 bytes of locals, 5 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#40	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	nop
	addi	r1,r0,#0
	sw	-12(r30),r1
L28:
	lw	r1,-12(r30)
	slei	r2,r1,#15
	bnez	r2,L31
	nop	; delay slot nop
	j	L29
	nop	; delay slot nop
L31:
	lw	r1,-12(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x5
	lhi	r6,((_mboxes)>>16)&0xffff
	addui	r6,r6,(_mboxes)&0xffff
	add	r2,r1,r6
	lw	r1,12(r2)
	snei	r2,r1,#0
	bnez	r2,L30
	nop	; delay slot nop
	lhi	r1,((_mboxes)>>16)&0xffff
	addui	r1,r1,(_mboxes)&0xffff
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	add	r1,r1,r2
	addi	r2,r0,#1
	sw	12(r1),r2
	j	L29
	nop	; delay slot nop
L32:
L30:
	lw	r2,-12(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-12(r30),r2
	j	L28
	nop	; delay slot nop
L29:
	add	r2,r0,r29
	jal	_LockCreate
	nop	; delay slot nop
	lhi	r2,((_mboxes)>>16)&0xffff
	addui	r2,r2,(_mboxes)&0xffff
	lw	r3,-12(r30)
	add	r5,r0,r3
	slli	r4,r5,#0x2
	add	r4,r4,r3
	slli	r3,r4,#0x5
	add	r2,r2,r3
	sw	16(r2),r1
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	lhi	r6,((_mboxes)>>16)&0xffff
	addui	r6,r6,(_mboxes)&0xffff
	add	r3,r2,r6
	lw	r2,16(r3)
	sw	(r1),r2
	jal	_CondCreate
	nop	; delay slot nop
	addi	r29,r29,#8
	lhi	r2,((_mboxes)>>16)&0xffff
	addui	r2,r2,(_mboxes)&0xffff
	lw	r3,-12(r30)
	add	r5,r0,r3
	slli	r4,r5,#0x2
	add	r4,r4,r3
	slli	r3,r4,#0x5
	add	r2,r2,r3
	sw	20(r2),r1
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	lhi	r6,((_mboxes)>>16)&0xffff
	addui	r6,r6,(_mboxes)&0xffff
	add	r3,r2,r6
	lw	r2,16(r3)
	sw	(r1),r2
	jal	_CondCreate
	nop	; delay slot nop
	addi	r29,r29,#8
	lhi	r2,((_mboxes)>>16)&0xffff
	addui	r2,r2,(_mboxes)&0xffff
	lw	r3,-12(r30)
	add	r5,r0,r3
	slli	r4,r5,#0x2
	add	r4,r4,r3
	slli	r3,r4,#0x5
	add	r2,r2,r3
	sw	24(r2),r1
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	lhi	r3,((_mboxes)>>16)&0xffff
	addui	r3,r3,(_mboxes)&0xffff
	add	r2,r3,r2
	sw	(r1),r2
	jal	_AQueueInit
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#1
	beqz	r2,L33
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC1)>>16)&0xffff
	addui	r2,r2,(LC1)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r29
	jal	_exitsim
	nop	; delay slot nop
L33:
	lw	r1,-12(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x5
	lhi	r6,((_mboxes)>>16)&0xffff
	addui	r6,r6,(_mboxes)&0xffff
	add	r2,r1,r6
	lw	r1,28(r2)
	snei	r2,r1,#0
	beqz	r2,L34
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC2)>>16)&0xffff
	addui	r2,r2,(LC2)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#-1
	j	L27
	nop	; delay slot nop
L34:
	lw	r1,-12(r30)
	j	L27
	nop	; delay slot nop
L27:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MboxCreate
.data
	.align 2
LC3:
	.ascii "Lock could not be acquired in MboxOpen\n\000"
	.align 2
LC4:
	.ascii "Lock could not be released in MboxOpen\n\000"
.text
	.align 2
.proc _MboxOpen
.global _MboxOpen
_MboxOpen:
;  Function 'MboxOpen'; 0 bytes of locals, 4 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	lhi	r5,((_mboxes)>>16)&0xffff
	addui	r5,r5,(_mboxes)&0xffff
	add	r3,r2,r5
	lw	r2,16(r3)
	sw	(r1),r2
	jal	_LockHandleAcquire
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#1
	beqz	r2,L36
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC3)>>16)&0xffff
	addui	r2,r2,(LC3)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L36:
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r4,r3,#0x5
	lhi	r5,((_mboxes)>>16)&0xffff
	addui	r5,r5,(_mboxes)&0xffff
	add	r2,r4,r5
	addi	r3,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r1,f0
	add	r2,r1,r2
	addi	r1,r2,#32
	addi	r2,r0,#1
	sw	(r1),r2
	lw	r1,(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x5
	lhi	r5,((_mboxes)>>16)&0xffff
	addui	r5,r5,(_mboxes)&0xffff
	add	r2,r1,r5
	lhi	r1,((_mboxes)>>16)&0xffff
	addui	r1,r1,(_mboxes)&0xffff
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	add	r1,r1,r2
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	lhi	r5,((_mboxes)>>16)&0xffff
	addui	r5,r5,(_mboxes)&0xffff
	add	r3,r2,r5
	lw	r4,28(r3)
	addi	r2,r4,#1
	add	r3,r0,r2
	sw	28(r1),r3
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	lhi	r5,((_mboxes)>>16)&0xffff
	addui	r5,r5,(_mboxes)&0xffff
	add	r3,r2,r5
	lw	r2,16(r3)
	sw	(r1),r2
	jal	_LockHandleRelease
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#1
	beqz	r2,L37
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC4)>>16)&0xffff
	addui	r2,r2,(LC4)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L37:
	addi	r1,r0,#1
	j	L35
	nop	; delay slot nop
L35:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MboxOpen
.data
	.align 2
LC5:
	.ascii "Lock could not be acquired in MboxClose\n\000"
	.align 2
LC6:
	.ascii "Lock could not be released in MboxClose\n\000"
.text
	.align 2
.proc _MboxClose
.global _MboxClose
_MboxClose:
;  Function 'MboxClose'; 8 bytes of locals, 4 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	lhi	r5,((_mboxes)>>16)&0xffff
	addui	r5,r5,(_mboxes)&0xffff
	add	r3,r2,r5
	lw	r2,16(r3)
	sw	(r1),r2
	jal	_LockHandleAcquire
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#1
	beqz	r2,L39
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC5)>>16)&0xffff
	addui	r2,r2,(LC5)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#-1
	j	L38
	nop	; delay slot nop
L39:
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r4,r3,#0x5
	lhi	r5,((_mboxes)>>16)&0xffff
	addui	r5,r5,(_mboxes)&0xffff
	add	r2,r4,r5
	addi	r3,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r1,f0
	add	r2,r1,r2
	addi	r1,r2,#32
	addi	r2,r0,#0
	sw	(r1),r2
	lw	r1,(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x5
	lhi	r5,((_mboxes)>>16)&0xffff
	addui	r5,r5,(_mboxes)&0xffff
	add	r2,r1,r5
	lhi	r1,((_mboxes)>>16)&0xffff
	addui	r1,r1,(_mboxes)&0xffff
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	add	r1,r1,r2
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	lhi	r5,((_mboxes)>>16)&0xffff
	addui	r5,r5,(_mboxes)&0xffff
	add	r3,r2,r5
	lw	r4,28(r3)
	addi	r2,r4,#-1
	add	r3,r0,r2
	sw	28(r1),r3
	lw	r1,(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x5
	lhi	r5,((_mboxes)>>16)&0xffff
	addui	r5,r5,(_mboxes)&0xffff
	add	r2,r1,r5
	lw	r1,28(r2)
	snei	r2,r1,#0
	bnez	r2,L40
	nop	; delay slot nop
L41:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	lhi	r3,((_mboxes)>>16)&0xffff
	addui	r3,r3,(_mboxes)&0xffff
	add	r2,r3,r2
	sw	(r1),r2
	jal	_AQueueEmpty
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L43
	nop	; delay slot nop
	j	L42
	nop	; delay slot nop
L43:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	lhi	r3,((_mboxes)>>16)&0xffff
	addui	r3,r3,(_mboxes)&0xffff
	add	r2,r3,r2
	sw	(r1),r2
	jal	_AQueueFirst
	nop	; delay slot nop
	addi	r29,r29,#8
	sw	-12(r30),r1
	addi	r29,r29,#-8
	add	r1,r0,r29
	addi	r2,r30,#-12
	sw	(r1),r2
	jal	_AQueueRemove
	nop	; delay slot nop
	addi	r29,r29,#8
	j	L41
	nop	; delay slot nop
L42:
	lhi	r1,((_mboxes)>>16)&0xffff
	addui	r1,r1,(_mboxes)&0xffff
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	add	r1,r1,r2
	addi	r2,r0,#0
	sw	12(r1),r2
L40:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	lhi	r5,((_mboxes)>>16)&0xffff
	addui	r5,r5,(_mboxes)&0xffff
	add	r3,r2,r5
	lw	r2,16(r3)
	sw	(r1),r2
	jal	_LockHandleRelease
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#1
	beqz	r2,L44
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC6)>>16)&0xffff
	addui	r2,r2,(LC6)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#-1
	j	L38
	nop	; delay slot nop
L44:
	addi	r1,r0,#1
	j	L38
	nop	; delay slot nop
L38:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MboxClose
.data
	.align 2
LC7:
	.ascii "Sending message (MboxSend)!\n\000"
	.align 2
LC8:
	.ascii "Lock could not be acquired in MboxSend\n\000"
	.align 2
LC9:
	.ascii "FATAL ERROR: Could not allocate link for mbox_message in MBoxSend!\n\000"
	.align 2
LC10:
	.ascii "Lock could not be released in MboxSend\n\000"
.text
	.align 2
.proc _MboxSend
.global _MboxSend
_MboxSend:
;  Function 'MboxSend'; 16 bytes of locals, 4 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#40	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC7)>>16)&0xffff
	addui	r2,r2,(LC7)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	lw	r1,4(r30)
	slei	r2,r1,#0
	bnez	r2,L47
	nop	; delay slot nop
	lw	r1,4(r30)
	sgti	r2,r1,#100
	bnez	r2,L47
	nop	; delay slot nop
	j	L46
	nop	; delay slot nop
L47:
	addi	r1,r0,#-1
	j	L45
	nop	; delay slot nop
L46:
	lw	r1,(r30)
	slti	r2,r1,#0
	bnez	r2,L49
	nop	; delay slot nop
	lw	r1,(r30)
	sgti	r2,r1,#16
	bnez	r2,L49
	nop	; delay slot nop
	j	L48
	nop	; delay slot nop
L49:
	addi	r1,r0,#-1
	j	L45
	nop	; delay slot nop
L48:
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r4,r3,#0x5
	lhi	r5,((_mboxes)>>16)&0xffff
	addui	r5,r5,(_mboxes)&0xffff
	add	r2,r4,r5
	addi	r3,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r1,f0
	add	r2,r1,r2
	addi	r1,r2,#32
	lw	r2,(r1)
	snei	r1,r2,#0
	bnez	r1,L50
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L45
	nop	; delay slot nop
L50:
	add	r2,r0,r29
	jal	_DisableIntrs
	nop	; delay slot nop
	sw	-12(r30),r1
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	lhi	r5,((_mboxes)>>16)&0xffff
	addui	r5,r5,(_mboxes)&0xffff
	add	r3,r2,r5
	lw	r2,16(r3)
	sw	(r1),r2
	jal	_LockHandleAcquire
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#1
	beqz	r2,L51
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC8)>>16)&0xffff
	addui	r2,r2,(LC8)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#-1
	j	L45
	nop	; delay slot nop
L51:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	lhi	r3,((_mboxes)>>16)&0xffff
	addui	r3,r3,(_mboxes)&0xffff
	add	r2,r3,r2
	sw	(r1),r2
	jal	_AQueueLength
	nop	; delay slot nop
	addi	r29,r29,#8
	sgti	r2,r1,#9
	beqz	r2,L52
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	lhi	r5,((_mboxes)>>16)&0xffff
	addui	r5,r5,(_mboxes)&0xffff
	add	r3,r2,r5
	lw	r2,20(r3)
	sw	(r1),r2
	jal	_CondHandleWait
	nop	; delay slot nop
	addi	r29,r29,#8
L52:
	nop
	addi	r1,r0,#0
	sw	-16(r30),r1
L53:
	lw	r1,-16(r30)
	slei	r2,r1,#49
	bnez	r2,L56
	nop	; delay slot nop
	j	L54
	nop	; delay slot nop
L56:
	lw	r1,-16(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x3
	sub	r2,r2,r1
	slli	r3,r2,#0x2
	sub	r3,r3,r1
	slli	r1,r3,#0x2
	lhi	r5,((_mbox_messages)>>16)&0xffff
	addui	r5,r5,(_mbox_messages)&0xffff
	add	r2,r1,r5
	lw	r1,104(r2)
	snei	r2,r1,#0
	bnez	r2,L55
	nop	; delay slot nop
	lhi	r1,((_mbox_messages)>>16)&0xffff
	addui	r1,r1,(_mbox_messages)&0xffff
	lw	r2,-16(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x3
	sub	r3,r3,r2
	slli	r4,r3,#0x2
	sub	r4,r4,r2
	slli	r2,r4,#0x2
	add	r1,r1,r2
	addi	r2,r0,#1
	sw	104(r1),r2
	j	L54
	nop	; delay slot nop
L57:
L55:
	lw	r2,-16(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-16(r30),r2
	j	L53
	nop	; delay slot nop
L54:
	lhi	r1,((_mbox_messages)>>16)&0xffff
	addui	r1,r1,(_mbox_messages)&0xffff
	lw	r2,-16(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x3
	sub	r3,r3,r2
	slli	r4,r3,#0x2
	sub	r4,r4,r2
	slli	r2,r4,#0x2
	add	r1,r1,r2
	lw	r2,4(r30)
	sw	100(r1),r2
	addi	r29,r29,#-16
	add	r1,r0,r29
	lw	r2,8(r30)
	sw	(r1),r2
	lw	r2,-16(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x3
	sub	r3,r3,r2
	slli	r4,r3,#0x2
	sub	r4,r4,r2
	slli	r2,r4,#0x2
	lhi	r3,((_mbox_messages)>>16)&0xffff
	addui	r3,r3,(_mbox_messages)&0xffff
	add	r2,r3,r2
	sw	4(r1),r2
	lw	r2,4(r30)
	sw	8(r1),r2
	jal	_bcopy
	nop	; delay slot nop
	addi	r29,r29,#16
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-16(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x3
	sub	r3,r3,r2
	slli	r4,r3,#0x2
	sub	r4,r4,r2
	slli	r2,r4,#0x2
	lhi	r3,((_mbox_messages)>>16)&0xffff
	addui	r3,r3,(_mbox_messages)&0xffff
	add	r2,r3,r2
	sw	(r1),r2
	jal	_AQueueAllocLink
	nop	; delay slot nop
	addi	r29,r29,#8
	sw	-20(r30),r1
	lw	r1,-20(r30)
	snei	r2,r1,#0
	bnez	r2,L58
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC9)>>16)&0xffff
	addui	r2,r2,(LC9)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L58:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	lhi	r3,((_mboxes)>>16)&0xffff
	addui	r3,r3,(_mboxes)&0xffff
	add	r2,r3,r2
	sw	(r1),r2
	lw	r2,-20(r30)
	sw	4(r1),r2
	jal	_AQueueInsertLast
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	lhi	r5,((_mboxes)>>16)&0xffff
	addui	r5,r5,(_mboxes)&0xffff
	add	r3,r2,r5
	lw	r2,24(r3)
	sw	(r1),r2
	jal	_CondHandleSignal
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	lhi	r5,((_mboxes)>>16)&0xffff
	addui	r5,r5,(_mboxes)&0xffff
	add	r3,r2,r5
	lw	r2,16(r3)
	sw	(r1),r2
	jal	_LockHandleRelease
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#1
	beqz	r2,L59
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC10)>>16)&0xffff
	addui	r2,r2,(LC10)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#-1
	j	L45
	nop	; delay slot nop
L59:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	sw	(r1),r2
	jal	_RestoreIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#1
	j	L45
	nop	; delay slot nop
L45:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MboxSend
.data
	.align 2
LC11:
	.ascii "Receiving message (MboxRecv)!\n\000"
	.align 2
LC12:
	.ascii "ERROR: message is larger than maxlength, %d > %d\n\000"
.text
	.align 2
.proc _MboxRecv
.global _MboxRecv
_MboxRecv:
;  Function 'MboxRecv'; 16 bytes of locals, 4 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#40	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC11)>>16)&0xffff
	addui	r2,r2,(LC11)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	lw	r1,(r30)
	slti	r2,r1,#0
	bnez	r2,L62
	nop	; delay slot nop
	lw	r1,(r30)
	sgti	r2,r1,#16
	bnez	r2,L62
	nop	; delay slot nop
	j	L61
	nop	; delay slot nop
L62:
	addi	r1,r0,#-1
	j	L60
	nop	; delay slot nop
L61:
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r4,r3,#0x5
	lhi	r5,((_mboxes)>>16)&0xffff
	addui	r5,r5,(_mboxes)&0xffff
	add	r2,r4,r5
	addi	r3,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r1,f0
	add	r2,r1,r2
	addi	r1,r2,#32
	lw	r2,(r1)
	snei	r1,r2,#0
	bnez	r1,L63
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L60
	nop	; delay slot nop
L63:
	add	r2,r0,r29
	jal	_DisableIntrs
	nop	; delay slot nop
	sw	-12(r30),r1
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	lhi	r5,((_mboxes)>>16)&0xffff
	addui	r5,r5,(_mboxes)&0xffff
	add	r3,r2,r5
	lw	r2,16(r3)
	sw	(r1),r2
	jal	_LockHandleAcquire
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#1
	beqz	r2,L64
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC8)>>16)&0xffff
	addui	r2,r2,(LC8)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#-1
	j	L60
	nop	; delay slot nop
L64:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	lhi	r3,((_mboxes)>>16)&0xffff
	addui	r3,r3,(_mboxes)&0xffff
	add	r2,r3,r2
	sw	(r1),r2
	jal	_AQueueEmpty
	nop	; delay slot nop
	addi	r29,r29,#8
	seqi	r2,r1,#1
	beqz	r2,L65
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	lhi	r5,((_mboxes)>>16)&0xffff
	addui	r5,r5,(_mboxes)&0xffff
	add	r3,r2,r5
	lw	r2,24(r3)
	sw	(r1),r2
	jal	_CondHandleWait
	nop	; delay slot nop
	addi	r29,r29,#8
L65:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	lhi	r3,((_mboxes)>>16)&0xffff
	addui	r3,r3,(_mboxes)&0xffff
	add	r2,r3,r2
	sw	(r1),r2
	jal	_AQueueFirst
	nop	; delay slot nop
	addi	r29,r29,#8
	sw	-16(r30),r1
	lw	r1,-16(r30)
	lw	r2,12(r1)
	sw	-20(r30),r2
	lw	r1,-20(r30)
	lw	r2,100(r1)
	lw	r1,4(r30)
	sgt	r2,r2,r1
	beqz	r2,L66
	nop	; delay slot nop
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r2,((LC12)>>16)&0xffff
	addui	r2,r2,(LC12)&0xffff
	sw	(r1),r2
	lw	r2,-20(r30)
	lw	r3,100(r2)
	sw	4(r1),r3
	lw	r2,4(r30)
	sw	8(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
	addi	r1,r0,#-1
	j	L60
	nop	; delay slot nop
L66:
	addi	r29,r29,#-16
	add	r1,r0,r29
	lw	r2,-20(r30)
	sw	(r1),r2
	lw	r2,8(r30)
	sw	4(r1),r2
	lw	r2,-20(r30)
	lw	r3,100(r2)
	sw	8(r1),r3
	jal	_bcopy
	nop	; delay slot nop
	addi	r29,r29,#16
	lw	r1,-20(r30)
	addi	r2,r0,#0
	sw	104(r1),r2
	addi	r29,r29,#-8
	add	r1,r0,r29
	addi	r2,r30,#-16
	sw	(r1),r2
	jal	_AQueueRemove
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	lhi	r5,((_mboxes)>>16)&0xffff
	addui	r5,r5,(_mboxes)&0xffff
	add	r3,r2,r5
	lw	r2,20(r3)
	sw	(r1),r2
	jal	_CondHandleSignal
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	lhi	r5,((_mboxes)>>16)&0xffff
	addui	r5,r5,(_mboxes)&0xffff
	add	r3,r2,r5
	lw	r2,16(r3)
	sw	(r1),r2
	jal	_LockHandleRelease
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#1
	beqz	r2,L67
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC10)>>16)&0xffff
	addui	r2,r2,(LC10)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#-1
	j	L60
	nop	; delay slot nop
L67:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	sw	(r1),r2
	jal	_RestoreIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	lw	r2,-20(r30)
	lw	r1,100(r2)
	j	L60
	nop	; delay slot nop
L60:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MboxRecv
.data
	.align 2
LC13:
	.ascii "Lock could not be acquired in MboxCloseAllByPid\n\000"
	.align 2
LC14:
	.ascii "Lock could not be released in MboxCloseAllByPid\n\000"
.text
	.align 2
.proc _MboxCloseAllByPid
.global _MboxCloseAllByPid
_MboxCloseAllByPid:
;  Function 'MboxCloseAllByPid'; 8 bytes of locals, 4 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	lw	r1,(r30)
	slti	r2,r1,#0
	bnez	r2,L70
	nop	; delay slot nop
	lw	r1,(r30)
	sgti	r2,r1,#16
	bnez	r2,L70
	nop	; delay slot nop
	j	L69
	nop	; delay slot nop
L70:
	addi	r1,r0,#-1
	j	L68
	nop	; delay slot nop
L69:
	nop
	addi	r1,r0,#0
	sw	-12(r30),r1
L71:
	lw	r1,-12(r30)
	slei	r2,r1,#15
	bnez	r2,L74
	nop	; delay slot nop
	j	L72
	nop	; delay slot nop
L74:
	lw	r1,-12(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r3,r2,#0x5
	lhi	r5,((_mboxes)>>16)&0xffff
	addui	r5,r5,(_mboxes)&0xffff
	add	r1,r3,r5
	lw	r2,(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	add	r1,r2,r1
	addi	r2,r1,#32
	lw	r1,(r2)
	seqi	r2,r1,#1
	beqz	r2,L73
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	lhi	r5,((_mboxes)>>16)&0xffff
	addui	r5,r5,(_mboxes)&0xffff
	add	r3,r2,r5
	lw	r2,16(r3)
	sw	(r1),r2
	jal	_LockHandleAcquire
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#1
	beqz	r2,L76
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC13)>>16)&0xffff
	addui	r2,r2,(LC13)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#-1
	j	L68
	nop	; delay slot nop
L76:
	lw	r1,-12(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r3,r2,#0x5
	lhi	r5,((_mboxes)>>16)&0xffff
	addui	r5,r5,(_mboxes)&0xffff
	add	r1,r3,r5
	lw	r2,(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	add	r1,r2,r1
	addi	r2,r1,#32
	addi	r1,r0,#0
	sw	(r2),r1
	lhi	r1,((_mboxes)>>16)&0xffff
	addui	r1,r1,(_mboxes)&0xffff
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	add	r1,r1,r2
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	lhi	r5,((_mboxes)>>16)&0xffff
	addui	r5,r5,(_mboxes)&0xffff
	add	r3,r2,r5
	lw	r2,28(r3)
	addi	r3,r2,#-1
	sw	28(r1),r3
	lw	r1,-12(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x5
	lhi	r5,((_mboxes)>>16)&0xffff
	addui	r5,r5,(_mboxes)&0xffff
	add	r2,r1,r5
	lw	r1,28(r2)
	snei	r2,r1,#0
	bnez	r2,L77
	nop	; delay slot nop
L78:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	lhi	r3,((_mboxes)>>16)&0xffff
	addui	r3,r3,(_mboxes)&0xffff
	add	r2,r3,r2
	sw	(r1),r2
	jal	_AQueueEmpty
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L80
	nop	; delay slot nop
	j	L79
	nop	; delay slot nop
L80:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	lhi	r3,((_mboxes)>>16)&0xffff
	addui	r3,r3,(_mboxes)&0xffff
	add	r2,r3,r2
	sw	(r1),r2
	jal	_AQueueFirst
	nop	; delay slot nop
	addi	r29,r29,#8
	sw	-16(r30),r1
	addi	r29,r29,#-8
	add	r1,r0,r29
	addi	r2,r30,#-16
	sw	(r1),r2
	jal	_AQueueRemove
	nop	; delay slot nop
	addi	r29,r29,#8
	j	L78
	nop	; delay slot nop
L79:
	lhi	r1,((_mboxes)>>16)&0xffff
	addui	r1,r1,(_mboxes)&0xffff
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	add	r1,r1,r2
	addi	r2,r0,#0
	sw	12(r1),r2
L77:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	lhi	r5,((_mboxes)>>16)&0xffff
	addui	r5,r5,(_mboxes)&0xffff
	add	r3,r2,r5
	lw	r2,16(r3)
	sw	(r1),r2
	jal	_LockHandleRelease
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#1
	beqz	r2,L73
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC14)>>16)&0xffff
	addui	r2,r2,(LC14)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#-1
	j	L68
	nop	; delay slot nop
L81:
L75:
L73:
	lw	r2,-12(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-12(r30),r2
	j	L71
	nop	; delay slot nop
L72:
	addi	r1,r0,#1
	j	L68
	nop	; delay slot nop
L68:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MboxCloseAllByPid
.data
	.align 2
_mboxes:
	.space 2560
	.align 2
_mbox_messages:
	.space 5400
